D: [iurt_root_command] chroot
Installing /home/stig/rpmbuild/SRPMS/botan2-2.14.0-1.mga8.src.rpm
Executing(%prep): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.8vPlOp
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ '[' 1 -eq 1 ']'
+ '[' 1 -eq 1 ']'
+ '[' 1 -eq 1 ']'
+ cd /home/stig/rpmbuild/BUILD
+ rm -rf Botan-2.14.0
+ /usr/bin/xz -dc /home/stig/rpmbuild/SOURCES/botan2-2.14.0.tar.xz
+ /usr/bin/tar -xof -
+ STATUS=0
+ '[' 0 -ne 0 ']'
+ cd Botan-2.14.0
+ /usr/bin/chmod -Rf a+rX,u+w,g-w,o-w .
+ /usr/bin/cat /home/stig/rpmbuild/SOURCES/botan2-2.14.0-add-noindex-to-doc.patch
+ /usr/bin/patch -p1 -s --fuzz=0 --no-backup-if-mismatch
+ /usr/bin/cat /home/stig/rpmbuild/SOURCES/botan2-2.14.0-Avoid-using-concurrency-with-Sphinx-3.0.patch
+ /usr/bin/patch -p1 -s --fuzz=0 --no-backup-if-mismatch
+ pathfix.py -pni /usr/bin/python3 configure.py src/scripts/build_docs.py src/scripts/check.py src/scripts/ci_build.py src/scripts/cleanup.py src/scripts/dist.py src/scripts/gen_os_features.py src/scripts/install.py src/scripts/python_unittests.py src/scripts/python_unittests_unix.py src/scripts/show_dependencies.py src/scripts/test_cli_crypt.py src/scripts/test_python.py src/scripts/tls_suite_info.py src/python/botan2.py
configure.py: updating
src/scripts/build_docs.py: updating
src/scripts/check.py: updating
src/scripts/ci_build.py: updating
src/scripts/cleanup.py: updating
src/scripts/dist.py: updating
src/scripts/gen_os_features.py: updating
src/scripts/install.py: updating
src/scripts/python_unittests.py: updating
src/scripts/python_unittests_unix.py: updating
src/scripts/show_dependencies.py: updating
src/scripts/test_cli_crypt.py: updating
src/scripts/test_python.py: updating
src/scripts/tls_suite_info.py: updating
src/python/botan2.py: updating
+ RPM_EC=0
++ jobs -p
+ exit 0
Executing(%build): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.GcBX5r
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ '[' 1 -eq 1 ']'
+ '[' 1 -eq 1 ']'
+ ./configure.py --prefix=/usr --libdir=lib64 --docdir=/usr/share/doc --cc=gcc --os=linux --cpu=x86_64 --enable-modules=bzip2,zlib,openssl,boost,sqlite3,lzma --with-python-version=3.8 --with-sphinx --disable-static-library --with-debug-info
   INFO: ./configure.py invoked with options "--prefix=/usr --libdir=lib64 --docdir=/usr/share/doc --cc=gcc --os=linux --cpu=x86_64 --enable-modules=bzip2,zlib,openssl,boost,sqlite3,lzma --with-python-version=3.8 --with-sphinx --disable-static-library --with-debug-info"
   INFO: Configuring to build Botan 2.14.0 (revision git:3a26a33de2459c40cdfb766f4035a60cf449ab1c)
   INFO: Running under 3.8.2 (default, Feb 29 2020, 05:52:21) [GCC 9.2.1 20200222]
   INFO: Autodetected platform information: OS="Linux" machine="x86_64" proc="x86_64"
   INFO: Found rst2man (use --without-rst2man to disable)
   INFO: Using /etc/pki/tls/certs/ca-bundle.crt as system certificate store
   INFO: Auto-detected compiler version 9.3
   INFO: Auto-detected compiler arch x86_64
   INFO: Target is gcc:9.3-linux-x86_64
   INFO: Assuming target x86_64 is little endian
   INFO: Skipping (incompatible CPU): aes_armv8 aes_power8 p9_darn sha1_armv8 sha2_32_armv8 sm4_armv8
   INFO: Skipping (incompatible OS): certstor_system_macos certstor_system_windows commoncrypto getentropy win32_stats
   INFO: Skipping (requires external dependency): tpm
   INFO: Enabling use of external dependency boost
   INFO: Enabling use of external dependency bzip2
   INFO: Enabling use of external dependency lzma
   INFO: Enabling use of external dependency openssl
   INFO: Enabling use of external dependency sqlite3
   INFO: Enabling use of external dependency zlib
   INFO: Loading modules: adler32 aead aes aes_ni aes_vperm aont argon2 aria asio asn1 auto_rng base base32 base58 base64 bcrypt bcrypt_pbkdf bigint blake2 block blowfish boost bzip2 camellia cascade cast128 cast256 cbc cbc_mac ccm cecpq1 certstor_flatfile certstor_sql certstor_sqlite3 certstor_system cfb chacha chacha20poly1305 chacha_avx2 chacha_rng chacha_simd32 checksum clmul_cpu clmul_ssse3 cmac comb4p compression cpuid crc24 crc32 cryptobox ctr curve25519 des dev_random dh dl_algo dl_group dlies dsa dyn_load eax ec_group ecc_key ecdh ecdsa ecgdsa ecies eckcdsa ed25519 elgamal eme_oaep eme_pkcs1 eme_raw emsa1 emsa_pkcs1 emsa_pssr emsa_raw emsa_x931 entropy fd_unix ffi filters fpe_fe1 gcm gmac gost_28147 gost_3410 gost_3411 hash hash_id hex hkdf hmac hmac_drbg hotp http_util idea idea_sse2 iso9796 kasumi kdf kdf1 kdf1_iso18033 kdf2 keccak keypair lion locking_allocator lzma mac mce mceies md4 md5 mdx_hash mem_pool mgf1 misty1 mode_pad modes mp newhope nist_keywrap noekeon noekeon_simd numbertheory ocb ofb openssl par_hash passhash9 pbes2 pbkdf pbkdf1 pbkdf2 pem pgp_s2k pk_pad pkcs11 poly1305 poly_dbl prf_tls prf_x942 proc_walk psk_db pubkey rc4 rdrand rdrand_rng rdseed rfc3394 rfc6979 rmd160 rng roughtime rsa salsa20 scrypt seed serpent serpent_avx2 serpent_simd sessions_sql sessions_sqlite3 sha1 sha1_sse2 sha1_x86 sha2_32 sha2_32_bmi2 sha2_32_x86 sha2_64 sha2_64_bmi2 sha3 sha3_bmi2 shacal2 shacal2_avx2 shacal2_simd shacal2_x86 shake shake_cipher simd simd_avx2 siphash siv skein sm2 sm3 sm4 socket sodium sp800_108 sp800_56a sp800_56c sqlite3 srp6 stateful_rng stream streebog system_rng thread_utils threefish_512 threefish_512_avx2 tiger tls tls_10 tls_cbc tss twofish utils uuid whirlpool x509 x919_mac xmss xtea xts zlib
   INFO: Using symlink to link files into build dir (use --link-method to change)
   INFO: Botan 2.14.0 (revision git:3a26a33de2459c40cdfb766f4035a60cf449ab1c) (release dated 20200406) build setup is complete
+ /usr/bin/make -O -j4 V=1 VERBOSE=1
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/asn1_attribute.cpp -o build/obj/lib/asn1_attribute.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/alg_id.cpp -o build/obj/lib/asn1_alg_id.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/asn1_obj.cpp -o build/obj/lib/asn1_obj.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/asn1_oid.cpp -o build/obj/lib/asn1_oid.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/asn1_str.cpp -o build/obj/lib/asn1_str.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/asn1_time.cpp -o build/obj/lib/asn1_time.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/asn1_print.cpp -o build/obj/lib/asn1_print.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/ber_dec.cpp -o build/obj/lib/asn1_ber_dec.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/base/buf_comp.cpp -o build/obj/lib/base_buf_comp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/der_enc.cpp -o build/obj/lib/asn1_der_enc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/base/sym_algo.cpp -o build/obj/lib/base_sym_algo.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/oids.cpp -o build/obj/lib/asn1_oids.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/base/scan_name.cpp -o build/obj/lib/base_scan_name.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/base/symkey.cpp -o build/obj/lib/base_symkey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -maes -mpclmul -msse2 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/block/aes/aes_ni/aes_ni.cpp -o build/obj/lib/block_aes_ni.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/aes/aes.cpp -o build/obj/lib/block_aes.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/aria/aria.cpp -o build/obj/lib/block_aria.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/block_cipher.cpp -o build/obj/lib/block_cipher.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/block/aes/aes_vperm/aes_vperm.cpp -o build/obj/lib/block_aes_vperm.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/blowfish/blowfish.cpp -o build/obj/lib/block_blowfish.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/cascade/cascade.cpp -o build/obj/lib/block_cascade.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/camellia/camellia.cpp -o build/obj/lib/block_camellia.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/cast256/cast256.cpp -o build/obj/lib/block_cast256.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/cast128/cast128.cpp -o build/obj/lib/block_cast128.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/des/des_tab.cpp -o build/obj/lib/block_des_tab.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/des/des.cpp -o build/obj/lib/block_des.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/des/desx.cpp -o build/obj/lib/block_des_desx.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/idea/idea.cpp -o build/obj/lib/block_idea.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/block/idea/idea_sse2/idea_sse2.cpp -o build/obj/lib/block_idea_sse2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/gost_28147/gost_28147.cpp -o build/obj/lib/block_gost_28147.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/kasumi/kasumi.cpp -o build/obj/lib/block_kasumi.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/misty1/misty1.cpp -o build/obj/lib/block_misty1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/lion/lion.cpp -o build/obj/lib/block_lion.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/noekeon/noekeon.cpp -o build/obj/lib/block_noekeon.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/block/noekeon/noekeon_simd/noekeon_simd.cpp -o build/obj/lib/block_noekeon_simd.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/seed/seed.cpp -o build/obj/lib/block_seed.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/serpent/serpent.cpp -o build/obj/lib/block_serpent.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/asn1/oid_maps.cpp -o build/obj/lib/asn1_oid_maps.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/shacal2/shacal2.cpp -o build/obj/lib/block_shacal2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mavx2 -Ibuild/include -Ibuild/include/external -c src/lib/block/shacal2/shacal2_avx2/shacal2_avx2.cpp -o build/obj/lib/block_shacal2_avx2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/block/shacal2/shacal2_simd/shacal2_simd.cpp -o build/obj/lib/block_shacal2_simd.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msha -msse2 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/block/shacal2/shacal2_x86/shacal2_x86.cpp -o build/obj/lib/block_shacal2_x86.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/sm4/sm4.cpp -o build/obj/lib/block_sm4.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/threefish_512/threefish_512.cpp -o build/obj/lib/block_threefish_512.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mavx2 -Ibuild/include -Ibuild/include/external -c src/lib/block/serpent/serpent_avx2/serpent_avx2.cpp -o build/obj/lib/block_serpent_avx2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/twofish/twofish_tab.cpp -o build/obj/lib/block_twofish_tab.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/twofish/twofish.cpp -o build/obj/lib/block_twofish.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/block/xtea/xtea.cpp -o build/obj/lib/block_xtea.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/codec/base32/base32.cpp -o build/obj/lib/codec_base32.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/block/serpent/serpent_simd/serpent_simd.cpp -o build/obj/lib/block_serpent_simd.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mavx2 -Ibuild/include -Ibuild/include/external -c src/lib/block/threefish_512/threefish_512_avx2/threefish_512_avx2.cpp -o build/obj/lib/block_threefish_512_threefish_512_avx2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/codec/base64/base64.cpp -o build/obj/lib/codec_base64.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/codec/base58/base58.cpp -o build/obj/lib/codec_base58.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/codec/hex/hex.cpp -o build/obj/lib/codec_hex.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_25519.cpp -o build/obj/lib/compat_sodium_25519.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_box.cpp -o build/obj/lib/compat_sodium_box.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_auth.cpp -o build/obj/lib/compat_sodium_auth.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_aead.cpp -o build/obj/lib/compat_sodium_aead.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_chacha.cpp -o build/obj/lib/compat_sodium_chacha.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_salsa.cpp -o build/obj/lib/compat_sodium_salsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_secretbox.cpp -o build/obj/lib/compat_sodium_secretbox.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compat/sodium/sodium_utils.cpp -o build/obj/lib/compat_sodium_utils.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compression/bzip2/bzip2.cpp -o build/obj/lib/compression_bzip2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compression/compression.cpp -o build/obj/lib/compression.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compression/compress_utils.cpp -o build/obj/lib/compression_compress_utils.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compression/lzma/lzma.cpp -o build/obj/lib/compression_lzma.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/entropy/dev_random/dev_random.cpp -o build/obj/lib/entropy_dev_random.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/compression/zlib/zlib.cpp -o build/obj/lib/compression_zlib.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/entropy/entropy_srcs.cpp -o build/obj/lib/entropy_srcs.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/entropy/rdrand/rdrand.cpp -o build/obj/lib/entropy_rdrand.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/entropy/proc_walk/proc_walk.cpp -o build/obj/lib/entropy_proc_walk.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi.cpp -o build/obj/lib/ffi.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_block.cpp -o build/obj/lib/ffi_block.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mrdseed -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/entropy/rdseed/rdseed.cpp -o build/obj/lib/entropy_rdseed.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_hash.cpp -o build/obj/lib/ffi_hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_fpe.cpp -o build/obj/lib/ffi_fpe.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_cipher.cpp -o build/obj/lib/ffi_cipher.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_hotp.cpp -o build/obj/lib/ffi_hotp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_keywrap.cpp -o build/obj/lib/ffi_keywrap.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_kdf.cpp -o build/obj/lib/ffi_kdf.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_mac.cpp -o build/obj/lib/ffi_mac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_cert.cpp -o build/obj/lib/ffi_cert.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_pk_op.cpp -o build/obj/lib/ffi_pk_op.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_pkey.cpp -o build/obj/lib/ffi_pkey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_mp.cpp -o build/obj/lib/ffi_mp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_rng.cpp -o build/obj/lib/ffi_rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_totp.cpp -o build/obj/lib/ffi_totp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/algo_filt.cpp -o build/obj/lib/filters_algo_filt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/basefilt.cpp -o build/obj/lib/filters_basefilt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/b64_filt.cpp -o build/obj/lib/filters_b64_filt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/buf_filt.cpp -o build/obj/lib/filters_buf_filt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/comp_filter.cpp -o build/obj/lib/filters_comp_filter.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/cipher_filter.cpp -o build/obj/lib/filters_cipher_filter.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/data_snk.cpp -o build/obj/lib/filters_data_snk.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/fd_unix/fd_unix.cpp -o build/obj/lib/filters_fd_unix.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/ffi/ffi_pkey_algs.cpp -o build/obj/lib/ffi_pkey_algs.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/filter.cpp -o build/obj/lib/filters_filter.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/hex_filt.cpp -o build/obj/lib/filters_hex_filt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/out_buf.cpp -o build/obj/lib/filters_out_buf.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/pipe_io.cpp -o build/obj/lib/filters_pipe_io.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/pipe.cpp -o build/obj/lib/filters_pipe.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/secqueue.cpp -o build/obj/lib/filters_secqueue.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/pipe_rw.cpp -o build/obj/lib/filters_pipe_rw.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/checksum/crc24/crc24.cpp -o build/obj/lib/hash_checksum_crc24.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/checksum/adler32/adler32.cpp -o build/obj/lib/hash_checksum_adler32.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/filters/threaded_fork.cpp -o build/obj/lib/filters_threaded_fork.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/blake2/blake2b.cpp -o build/obj/lib/hash_blake2_blake2b.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/checksum/crc32/crc32.cpp -o build/obj/lib/hash_checksum_crc32.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/keccak/keccak.cpp -o build/obj/lib/hash_keccak.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/gost_3411/gost_3411.cpp -o build/obj/lib/hash_gost_3411.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/comb4p/comb4p.cpp -o build/obj/lib/hash_comb4p.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/hash.cpp -o build/obj/lib/hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/md4/md4.cpp -o build/obj/lib/hash_md4.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/mdx_hash/mdx_hash.cpp -o build/obj/lib/hash_mdx_hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/md5/md5.cpp -o build/obj/lib/hash_md5.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/par_hash/par_hash.cpp -o build/obj/lib/hash_par_hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha1/sha1_sse2/sha1_sse2.cpp -o build/obj/lib/hash_sha1_sse2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/rmd160/rmd160.cpp -o build/obj/lib/hash_rmd160.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha1/sha160.cpp -o build/obj/lib/hash_sha1_sha160.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msha -msse2 -msse4.1 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha1/sha1_x86/sha1_x86.cpp -o build/obj/lib/hash_sha1_x86.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msha -msse2 -msse4.1 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha2_32/sha2_32_x86/sha2_32_x86.cpp -o build/obj/lib/hash_sha2_32_sha2_32_x86.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mbmi -mbmi2 -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha2_32/sha2_32_bmi2/sha2_32_bmi2.cpp -o build/obj/lib/hash_sha2_32_sha2_32_bmi2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha2_32/sha2_32.cpp -o build/obj/lib/hash_sha2_32.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha3/sha3.cpp -o build/obj/lib/hash_sha3.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mbmi -mbmi2 -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha3/sha3_bmi2/sha3_bmi2.cpp -o build/obj/lib/hash_sha3_bmi2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mbmi -mbmi2 -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha2_64/sha2_64_bmi2/sha2_64_bmi2.cpp -o build/obj/lib/hash_sha2_64_sha2_64_bmi2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/shake/shake.cpp -o build/obj/lib/hash_shake.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/sha2_64/sha2_64.cpp -o build/obj/lib/hash_sha2_64.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/skein/skein_512.cpp -o build/obj/lib/hash_skein_512.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/streebog/streebog_precalc.cpp -o build/obj/lib/hash_streebog_precalc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/tiger/tig_tab.cpp -o build/obj/lib/hash_tiger_tig_tab.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/streebog/streebog.cpp -o build/obj/lib/hash_streebog.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/sm3/sm3.cpp -o build/obj/lib/hash_sm3.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/whirlpool/whrl_tab.cpp -o build/obj/lib/hash_whirlpool_whrl_tab.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/tiger/tiger.cpp -o build/obj/lib/hash_tiger.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/hash/whirlpool/whirlpool.cpp -o build/obj/lib/hash_whirlpool.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/hkdf/hkdf.cpp -o build/obj/lib/kdf_hkdf.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/kdf1/kdf1.cpp -o build/obj/lib/kdf_kdf1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/kdf1_iso18033/kdf1_iso18033.cpp -o build/obj/lib/kdf_kdf1_iso18033.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/kdf2/kdf2.cpp -o build/obj/lib/kdf_kdf2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/prf_tls/prf_tls.cpp -o build/obj/lib/kdf_prf_tls.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/kdf.cpp -o build/obj/lib/kdf.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/prf_x942/prf_x942.cpp -o build/obj/lib/kdf_prf_x942.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/sp800_108/sp800_108.cpp -o build/obj/lib/kdf_sp800_108.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/sp800_56a/sp800_56a.cpp -o build/obj/lib/kdf_sp800_56a.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/kdf/sp800_56c/sp800_56c.cpp -o build/obj/lib/kdf_sp800_56c.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/cbc_mac/cbc_mac.cpp -o build/obj/lib/mac_cbc_mac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/cmac/cmac.cpp -o build/obj/lib/mac_cmac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/gmac/gmac.cpp -o build/obj/lib/mac_gmac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/hmac/hmac.cpp -o build/obj/lib/mac_hmac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/poly1305/poly1305.cpp -o build/obj/lib/mac_poly1305.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/siphash/siphash.cpp -o build/obj/lib/mac_siphash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/mac.cpp -o build/obj/lib/mac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/mac/x919_mac/x919_mac.cpp -o build/obj/lib/mac_x919_mac.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/big_io.cpp -o build/obj/lib/math_bigint_big_io.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/big_code.cpp -o build/obj/lib/math_bigint_big_code.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/big_ops3.cpp -o build/obj/lib/math_bigint_big_ops3.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/big_ops2.cpp -o build/obj/lib/math_bigint_big_ops2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/big_rand.cpp -o build/obj/lib/math_bigint_big_rand.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/divide.cpp -o build/obj/lib/math_bigint_divide.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/bigint/bigint.cpp -o build/obj/lib/math_bigint.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/mp/mp_karat.cpp -o build/obj/lib/math_mp_karat.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/mp/mp_monty.cpp -o build/obj/lib/math_mp_monty.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/jacobi.cpp -o build/obj/lib/math_numbertheory_jacobi.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/dsa_gen.cpp -o build/obj/lib/math_numbertheory_dsa_gen.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/mp/mp_comba.cpp -o build/obj/lib/math_mp_comba.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/make_prm.cpp -o build/obj/lib/math_numbertheory_make_prm.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/mod_inv.cpp -o build/obj/lib/math_numbertheory_mod_inv.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/monty.cpp -o build/obj/lib/math_numbertheory_monty.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/mp_numth.cpp -o build/obj/lib/math_numbertheory_mp_numth.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/nistp_redc.cpp -o build/obj/lib/math_numbertheory_nistp_redc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/monty_exp.cpp -o build/obj/lib/math_numbertheory_monty_exp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/mp/mp_monty_n.cpp -o build/obj/lib/math_mp_monty_n.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/numthry.cpp -o build/obj/lib/math_numbertheory_numthry.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/primes.cpp -o build/obj/lib/math_numbertheory_primes.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/primality.cpp -o build/obj/lib/math_numbertheory_primality.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/pow_mod.cpp -o build/obj/lib/math_numbertheory_pow_mod.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/reducer.cpp -o build/obj/lib/math_numbertheory_reducer.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/math/numbertheory/ressol.cpp -o build/obj/lib/math_numbertheory_ressol.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/aont/package.cpp -o build/obj/lib/misc_aont_package.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/hotp/hotp.cpp -o build/obj/lib/misc_hotp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/cryptobox/cryptobox.cpp -o build/obj/lib/misc_cryptobox.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/hotp/totp.cpp -o build/obj/lib/misc_hotp_totp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/fpe_fe1/fpe_fe1.cpp -o build/obj/lib/misc_fpe_fe1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/nist_keywrap/nist_keywrap.cpp -o build/obj/lib/misc_nist_keywrap.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/rfc3394/rfc3394.cpp -o build/obj/lib/misc_rfc3394.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/srp6/srp6.cpp -o build/obj/lib/misc_srp6.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/aead.cpp -o build/obj/lib/modes_aead.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/tss/tss.cpp -o build/obj/lib/misc_tss.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/chacha20poly1305/chacha20poly1305.cpp -o build/obj/lib/modes_aead_chacha20poly1305.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/ccm/ccm.cpp -o build/obj/lib/modes_aead_ccm.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/eax/eax.cpp -o build/obj/lib/modes_aead_eax.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -maes -mpclmul -msse2 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/gcm/clmul_cpu/clmul_cpu.cpp -o build/obj/lib/modes_aead_gcm_clmul_cpu.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -mssse3 -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/gcm/clmul_ssse3/clmul_ssse3.cpp -o build/obj/lib/modes_aead_gcm_clmul_ssse3.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/misc/roughtime/roughtime.cpp -o build/obj/lib/misc_roughtime.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/gcm/gcm.cpp -o build/obj/lib/modes_aead_gcm.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/gcm/ghash.cpp -o build/obj/lib/modes_aead_gcm_ghash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/cfb/cfb.cpp -o build/obj/lib/modes_cfb.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/cbc/cbc.cpp -o build/obj/lib/modes_cbc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/siv/siv.cpp -o build/obj/lib/modes_aead_siv.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/aead/ocb/ocb.cpp -o build/obj/lib/modes_aead_ocb.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/mode_pad/mode_pad.cpp -o build/obj/lib/modes_mode_pad.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/cipher_mode.cpp -o build/obj/lib/modes_cipher_mode.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/modes/xts/xts.cpp -o build/obj/lib/modes_xts.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/passhash/passhash9/passhash9.cpp -o build/obj/lib/passhash_passhash9.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/passhash/bcrypt/bcrypt.cpp -o build/obj/lib/passhash_bcrypt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/argon2/argon2pwhash.cpp -o build/obj/lib/pbkdf_argon2_argon2pwhash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/argon2/argon2fmt.cpp -o build/obj/lib/pbkdf_argon2_argon2fmt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/bcrypt_pbkdf/bcrypt_pbkdf.cpp -o build/obj/lib/pbkdf_bcrypt_pbkdf.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/argon2/argon2.cpp -o build/obj/lib/pbkdf_argon2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/pbkdf1/pbkdf1.cpp -o build/obj/lib/pbkdf_pbkdf1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/pbkdf.cpp -o build/obj/lib/pbkdf.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/pbkdf2/pbkdf2.cpp -o build/obj/lib/pbkdf_pbkdf2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/pgp_s2k/pgp_s2k.cpp -o build/obj/lib/pbkdf_pgp_s2k.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/pwdhash.cpp -o build/obj/lib/pbkdf_pwdhash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/eme.cpp -o build/obj/lib/pk_pad_eme.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/eme_oaep/oaep.cpp -o build/obj/lib/pk_pad_eme_oaep_oaep.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pbkdf/scrypt/scrypt.cpp -o build/obj/lib/pbkdf_scrypt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/eme_pkcs1/eme_pkcs.cpp -o build/obj/lib/pk_pad_eme_pkcs1_eme_pkcs.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/eme_raw/eme_raw.cpp -o build/obj/lib/pk_pad_eme_raw.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/emsa1/emsa1.cpp -o build/obj/lib/pk_pad_emsa1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/emsa.cpp -o build/obj/lib/pk_pad_emsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/emsa_pkcs1/emsa_pkcs1.cpp -o build/obj/lib/pk_pad_emsa_pkcs1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/emsa_raw/emsa_raw.cpp -o build/obj/lib/pk_pad_emsa_raw.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/emsa_x931/emsa_x931.cpp -o build/obj/lib/pk_pad_emsa_x931.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/hash_id/hash_id.cpp -o build/obj/lib/pk_pad_hash_id.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/emsa_pssr/pssr.cpp -o build/obj/lib/pk_pad_emsa_pssr_pssr.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/mgf1/mgf1.cpp -o build/obj/lib/pk_pad_mgf1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/padding.cpp -o build/obj/lib/pk_pad_padding.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/openssl/openssl_block.cpp -o build/obj/lib/prov_openssl_block.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pk_pad/iso9796/iso9796.cpp -o build/obj/lib/pk_pad_iso9796.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/openssl/openssl_ec.cpp -o build/obj/lib/prov_openssl_ec.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/openssl/openssl_mode.cpp -o build/obj/lib/prov_openssl_mode.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/openssl/openssl_hash.cpp -o build/obj/lib/prov_openssl_hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/openssl/openssl_rc4.cpp -o build/obj/lib/prov_openssl_rc4.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11.cpp -o build/obj/lib/prov_pkcs11_p11.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/openssl/openssl_rsa.cpp -o build/obj/lib/prov_openssl_rsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_ecc_key.cpp -o build/obj/lib/prov_pkcs11_p11_ecc_key.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_ecdh.cpp -o build/obj/lib/prov_pkcs11_p11_ecdh.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_module.cpp -o build/obj/lib/prov_pkcs11_p11_module.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_randomgenerator.cpp -o build/obj/lib/prov_pkcs11_p11_randomgenerator.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_ecdsa.cpp -o build/obj/lib/prov_pkcs11_p11_ecdsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_mechanism.cpp -o build/obj/lib/prov_pkcs11_p11_mechanism.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_session.cpp -o build/obj/lib/prov_pkcs11_p11_session.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_object.cpp -o build/obj/lib/prov_pkcs11_p11_object.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_slot.cpp -o build/obj/lib/prov_pkcs11_p11_slot.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/psk_db/psk_db.cpp -o build/obj/lib/psk_db.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_x509.cpp -o build/obj/lib/prov_pkcs11_p11_x509.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/psk_db/psk_db_sql.cpp -o build/obj/lib/psk_db_psk_db_sql.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/blinding.cpp -o build/obj/lib/pubkey_blinding.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/prov/pkcs11/p11_rsa.cpp -o build/obj/lib/prov_pkcs11_p11_rsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/cecpq1/cecpq1.cpp -o build/obj/lib/pubkey_cecpq1.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/dl_algo/dl_algo.cpp -o build/obj/lib/pubkey_dl_algo.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/curve25519/curve25519.cpp -o build/obj/lib/pubkey_curve25519.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/dh/dh.cpp -o build/obj/lib/pubkey_dh.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/curve25519/donna.cpp -o build/obj/lib/pubkey_curve25519_donna.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/dl_group/dl_named.cpp -o build/obj/lib/pubkey_dl_group_dl_named.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/dsa/dsa.cpp -o build/obj/lib/pubkey_dsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/dl_group/dl_group.cpp -o build/obj/lib/pubkey_dl_group.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/dlies/dlies.cpp -o build/obj/lib/pubkey_dlies.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ec_group/ec_named.cpp -o build/obj/lib/pubkey_ec_group_ec_named.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ec_group/curve_gfp.cpp -o build/obj/lib/pubkey_ec_group_curve_gfp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ec_group/ec_group.cpp -o build/obj/lib/pubkey_ec_group.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ec_group/point_gfp.cpp -o build/obj/lib/pubkey_ec_group_point_gfp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ecdh/ecdh.cpp -o build/obj/lib/pubkey_ecdh.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ecc_key/ecc_key.cpp -o build/obj/lib/pubkey_ecc_key.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ecdsa/ecdsa.cpp -o build/obj/lib/pubkey_ecdsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ecgdsa/ecgdsa.cpp -o build/obj/lib/pubkey_ecgdsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ed25519/ed25519.cpp -o build/obj/lib/pubkey_ed25519.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ec_group/point_mul.cpp -o build/obj/lib/pubkey_ec_group_point_mul.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/eckcdsa/eckcdsa.cpp -o build/obj/lib/pubkey_eckcdsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ecies/ecies.cpp -o build/obj/lib/pubkey_ecies.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ed25519/sc_muladd.cpp -o build/obj/lib/pubkey_ed25519_sc_muladd.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ed25519/ed25519_fe.cpp -o build/obj/lib/pubkey_ed25519_fe.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ed25519/sc_reduce.cpp -o build/obj/lib/pubkey_ed25519_sc_reduce.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ed25519/ed25519_key.cpp -o build/obj/lib/pubkey_ed25519_key.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/keypair/keypair.cpp -o build/obj/lib/pubkey_keypair.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/elgamal/elgamal.cpp -o build/obj/lib/pubkey_elgamal.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/gf2m_rootfind_dcmp.cpp -o build/obj/lib/pubkey_mce_gf2m_rootfind_dcmp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/gost_3410/gost_3410.cpp -o build/obj/lib/pubkey_gost_3410.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/code_based_key_gen.cpp -o build/obj/lib/pubkey_mce_code_based_key_gen.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/gf2m_small_m.cpp -o build/obj/lib/pubkey_mce_gf2m_small_m.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/mce_workfactor.cpp -o build/obj/lib/pubkey_mce_workfactor.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/goppa_code.cpp -o build/obj/lib/pubkey_mce_goppa_code.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/mceliece.cpp -o build/obj/lib/pubkey_mce_mceliece.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/ed25519/ge.cpp -o build/obj/lib/pubkey_ed25519_ge.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mceies/mceies.cpp -o build/obj/lib/pubkey_mceies.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/newhope/newhope.cpp -o build/obj/lib/pubkey_newhope.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/mceliece_key.cpp -o build/obj/lib/pubkey_mce_mceliece_key.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pem/pem.cpp -o build/obj/lib/pubkey_pem.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pbes2/pbes2.cpp -o build/obj/lib/pubkey_pbes2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pk_keys.cpp -o build/obj/lib/pubkey_pk_keys.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/mce/polyn_gf2m.cpp -o build/obj/lib/pubkey_mce_polyn_gf2m.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pk_ops.cpp -o build/obj/lib/pubkey_pk_ops.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pk_algs.cpp -o build/obj/lib/pubkey_pk_algs.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/rfc6979/rfc6979.cpp -o build/obj/lib/pubkey_rfc6979.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pkcs8.cpp -o build/obj/lib/pubkey_pkcs8.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/pubkey.cpp -o build/obj/lib/pubkey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/workfactor.cpp -o build/obj/lib/pubkey_workfactor.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/x509_key.cpp -o build/obj/lib/pubkey_x509_key.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/sm2/sm2.cpp -o build/obj/lib/pubkey_sm2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_common_ops.cpp -o build/obj/lib/pubkey_xmss_common_ops.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/sm2/sm2_enc.cpp -o build/obj/lib/pubkey_sm2_enc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_hash.cpp -o build/obj/lib/pubkey_xmss_hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_parameters.cpp -o build/obj/lib/pubkey_xmss_parameters.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_index_registry.cpp -o build/obj/lib/pubkey_xmss_index_registry.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/rsa/rsa.cpp -o build/obj/lib/pubkey_rsa.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_signature.cpp -o build/obj/lib/pubkey_xmss_signature.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_publickey.cpp -o build/obj/lib/pubkey_xmss_publickey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_wots_parameters.cpp -o build/obj/lib/pubkey_xmss_wots_parameters.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_verification_operation.cpp -o build/obj/lib/pubkey_xmss_verification_operation.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_signature_operation.cpp -o build/obj/lib/pubkey_xmss_signature_operation.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_wots_privatekey.cpp -o build/obj/lib/pubkey_xmss_wots_privatekey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/rng/auto_rng/auto_rng.cpp -o build/obj/lib/rng_auto_rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_wots_publickey.cpp -o build/obj/lib/pubkey_xmss_wots_publickey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mrdrnd -Ibuild/include -Ibuild/include/external -c src/lib/rng/rdrand_rng/rdrand_rng.cpp -o build/obj/lib/rng_rdrand_rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/rng/chacha_rng/chacha_rng.cpp -o build/obj/lib/rng_chacha_rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/pubkey/xmss/xmss_privatekey.cpp -o build/obj/lib/pubkey_xmss_privatekey.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/rng/hmac_drbg/hmac_drbg.cpp -o build/obj/lib/rng_hmac_drbg.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/rng/rng.cpp -o build/obj/lib/rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/rng/stateful_rng/stateful_rng.cpp -o build/obj/lib/rng_stateful_rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/rng/system_rng/system_rng.cpp -o build/obj/lib/rng_system_rng.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/lib/stream/chacha/chacha_simd32/chacha_simd32.cpp -o build/obj/lib/stream_chacha_simd32.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/chacha/chacha.cpp -o build/obj/lib/stream_chacha.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -mavx2 -Ibuild/include -Ibuild/include/external -c src/lib/stream/chacha/chacha_avx2/chacha_avx2.cpp -o build/obj/lib/stream_chacha_avx2.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/ctr/ctr.cpp -o build/obj/lib/stream_ctr.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/ofb/ofb.cpp -o build/obj/lib/stream_ofb.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/rc4/rc4.cpp -o build/obj/lib/stream_rc4.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/salsa20/salsa20.cpp -o build/obj/lib/stream_salsa20.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/shake_cipher/shake_cipher.cpp -o build/obj/lib/stream_shake_cipher.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/stream/stream_cipher.cpp -o build/obj/lib/stream_cipher.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/credentials_manager.cpp -o build/obj/lib/tls_credentials_manager.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_cert_status.cpp -o build/obj/lib/tls_msg_cert_status.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_cert_verify.cpp -o build/obj/lib/tls_msg_cert_verify.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_certificate.cpp -o build/obj/lib/tls_msg_certificate.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_cert_req.cpp -o build/obj/lib/tls_msg_cert_req.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_finished.cpp -o build/obj/lib/tls_msg_finished.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_hello_verify.cpp -o build/obj/lib/tls_msg_hello_verify.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_client_hello.cpp -o build/obj/lib/tls_msg_client_hello.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_server_hello.cpp -o build/obj/lib/tls_msg_server_hello.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_client_kex.cpp -o build/obj/lib/tls_msg_client_kex.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_session_ticket.cpp -o build/obj/lib/tls_msg_session_ticket.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/sessions_sqlite3/tls_session_manager_sqlite.cpp -o build/obj/lib/tls_sessions_sqlite3_tls_session_manager_sqlite.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_alert.cpp -o build/obj/lib/tls_alert.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/msg_server_kex.cpp -o build/obj/lib/tls_msg_server_kex.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_algos.cpp -o build/obj/lib/tls_algos.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/sessions_sql/tls_session_manager_sql.cpp -o build/obj/lib/tls_sessions_sql_tls_session_manager_sql.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_blocking.cpp -o build/obj/lib/tls_blocking.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_cbc/tls_cbc.cpp -o build/obj/lib/tls_cbc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_ciphersuite.cpp -o build/obj/lib/tls_ciphersuite.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_callbacks.cpp -o build/obj/lib/tls_callbacks.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_handshake_hash.cpp -o build/obj/lib/tls_handshake_hash.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_channel.cpp -o build/obj/lib/tls_channel.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_handshake_io.cpp -o build/obj/lib/tls_handshake_io.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_extensions.cpp -o build/obj/lib/tls_extensions.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_client.cpp -o build/obj/lib/tls_client.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_handshake_state.cpp -o build/obj/lib/tls_handshake_state.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_record.cpp -o build/obj/lib/tls_record.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_session_key.cpp -o build/obj/lib/tls_session_key.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_session.cpp -o build/obj/lib/tls_session.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_policy.cpp -o build/obj/lib/tls_policy.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_suite_info.cpp -o build/obj/lib/tls_suite_info.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_version.cpp -o build/obj/lib/tls_version.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_session_manager_memory.cpp -o build/obj/lib/tls_session_manager_memory.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_text_policy.cpp -o build/obj/lib/tls_text_policy.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/assert.cpp -o build/obj/lib/utils_assert.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/calendar.cpp -o build/obj/lib/utils_calendar.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/charset.cpp -o build/obj/lib/utils_charset.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/tls/tls_server.cpp -o build/obj/lib/tls_server.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/cpuid/cpuid_arm.cpp -o build/obj/lib/utils_cpuid_arm.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/cpuid/cpuid.cpp -o build/obj/lib/utils_cpuid.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/cpuid/cpuid_ppc.cpp -o build/obj/lib/utils_cpuid_ppc.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/cpuid/cpuid_x86.cpp -o build/obj/lib/utils_cpuid_x86.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/ct_utils.cpp -o build/obj/lib/utils_ct_utils.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/dyn_load/dyn_load.cpp -o build/obj/lib/utils_dyn_load.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/data_src.cpp -o build/obj/lib/utils_data_src.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/exceptn.cpp -o build/obj/lib/utils_exceptn.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/locking_allocator/locking_allocator.cpp -o build/obj/lib/utils_locking_allocator.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/filesystem.cpp -o build/obj/lib/utils_filesystem.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/mem_ops.cpp -o build/obj/lib/utils_mem_ops.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/os_utils.cpp -o build/obj/lib/utils_os_utils.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/mem_pool/mem_pool.cpp -o build/obj/lib/utils_mem_pool.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/poly_dbl/poly_dbl.cpp -o build/obj/lib/utils_poly_dbl.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/http_util/http_util.cpp -o build/obj/lib/utils_http_util.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/parsing.cpp -o build/obj/lib/utils_parsing.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/read_cfg.cpp -o build/obj/lib/utils_read_cfg.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/read_kv.cpp -o build/obj/lib/utils_read_kv.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/sqlite3/sqlite3.cpp -o build/obj/lib/utils_sqlite3.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/thread_utils/barrier.cpp -o build/obj/lib/utils_thread_utils_barrier.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/thread_utils/rwlock.cpp -o build/obj/lib/utils_thread_utils_rwlock.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/thread_utils/semaphore.cpp -o build/obj/lib/utils_thread_utils_semaphore.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/thread_utils/thread_pool.cpp -o build/obj/lib/utils_thread_utils_thread_pool.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/timer.cpp -o build/obj/lib/utils_timer.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/uuid/uuid.cpp -o build/obj/lib/utils_uuid.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/version.cpp -o build/obj/lib/utils_version.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/socket/socket.cpp -o build/obj/lib/utils_socket.o
src/lib/utils/socket/socket.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, Iterator)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, Iterator, IteratorConnectHandler&&, typename std::enable_if<(! boost::asio::is_endpoint_sequence<EndpointSequence>::value)>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; Iterator = boost::asio::ip::basic_resolver_iterator<boost::asio::ip::tcp>; IteratorConnectHandler = Botan::{anonymous}::Asio_Socket::Asio_Socket(const string&, const string&, std::chrono::milliseconds)::<lambda(const boost::system::error_code&, boost::asio::ip::basic_resolver<boost::asio::ip::tcp>::iterator)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, Iterator)>::return_type = void; typename std::enable_if<(! boost::asio::is_endpoint_sequence<EndpointSequence>::value)>::type = void]':
src/lib/utils/socket/socket.cpp:63:64: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
   63 |          boost::asio::async_connect(m_tcp, dns_iter, connect_cb);
      |                                                                ^
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/cert_status.cpp -o build/obj/lib/x509_cert_status.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/socket/socket_udp.cpp -o build/obj/lib/utils_socket_udp.o
src/lib/utils/socket/socket_udp.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, Iterator)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, Iterator, IteratorConnectHandler&&, typename std::enable_if<(! boost::asio::is_endpoint_sequence<EndpointSequence>::value)>::type*) [with Protocol = boost::asio::ip::udp; Executor = boost::asio::executor; Iterator = boost::asio::ip::basic_resolver_iterator<boost::asio::ip::udp>; IteratorConnectHandler = Botan::{anonymous}::Asio_SocketUDP::Asio_SocketUDP(const string&, const string&, std::chrono::microseconds)::<lambda(const boost::system::error_code&, boost::asio::ip::basic_resolver<boost::asio::ip::udp>::iterator)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, Iterator)>::return_type = void; typename std::enable_if<(! boost::asio::is_endpoint_sequence<EndpointSequence>::value)>::type = void]':
src/lib/utils/socket/socket_udp.cpp:63:64: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
   63 |          boost::asio::async_connect(m_udp, dns_iter, connect_cb);
      |                                                                ^
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/utils/socket/uri.cpp -o build/obj/lib/utils_socket_uri.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/asn1_alt_name.cpp -o build/obj/lib/x509_asn1_alt_name.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/certstor.cpp -o build/obj/lib/x509_certstor.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/certstor_sqlite3/certstor_sqlite.cpp -o build/obj/lib/x509_certstor_sqlite3_certstor_sqlite.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/certstor_flatfile/certstor_flatfile.cpp -o build/obj/lib/x509_certstor_flatfile.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/certstor_system/certstor_system.cpp -o build/obj/lib/x509_certstor_system.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/crl_ent.cpp -o build/obj/lib/x509_crl_ent.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/key_constraint.cpp -o build/obj/lib/x509_key_constraint.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/datastor.cpp -o build/obj/lib/x509_datastor.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/certstor_sql/certstor_sql.cpp -o build/obj/lib/x509_certstor_sql.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/name_constraint.cpp -o build/obj/lib/x509_name_constraint.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/ocsp_types.cpp -o build/obj/lib/x509_ocsp_types.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/ocsp.cpp -o build/obj/lib/x509_ocsp.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509_ca.cpp -o build/obj/lib/x509_ca.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/pkcs10.cpp -o build/obj/lib/x509_pkcs10.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509_crl.cpp -o build/obj/lib/x509_crl.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509_dn_ub.cpp -o build/obj/lib/x509_dn_ub.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509_dn.cpp -o build/obj/lib/x509_dn.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509_obj.cpp -o build/obj/lib/x509_obj.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509opt.cpp -o build/obj/lib/x509_x509opt.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509self.cpp -o build/obj/lib/x509_x509self.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509_ext.cpp -o build/obj/lib/x509_ext.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509cert.cpp -o build/obj/lib/x509_x509cert.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/argon2.cpp -o build/obj/cli/argon2.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/asn1.cpp -o build/obj/cli/asn1.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/bcrypt.cpp -o build/obj/cli/bcrypt.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/cc_enc.cpp -o build/obj/cli/cc_enc.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/cli_rng.cpp -o build/obj/cli/cli_rng.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/codec.cpp -o build/obj/cli/codec.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/compress.cpp -o build/obj/cli/compress.o
g++ -fPIC -fvisibility=hidden -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/lib/x509/x509path.cpp -o build/obj/lib/x509_x509path.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/cli.cpp -o build/obj/cli/cli.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/encryption.cpp -o build/obj/cli/encryption.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/hash.cpp -o build/obj/cli/hash.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/main.cpp -o build/obj/cli/main.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/entropy.cpp -o build/obj/cli/entropy.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/hmac.cpp -o build/obj/cli/hmac.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/pbkdf.cpp -o build/obj/cli/pbkdf.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/psk.cpp -o build/obj/cli/psk.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/math.cpp -o build/obj/cli/math.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/sandbox.cpp -o build/obj/cli/sandbox.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/pk_crypt.cpp -o build/obj/cli/pk_crypt.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/roughtime.cpp -o build/obj/cli/roughtime.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/pubkey.cpp -o build/obj/cli/pubkey.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/timing_tests.cpp -o build/obj/cli/timing_tests.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/tls_client.cpp -o build/obj/cli/tls_client.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/tls_server.cpp -o build/obj/cli/tls_server.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/tls_http_server.cpp -o build/obj/cli/tls_http_server.o
src/cli/tls_http_server.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ConstBufferSequence = boost::asio::mutable_buffers_1; WriteHandler = boost::asio::detail::wrapped_handler<boost::asio::io_context::strand, boost::_bi::bind_t<void, boost::_mfi::mf1<void, Botan_CLI::{anonymous}::TLS_Asio_HTTP_Session, const boost::system::error_code&>, boost::_bi::list2<boost::_bi::value<std::shared_ptr<Botan_CLI::{anonymous}::TLS_Asio_HTTP_Session> >, boost::arg<1> (*)()> >, boost::asio::detail::is_continuation_if_running>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/cli/tls_http_server.cpp:339:56: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  339 |                      boost::asio::placeholders::error)));
      |                                                        ^
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/speed.cpp -o build/obj/cli/speed.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/tls_utils.cpp -o build/obj/cli/tls_utils.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/tss.cpp -o build/obj/cli/tss.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/tls_proxy.cpp -o build/obj/cli/tls_proxy.o
src/cli/tls_proxy.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ConstBufferSequence = boost::asio::mutable_buffers_1; WriteHandler = boost::asio::detail::wrapped_handler<boost::asio::io_context::strand, boost::_bi::bind_t<void, boost::_mfi::mf1<void, Botan_CLI::{anonymous}::tls_proxy_session, const boost::system::error_code&>, boost::_bi::list2<boost::_bi::value<std::shared_ptr<Botan_CLI::{anonymous}::tls_proxy_session> >, boost::arg<1> (*)()> >, boost::asio::detail::is_continuation_if_running>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/cli/tls_proxy.cpp:252:56: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  252 |                      boost::asio::placeholders::error)));
      |                                                        ^
src/cli/tls_proxy.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, Iterator)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, Iterator, IteratorConnectHandler&&, typename std::enable_if<(! boost::asio::is_endpoint_sequence<EndpointSequence>::value)>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; Iterator = boost::asio::ip::basic_resolver_iterator<boost::asio::ip::tcp>; IteratorConnectHandler = Botan_CLI::{anonymous}::tls_proxy_session::tls_session_established(const Botan::TLS::Session&)::<lambda(boost::system::error_code, boost::asio::ip::basic_resolver<boost::asio::ip::tcp>::iterator)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, Iterator)>::return_type = void; typename std::enable_if<(! boost::asio::is_endpoint_sequence<EndpointSequence>::value)>::type = void]':
src/cli/tls_proxy.cpp:331:70: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  331 |          async_connect(m_server_socket, m_server_endpoints, onConnect);
      |                                                                      ^
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/utils.cpp -o build/obj/cli/utils.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/main.cpp -o build/obj/test/main.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_aead.cpp -o build/obj/test/test_aead.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/cli/x509.cpp -o build/obj/cli/x509.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_asn1.cpp -o build/obj/test/test_asn1.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_blowfish.cpp -o build/obj/test/test_blowfish.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_block.cpp -o build/obj/test/test_block.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_c25519.cpp -o build/obj/test/test_c25519.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_bigint.cpp -o build/obj/test/test_bigint.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_certstor_utils.cpp -o build/obj/test/test_certstor_utils.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_certstor_flatfile.cpp -o build/obj/test/test_certstor_flatfile.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_clang_bug.cpp -o build/obj/test/test_clang_bug.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_certstor_system.cpp -o build/obj/test/test_certstor_system.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_certstor.cpp -o build/obj/test/test_certstor.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_compression.cpp -o build/obj/test/test_compression.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_cryptobox.cpp -o build/obj/test/test_cryptobox.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_datastore.cpp -o build/obj/test/test_datastore.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_dh.cpp -o build/obj/test/test_dh.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_dsa.cpp -o build/obj/test/test_dsa.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_dl_group.cpp -o build/obj/test/test_dl_group.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ecc_pointmul.cpp -o build/obj/test/test_ecc_pointmul.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_dlies.cpp -o build/obj/test/test_dlies.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ecdh.cpp -o build/obj/test/test_ecdh.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ecgdsa.cpp -o build/obj/test/test_ecgdsa.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ecdsa.cpp -o build/obj/test/test_ecdsa.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_eckcdsa.cpp -o build/obj/test/test_eckcdsa.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ed25519.cpp -o build/obj/test/test_ed25519.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_elg.cpp -o build/obj/test/test_elg.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ecies.cpp -o build/obj/test/test_ecies.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_entropy.cpp -o build/obj/test/test_entropy.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_fpe.cpp -o build/obj/test/test_fpe.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_gf2m.cpp -o build/obj/test/test_gf2m.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_gost_3410.cpp -o build/obj/test/test_gost_3410.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_hash.cpp -o build/obj/test/test_hash.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_filters.cpp -o build/obj/test/test_filters.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_hash_id.cpp -o build/obj/test/test_hash_id.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_kdf.cpp -o build/obj/test/test_kdf.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_keywrap.cpp -o build/obj/test/test_keywrap.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_mac.cpp -o build/obj/test/test_mac.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_mp.cpp -o build/obj/test/test_mp.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_mceliece.cpp -o build/obj/test/test_mceliece.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_modes.cpp -o build/obj/test/test_modes.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_newhope.cpp -o build/obj/test/test_newhope.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_name_constraint.cpp -o build/obj/test/test_name_constraint.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ocb.cpp -o build/obj/test/test_ocb.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_octetstring.cpp -o build/obj/test/test_octetstring.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_oid.cpp -o build/obj/test/test_oid.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ffi.cpp -o build/obj/test/test_ffi.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_package_transform.cpp -o build/obj/test/test_package_transform.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_os_utils.cpp -o build/obj/test/test_os_utils.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_otp.cpp -o build/obj/test/test_otp.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_ocsp.cpp -o build/obj/test/test_ocsp.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pad.cpp -o build/obj/test/test_pad.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pem.cpp -o build/obj/test/test_pem.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_passhash.cpp -o build/obj/test/test_passhash.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pbkdf.cpp -o build/obj/test/test_pbkdf.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pk_pad.cpp -o build/obj/test/test_pk_pad.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_psk_db.cpp -o build/obj/test/test_psk_db.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_rfc6979.cpp -o build/obj/test/test_rfc6979.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pubkey.cpp -o build/obj/test/test_pubkey.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pkcs11_high_level.cpp -o build/obj/test/test_pkcs11_high_level.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_pkcs11_low_level.cpp -o build/obj/test/test_pkcs11_low_level.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_rng_kat.cpp -o build/obj/test/test_rng_kat.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_roughtime.cpp -o build/obj/test/test_roughtime.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_rng.cpp -o build/obj/test/test_rng.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_rsa.cpp -o build/obj/test/test_rsa.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_siv.cpp -o build/obj/test/test_siv.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor -msse2 -Ibuild/include -Ibuild/include/external -c src/tests/test_simd.cpp -o build/obj/test/test_simd.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_runner.cpp -o build/obj/test/test_runner.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_sm2.cpp -o build/obj/test/test_sm2.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_stream.cpp -o build/obj/test/test_stream.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_srp6.cpp -o build/obj/test/test_srp6.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_sodium.cpp -o build/obj/test/test_sodium.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_thread_utils.cpp -o build/obj/test/test_thread_utils.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_tests.cpp -o build/obj/test/test_tests.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_tpm.cpp -o build/obj/test/test_tpm.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_tls_messages.cpp -o build/obj/test/test_tls_messages.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_tls.cpp -o build/obj/test/test_tls.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_tss.cpp -o build/obj/test/test_tss.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_workfactor.cpp -o build/obj/test/test_workfactor.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_uri.cpp -o build/obj/test/test_uri.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_x509_dn.cpp -o build/obj/test/test_x509_dn.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_xmss.cpp -o build/obj/test/test_xmss.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_utils.cpp -o build/obj/test/test_utils.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_x509_path.cpp -o build/obj/test/test_x509_path.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/tests.cpp -o build/obj/test/tests.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_ecdh.cpp -o build/obj/test/unit_ecdh.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_ecc.cpp -o build/obj/test/unit_ecc.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/test_tls_stream_integration.cpp -o build/obj/test/test_tls_stream_integration.o
In file included from build/include/botan/asio_async_ops.h:17,
                 from build/include/botan/asio_stream.h:18,
                 from src/tests/test_tls_stream_integration.cpp:19:
build/include/botan/asio_error.h:39:8: warning: base class 'class boost::system::error_category' has accessible non-virtual destructor [-Wnon-virtual-dtor]
   39 | struct StreamCategory : public boost::system::error_category
      |        ^~~~~~~~~~~~~~
build/include/botan/asio_error.h:39:8: warning: 'struct Botan::TLS::StreamCategory' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
build/include/botan/asio_error.h:71:8: warning: base class 'class boost::system::error_category' has accessible non-virtual destructor [-Wnon-virtual-dtor]
   71 | struct BotanAlertCategory : boost::system::error_category
      |        ^~~~~~~~~~~~~~~~~~
build/include/botan/asio_error.h:71:8: warning: 'struct Botan::TLS::BotanAlertCategory' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
build/include/botan/asio_error.h:99:8: warning: base class 'class boost::system::error_category' has accessible non-virtual destructor [-Wnon-virtual-dtor]
   99 | struct BotanErrorCategory : boost::system::error_category
      |        ^~~~~~~~~~~~~~~~~~
build/include/botan/asio_error.h:99:8: warning: 'struct Botan::BotanErrorCategory' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, CompletionCondition, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:227:85: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  227 |                          std::bind(&Server::handle_read, shared_from_this(), _1, _2));
      |                                                                                     ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::mutable_buffer; WriteHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:271:83: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  271 |                           std::bind(&Server::handle_write, shared_from_this(), _1));
      |                                                                                   ^
src/tests/test_tls_stream_integration.cpp: At global scope:
src/tests/test_tls_stream_integration.cpp:323:7: warning: 'class {anonymous}::TestBase' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
  323 | class TestBase
      |       ^~~~~~~~
src/tests/test_tls_stream_integration.cpp:341:7: warning: base class 'class {anonymous}::TestBase' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  341 | class Synchronous_Test : public TestBase
      |       ^~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:341:7: warning: 'class {anonymous}::Synchronous_Test' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp:368:7: warning: base class 'class {anonymous}::TestBase' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  368 | class Test_Conversation : public TestBase, public net::coroutine, public std::enable_shared_from_this<Test_Conversation>
      |       ^~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:368:7: warning: 'class {anonymous}::Test_Conversation' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, const EndpointSequence&, RangeConnectHandler&&, typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; EndpointSequence = std::vector<boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> >; RangeConnectHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type = void; typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:383:82: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  383 |                                      std::bind(test_case, shared_from_this(), _1));
      |                                                                                  ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; WriteHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:394:80: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  394 |                                    std::bind(test_case, shared_from_this(), _1));
      |                                                                                ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, CompletionCondition, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:401:79: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  401 |                                   std::bind(test_case, shared_from_this(), _1));
      |                                                                               ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:411:79: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  411 |                                   std::bind(test_case, shared_from_this(), _1));
      |                                                                               ^
src/tests/test_tls_stream_integration.cpp: At global scope:
src/tests/test_tls_stream_integration.cpp:420:7: warning: base class 'class {anonymous}::Synchronous_Test' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  420 | class Test_Conversation_Sync : public Synchronous_Test
      |       ^~~~~~~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:420:7: warning: 'class {anonymous}::Test_Conversation_Sync' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp: In function 'typename Protocol::endpoint boost::asio::connect(boost::asio::basic_socket<Protocol, Executor>&, const EndpointSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; EndpointSequence = std::vector<boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> >; typename Protocol::endpoint = boost::asio::ip::basic_endpoint<boost::asio::ip::tcp>; typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:431:72: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  431 |          net::connect(m_client.stream().lowest_layer(), k_endpoints, ec);
      |                                                                        ^
src/tests/test_tls_stream_integration.cpp: In function 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:439:23: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  439 |                     ec);
      |                       ^
src/tests/test_tls_stream_integration.cpp: In function 'std::size_t boost::asio::read(SyncReadStream&, const MutableBufferSequence&, CompletionCondition, boost::system::error_code&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with SyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:445:22: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  445 |                    ec);
      |                      ^
src/tests/test_tls_stream_integration.cpp: In function 'std::size_t boost::asio::read(SyncReadStream&, const MutableBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with SyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:452:60: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  452 |          net::read(m_client.stream(), m_client.buffer(), ec);
      |                                                            ^
src/tests/test_tls_stream_integration.cpp: At global scope:
src/tests/test_tls_stream_integration.cpp:462:7: warning: base class 'class {anonymous}::TestBase' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  462 | class Test_Eager_Close : public TestBase, public net::coroutine, public std::enable_shared_from_this<Test_Eager_Close>
      |       ^~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:462:7: warning: 'class {anonymous}::Test_Eager_Close' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, const EndpointSequence&, RangeConnectHandler&&, typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; EndpointSequence = std::vector<boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> >; RangeConnectHandler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type = void; typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:475:82: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  475 |                                      std::bind(test_case, shared_from_this(), _1));
      |                                                                                  ^
src/tests/test_tls_stream_integration.cpp: At global scope:
src/tests/test_tls_stream_integration.cpp:494:7: warning: base class 'class {anonymous}::Synchronous_Test' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  494 | class Test_Eager_Close_Sync : public Synchronous_Test
      |       ^~~~~~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:494:7: warning: 'class {anonymous}::Test_Eager_Close_Sync' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp:521:7: warning: base class 'class {anonymous}::TestBase' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  521 | class Test_Close_Without_Shutdown
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:521:7: warning: 'class {anonymous}::Test_Close_Without_Shutdown' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, const EndpointSequence&, RangeConnectHandler&&, typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; EndpointSequence = std::vector<boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> >; RangeConnectHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type = void; typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:537:82: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  537 |                                      std::bind(test_case, shared_from_this(), _1));
      |                                                                                  ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; WriteHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:550:80: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  550 |                                    std::bind(test_case, shared_from_this(), _1));
      |                                                                                ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, CompletionCondition, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:558:79: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  558 |                                   std::bind(test_case, shared_from_this(), _1));
      |                                                                               ^
src/tests/test_tls_stream_integration.cpp: At global scope:
src/tests/test_tls_stream_integration.cpp:569:7: warning: base class 'class {anonymous}::Synchronous_Test' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  569 | class Test_Close_Without_Shutdown_Sync : public Synchronous_Test
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:569:7: warning: 'class {anonymous}::Test_Close_Without_Shutdown_Sync' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp:595:7: warning: base class 'class {anonymous}::TestBase' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  595 | class Test_No_Shutdown_Response : public TestBase, public net::coroutine,
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:595:7: warning: 'class {anonymous}::Test_No_Shutdown_Response' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type boost::asio::async_connect(boost::asio::basic_socket<Protocol, Executor>&, const EndpointSequence&, RangeConnectHandler&&, typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type*) [with Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; EndpointSequence = std::vector<boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> >; RangeConnectHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, typename Protocol::endpoint)>::return_type = void; typename std::enable_if<boost::asio::is_endpoint_sequence<EndpointSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:609:82: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  609 |                                      std::bind(test_case, shared_from_this(), _1));
      |                                                                                  ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; WriteHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:622:80: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  622 |                                    std::bind(test_case, shared_from_this(), _1));
      |                                                                                ^
src/tests/test_tls_stream_integration.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/test_tls_stream_integration.cpp:628:79: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  628 |                                   std::bind(test_case, shared_from_this(), _1));
      |                                                                               ^
src/tests/test_tls_stream_integration.cpp: At global scope:
src/tests/test_tls_stream_integration.cpp:640:7: warning: base class 'class {anonymous}::Synchronous_Test' has accessible non-virtual destructor [-Wnon-virtual-dtor]
  640 | class Test_No_Shutdown_Response_Sync : public Synchronous_Test
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/tests/test_tls_stream_integration.cpp:640:7: warning: 'class {anonymous}::Test_No_Shutdown_Response_Sync' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
In file included from src/tests/test_tls_stream_integration.cpp:19:
build/include/botan/asio_stream.h: In instantiation of 'std::size_t Botan::TLS::Stream<S, C>::send_pending_encrypted_data(boost::system::error_code&) [with StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; std::size_t = long unsigned int]':
build/include/botan/asio_stream.h:315:10:   required from 'void Botan::TLS::Stream<S, C>::shutdown(boost::system::error_code&) [with StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel]'
src/tests/test_tls_stream_integration.cpp:209:40:   required from here
build/include/botan/asio_stream.h:729:48: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  729 |          auto writtenBytes = boost::asio::write(m_nextLayer, send_buffer(), ec);
      |                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/include/botan/asio_stream.h: In instantiation of 'void Botan::TLS::Stream<S, C>::tls_encrypt(const ConstBufferSequence&, boost::system::error_code&) [with ConstBufferSequence = boost::asio::const_buffers_1; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel]':
build/include/botan/asio_stream.h:475:10:   required from 'std::size_t Botan::TLS::Stream<S, C>::write_some(const ConstBufferSequence&, boost::system::error_code&) [with ConstBufferSequence = boost::asio::const_buffers_1; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; std::size_t = long unsigned int]'
/usr/include/boost/asio/impl/write.hpp:54:9:   required from 'std::size_t boost::asio::detail::write_buffer_sequence(SyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition, boost::system::error_code&) [with SyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; std::size_t = long unsigned int]'
/usr/include/boost/asio/impl/write.hpp:70:39:   required from 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, CompletionCondition, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; CompletionCondition = boost::asio::detail::transfer_all_t; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
/usr/include/boost/asio/impl/write.hpp:94:15:   required from 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:439:23:   required from here
build/include/botan/asio_stream.h:753:61: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  753 |                !ec && it != boost::asio::buffer_sequence_end(buffers);
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from build/include/botan/asio_stream.h:18,
                 from src/tests/test_tls_stream_integration.cpp:19:
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_receive; Args = {const boost::asio::mutable_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:971:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:203:96:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
   81 |          return boost::asio::get_associated_executor(m_handler, m_work_guard_1.get_executor());
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_send; Args = {const boost::asio::const_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:856:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_write_some(const ConstBufferSequence&, WriteHandler&&) [with ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_stream.h:392:10:   required from 'void Botan::TLS::Stream<S, C>::async_shutdown(ShutdownHandler&&) [with ShutdownHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel]'
src/tests/test_tls_stream_integration.cpp:245:100:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_receive; Args = {const boost::asio::mutable_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:971:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:388:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_send; Args = {const boost::asio::const_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:856:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_write_some(const ConstBufferSequence&, WriteHandler&&) [with ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_stream.h:392:10:   required from 'void Botan::TLS::Stream<S, C>::async_shutdown(ShutdownHandler&&) [with ShutdownHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel]'
src/tests/test_tls_stream_integration.cpp:406:96:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_receive; Args = {const boost::asio::mutable_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:971:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:480:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_send; Args = {const boost::asio::const_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:856:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_write_some(const ConstBufferSequence&, WriteHandler&&) [with ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Handler = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >::Wrapper<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_stream.h:392:10:   required from 'void Botan::TLS::Stream<S, C>::async_shutdown(ShutdownHandler&&) [with ShutdownHandler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel]'
src/tests/test_tls_stream_integration.cpp:484:96:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_receive; Args = {const boost::asio::mutable_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:971:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:542:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::basic_stream_socket<boost::asio::ip::tcp>::initiate_async_receive; Args = {const boost::asio::mutable_buffer&, int}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/basic_stream_socket.hpp:971:53:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::basic_stream_socket<Protocol, Executor>::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Protocol = boost::asio::ip::tcp; Executor = boost::asio::executor; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:614:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:319:36:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:203:96:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:319:36:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:388:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:319:36:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_Eager_Close::*(std::shared_ptr<{anonymous}::Test_Eager_Close>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:480:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:319:36:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:542:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
build/include/botan/asio_async_ops.h:235:16:   required from 'void Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:220:25:   required from 'Botan::TLS::detail::AsyncWriteOperation<Handler, Stream, Allocator>::AsyncWriteOperation(HandlerT&&, Stream&, std::size_t, const boost::system::error_code&) [with HandlerT = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:319:36:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Handler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Stream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; StreamLayer = boost::asio::basic_stream_socket<boost::asio::ip::tcp>; ChannelT = Botan::TLS::Channel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/test_tls_stream_integration.cpp:614:97:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; Args = {const boost::asio::mutable_buffer&, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>}; CompletionToken = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::mutable_buffer&, std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:550:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, CompletionCondition, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:227:85:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::mutable_buffer; ConstBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; ConstBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::mutable_buffer; WriteHandler = std::_Bind<void ({anonymous}::Server::*(std::shared_ptr<{anonymous}::Server>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:271:83:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; ConstBufferSequence = boost::asio::const_buffers_1; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::const_buffers_1&, boost::asio::detail::transfer_all_t}; CompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::const_buffers_1&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; WriteHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:394:80:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::mutable_buffer&, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>}; CompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::mutable_buffer&, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:550:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, CompletionCondition, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:401:79:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = std::_Bind<void ({anonymous}::Test_Conversation::*(std::shared_ptr<{anonymous}::Test_Conversation>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:411:79:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; ConstBufferSequence = boost::asio::const_buffers_1; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::const_buffers_1&, boost::asio::detail::transfer_all_t}; CompletionToken = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::const_buffers_1&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; WriteHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:550:80:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>, std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::mutable_buffer&, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>}; CompletionToken = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::mutable_buffer&, std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:550:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, CompletionCondition, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = std::_Bind<long unsigned int ({anonymous}::Side::*({anonymous}::Client*, std::_Placeholder<1>, std::_Placeholder<2>))(const boost::system::error_code&, long unsigned int)>; ReadHandler = std::_Bind<void ({anonymous}::Test_Close_Without_Shutdown::*(std::shared_ptr<{anonymous}::Test_Close_Without_Shutdown>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:558:79:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_send_op.hpp:92:45:   required from 'boost::asio::detail::reactive_socket_send_op<ConstBufferSequence, Handler, IoExecutor>::reactive_socket_send_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const ConstBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with ConstBufferSequence = boost::asio::const_buffer; Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::const_buffers_1, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:273:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; ConstBufferSequence = boost::asio::const_buffers_1; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::const_buffers_1&, boost::asio::detail::transfer_all_t}; CompletionToken = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::const_buffers_1&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; ConstBufferSequence = boost::asio::const_buffers_1; WriteHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:622:80:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >; Executor1 = boost::asio::executor; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::executor]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::associated_executor<T, Executor>::type = boost::asio::executor]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::detail::io_object_executor<boost::asio::executor>; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::executor; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/asio/detail/handler_work.hpp:58:60:   required from 'static void boost::asio::detail::handler_work<Handler, IoExecutor, HandlerExecutor>::start(Handler&, const IoExecutor&) [with Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; HandlerExecutor = boost::asio::executor]'
/usr/include/boost/asio/detail/reactive_socket_recv_op.hpp:93:45:   required from 'boost::asio::detail::reactive_socket_recv_op<MutableBufferSequence, Handler, IoExecutor>::reactive_socket_recv_op(boost::asio::detail::socket_type, boost::asio::detail::socket_ops::state_type, const MutableBufferSequence&, boost::asio::socket_base::message_flags, Handler&, const IoExecutor&) [with MutableBufferSequence = boost::asio::mutable_buffer; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)> >, Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >, boost::asio::mutable_buffers_1, std::allocator<void> >; IoExecutor = boost::asio::detail::io_object_executor<boost::asio::executor>; boost::asio::detail::socket_type = int; boost::asio::detail::socket_ops::state_type = unsigned char; boost::asio::socket_base::message_flags = int]'
/usr/include/boost/asio/detail/reactive_socket_service_base.hpp:346:11:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; RawCompletionToken = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> > >; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan::TLS::Stream<boost::asio::basic_stream_socket<boost::asio::ip::tcp> >; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = std::_Bind<void ({anonymous}::Test_No_Shutdown_Response::*(std::shared_ptr<{anonymous}::Test_No_Shutdown_Response>, std::_Placeholder<1>))(const boost::system::error_code&)>; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/test_tls_stream_integration.cpp:628:79:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_ecdsa.cpp -o build/obj/test/unit_ecdsa.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_asio_stream.cpp -o build/obj/test/unit_asio_stream.o
In file included from build/include/botan/asio_async_ops.h:17,
                 from build/include/botan/asio_stream.h:18,
                 from src/tests/unit_asio_stream.cpp:13:
build/include/botan/asio_error.h:39:8: warning: base class 'class boost::system::error_category' has accessible non-virtual destructor [-Wnon-virtual-dtor]
   39 | struct StreamCategory : public boost::system::error_category
      |        ^~~~~~~~~~~~~~
build/include/botan/asio_error.h:39:8: warning: 'struct Botan::TLS::StreamCategory' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
build/include/botan/asio_error.h:71:8: warning: base class 'class boost::system::error_category' has accessible non-virtual destructor [-Wnon-virtual-dtor]
   71 | struct BotanAlertCategory : boost::system::error_category
      |        ^~~~~~~~~~~~~~~~~~
build/include/botan/asio_error.h:71:8: warning: 'struct Botan::TLS::BotanAlertCategory' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
build/include/botan/asio_error.h:99:8: warning: base class 'class boost::system::error_category' has accessible non-virtual destructor [-Wnon-virtual-dtor]
   99 | struct BotanErrorCategory : boost::system::error_category
      |        ^~~~~~~~~~~~~~~~~~
build/include/botan/asio_error.h:99:8: warning: 'struct Botan::BotanErrorCategory' has virtual functions and accessible non-virtual destructor [-Wnon-virtual-dtor]
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::read(SyncReadStream&, const MutableBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with SyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:307:91: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  307 |          auto bytes_transferred = net::read(ssl, net::mutable_buffer(buf, sizeof(buf)), ec);
      |                                                                                           ^
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::read(SyncReadStream&, const MutableBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with SyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = std::vector<boost::asio::mutable_buffer>; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:331:58: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  331 |          auto bytes_transferred = net::read(ssl, data, ec);
      |                                                          ^
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::read(SyncReadStream&, const MutableBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with SyncReadStream = Botan_Tests::ThrowingAsioStream; MutableBufferSequence = boost::asio::mutable_buffer; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:379:91: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  379 |          auto bytes_transferred = net::read(ssl, net::mutable_buffer(buf, sizeof(buf)), ec);
      |                                                                                           ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:429:48: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  429 |          net::async_read(ssl, buf, read_handler);
      |                                                ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = std::vector<boost::asio::mutable_buffer>; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:459:49: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  459 |          net::async_read(ssl, data, read_handler);
      |                                                 ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:484:48: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  484 |          net::async_read(ssl, buf, read_handler);
      |                                                ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::ThrowingAsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:507:48: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  507 |          net::async_read(ssl, buf, read_handler);
      |                                                ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:534:48: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  534 |          net::async_read(ssl, buf, read_handler);
      |                                                ^
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:551:99: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  551 |          auto bytes_transferred = net::write(ssl, net::const_buffer(TEST_DATA, TEST_DATA_SIZE), ec);
      |                                                                                                   ^
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan::TLS::Stream<Botan_Tests::TestStream>; ConstBufferSequence = boost::asio::const_buffer; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:571:74: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  571 |          net::write(ssl, net::const_buffer(TEST_DATA, TEST_DATA_SIZE), ec);
      |                                                                          ^
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:601:59: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  601 |          auto bytes_transferred = net::write(ssl, data, ec);
      |                                                           ^
src/tests/unit_asio_stream.cpp: In function 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan_Tests::ThrowingAsioStream; ConstBufferSequence = boost::asio::const_buffer; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:649:99: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  649 |          auto bytes_transferred = net::write(ssl, net::const_buffer(TEST_DATA, TEST_DATA_SIZE), ec);
      |                                                                                                   ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:676:91: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  676 |          net::async_write(ssl, net::const_buffer(TEST_DATA, TEST_DATA_SIZE), write_handler);
      |                                                                                           ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:717:50: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  717 |          net::async_write(ssl, src, write_handler);
      |                                                  ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:742:91: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  742 |          net::async_write(ssl, net::const_buffer(TEST_DATA, TEST_DATA_SIZE), write_handler);
      |                                                                                           ^
src/tests/unit_asio_stream.cpp: In function 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::ThrowingAsioStream; ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]':
src/tests/unit_asio_stream.cpp:765:91: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  765 |          net::async_write(ssl, net::const_buffer(TEST_DATA, TEST_DATA_SIZE), write_handler);
      |                                                                                           ^
In file included from src/tests/unit_asio_stream.cpp:13:
build/include/botan/asio_stream.h: In instantiation of 'std::size_t Botan::TLS::Stream<S, C>::send_pending_encrypted_data(boost::system::error_code&) [with StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::MockChannel; std::size_t = long unsigned int]':
build/include/botan/asio_stream.h:239:13:   required from 'void Botan::TLS::Stream<S, C>::handshake(Botan::TLS::Connection_Side, boost::system::error_code&) [with StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::MockChannel]'
src/tests/unit_asio_stream.cpp:191:46:   required from here
build/include/botan/asio_stream.h:729:48: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  729 |          auto writtenBytes = boost::asio::write(m_nextLayer, send_buffer(), ec);
      |                              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/include/botan/asio_stream.h: In instantiation of 'void Botan::TLS::Stream<S, C>::tls_encrypt(const ConstBufferSequence&, boost::system::error_code&) [with ConstBufferSequence = boost::asio::detail::prepared_buffers<boost::asio::const_buffer, 64>; StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::MockChannel]':
build/include/botan/asio_stream.h:475:10:   required from 'std::size_t Botan::TLS::Stream<S, C>::write_some(const ConstBufferSequence&, boost::system::error_code&) [with ConstBufferSequence = boost::asio::detail::prepared_buffers<boost::asio::const_buffer, 64>; StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::MockChannel; std::size_t = long unsigned int]'
/usr/include/boost/asio/impl/write.hpp:54:9:   required from 'std::size_t boost::asio::detail::write_buffer_sequence(SyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition, boost::system::error_code&) [with SyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; ConstBufferIterator = __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >; CompletionCondition = boost::asio::detail::transfer_all_t; std::size_t = long unsigned int]'
/usr/include/boost/asio/impl/write.hpp:70:39:   required from 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, CompletionCondition, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; CompletionCondition = boost::asio::detail::transfer_all_t; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
/usr/include/boost/asio/impl/write.hpp:94:15:   required from 'std::size_t boost::asio::write(SyncWriteStream&, const ConstBufferSequence&, boost::system::error_code&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with SyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; std::size_t = long unsigned int; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:601:59:   required from here
build/include/botan/asio_stream.h:752:58: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  752 |          for(auto it = boost::asio::buffer_sequence_begin(buffers);
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
build/include/botan/asio_stream.h:753:61: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
  753 |                !ec && it != boost::asio::buffer_sequence_end(buffers);
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from build/include/botan/asio_stream.h:18,
                 from src/tests/unit_asio_stream.cpp:13:
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::beast::test::stream::run_read_op; Args = {boost::shared_ptr<boost::beast::test::stream::state>&, const boost::asio::mutable_buffer&}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:322:39:   required from 'typename boost::asio::async_result<typename std::decay<_Func>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::beast::test::stream::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; typename boost::asio::async_result<typename std::decay<_Func>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Stream = Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Stream = Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = Botan_Tests::Asio_Stream_Tests::test_async_handshake(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>&; StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::MockChannel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/unit_asio_stream.cpp:238:57:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
   81 |          return boost::asio::get_associated_executor(m_handler, m_work_guard_1.get_executor());
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::beast::test::stream::run_read_op; Args = {boost::shared_ptr<boost::beast::test::stream::state>&, const boost::asio::mutable_buffer&}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:322:39:   required from 'typename boost::asio::async_result<typename std::decay<_Func>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::beast::test::stream::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; typename boost::asio::async_result<typename std::decay<_Func>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Stream = Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Stream = Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>&; StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::MockChannel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/unit_asio_stream.cpp:267:57:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::beast::test::stream::run_read_op; Args = {boost::shared_ptr<boost::beast::test::stream::state>&, const boost::asio::mutable_buffer&}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:322:39:   required from 'typename boost::asio::async_result<typename std::decay<_Func>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::beast::test::stream::async_read_some(const MutableBufferSequence&, ReadHandler&&) [with MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan::TLS::detail::AsyncHandshakeOperation<Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; typename boost::asio::async_result<typename std::decay<_Func>::type, void(boost::system::error_code, long unsigned int)>::return_type = void]'
build/include/botan/asio_async_ops.h:326:16:   required from 'void Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::operator()(boost::system::error_code, std::size_t, bool) [with Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Stream = Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>; Allocator = std::allocator<void>; std::size_t = long unsigned int]'
build/include/botan/asio_async_ops.h:287:25:   required from 'Botan::TLS::detail::AsyncHandshakeOperation<Handler, Stream, Allocator>::AsyncHandshakeOperation(HandlerT&&, Stream&, const boost::system::error_code&) [with HandlerT = Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Handler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>; Stream = Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>; Allocator = std::allocator<void>]'
build/include/botan/asio_stream.h:277:10:   required from 'typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type Botan::TLS::Stream<S, C>::async_handshake(Botan::TLS::Connection_Side, HandshakeHandler&&) [with HandshakeHandler = Botan_Tests::Asio_Stream_Tests::test_async_handshake_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&)>&; StreamLayer = Botan_Tests::TestStream; ChannelT = Botan_Tests::ThrowingMockChannel; typename boost::asio::async_result<typename std::decay<_Functor>::type, void(boost::system::error_code)>::return_type = void]'
src/tests/unit_asio_stream.cpp:290:57:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:429:48:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, std::vector<boost::asio::mutable_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::detail::prepared_buffers<boost::asio::mutable_buffer, 64>, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = std::vector<boost::asio::mutable_buffer>; MutableBufferIterator = __gnu_cxx::__normal_iterator<const boost::asio::mutable_buffer*, std::vector<boost::asio::mutable_buffer> >; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; MutableBufferSequence = std::vector<boost::asio::mutable_buffer>; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const std::vector<boost::asio::mutable_buffer, std::allocator<boost::asio::mutable_buffer> >&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; Args = {const std::vector<boost::asio::mutable_buffer, std::allocator<boost::asio::mutable_buffer> >&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = std::vector<boost::asio::mutable_buffer>; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:459:49:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:484:48:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::ThrowingAsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan_Tests::ThrowingAsioStream; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan_Tests::ThrowingAsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::ThrowingAsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::ThrowingAsioStream>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::ThrowingAsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_some_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:507:48:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; E = boost::asio::io_context::executor_type; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:120:47:   required from 'typename boost::asio::associated_executor<T, Executor>::type boost::asio::get_associated_executor(const T&, const Executor&, typename std::enable_if<boost::asio::is_executor<Executor>::value>::type*) [with T = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Executor = boost::asio::io_context::executor_type; typename boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type; typename std::enable_if<boost::asio::is_executor<Executor>::value>::type = void]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:88:48:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::lambda::lambda(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:136:37:   required from 'boost::beast::test::stream::read_op<Handler, Buffers>::read_op(Handler_&&, const boost::shared_ptr<boost::beast::test::stream::state>&, const Buffers&) [with Handler_ = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Handler = Botan::TLS::detail::AsyncReadOperation<boost::asio::detail::read_op<Botan_Tests::AsioStream, boost::asio::mutable_buffer, const boost::asio::mutable_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, boost::asio::mutable_buffers_1, std::allocator<void> >; Buffers = boost::asio::mutable_buffer]'
/usr/include/boost/beast/_experimental/test/impl/stream.hpp:174:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/read.hpp:452:56:   required from 'void boost::asio::detail::start_read_buffer_sequence_op(AsyncReadStream&, const MutableBufferSequence&, const MutableBufferIterator&, CompletionCondition&, ReadHandler&) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; MutableBufferIterator = const boost::asio::mutable_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/read.hpp:484:36:   required from 'void boost::asio::detail::initiate_async_read_buffer_sequence<AsyncReadStream>::operator()(ReadHandler&&, const MutableBufferSequence&, CompletionCondition&&) const [with ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; MutableBufferSequence = boost::asio::mutable_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncReadStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_read_buffer_sequence<Botan_Tests::AsioStream>; Args = {const boost::asio::mutable_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/read.hpp:567:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_read(AsyncReadStream&, const MutableBufferSequence&, ReadHandler&&, typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type*) [with AsyncReadStream = Botan_Tests::AsioStream; MutableBufferSequence = boost::asio::mutable_buffer; ReadHandler = Botan_Tests::Asio_Stream_Tests::test_async_read_zero_buffer(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:534:48:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; E = boost::asio::system_executor; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::system_executor; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/beast/core/detail/bind_handler.hpp:342:36:   required from 'static boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::get(const boost::beast::detail::bind_front_wrapper<Handler, Args ...>&, const Executor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Args = {boost::system::error_code, long unsigned int}; Executor = boost::asio::system_executor; boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:107:37:   required from 'typename boost::asio::associated_executor<T>::type boost::asio::get_associated_executor(const T&) [with T = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; typename boost::asio::associated_executor<T>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/detail/work_dispatcher.hpp:35:38:   required from 'boost::asio::detail::work_dispatcher<Handler>::work_dispatcher(CompletionHandler&&) [with CompletionHandler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; Handler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>]'
/usr/include/boost/asio/impl/post.hpp:71:22:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; ConstBufferSequence = boost::asio::const_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::const_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::AsioStream>; Args = {const boost::asio::const_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_success(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:676:91:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; E = boost::asio::system_executor; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::system_executor; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/beast/core/detail/bind_handler.hpp:342:36:   required from 'static boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::get(const boost::beast::detail::bind_front_wrapper<Handler, Args ...>&, const Executor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Args = {boost::system::error_code, long unsigned int}; Executor = boost::asio::system_executor; boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:107:37:   required from 'typename boost::asio::associated_executor<T>::type boost::asio::get_associated_executor(const T&) [with T = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; typename boost::asio::associated_executor<T>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/detail/work_dispatcher.hpp:35:38:   required from 'boost::asio::detail::work_dispatcher<Handler>::work_dispatcher(CompletionHandler&&) [with CompletionHandler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; Handler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, std::vector<boost::asio::const_buffer>, __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>]'
/usr/include/boost/asio/impl/post.hpp:71:22:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; ConstBufferIterator = __gnu_cxx::__normal_iterator<const boost::asio::const_buffer*, std::vector<boost::asio::const_buffer> >; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; ConstBufferSequence = std::vector<boost::asio::const_buffer>; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const std::vector<boost::asio::const_buffer, std::allocator<boost::asio::const_buffer> >&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::AsioStream>; Args = {const std::vector<boost::asio::const_buffer, std::allocator<boost::asio::const_buffer> >&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = std::vector<boost::asio::const_buffer>; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_buffer_sequence(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:717:50:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; E = boost::asio::system_executor; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Executor = boost::asio::system_executor; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/beast/core/detail/bind_handler.hpp:342:36:   required from 'static boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::get(const boost::beast::detail::bind_front_wrapper<Handler, Args ...>&, const Executor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >; Args = {boost::system::error_code, long unsigned int}; Executor = boost::asio::system_executor; boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:107:37:   required from 'typename boost::asio::associated_executor<T>::type boost::asio::get_associated_executor(const T&) [with T = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; typename boost::asio::associated_executor<T>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/detail/work_dispatcher.hpp:35:38:   required from 'boost::asio::detail::work_dispatcher<Handler>::work_dispatcher(CompletionHandler&&) [with CompletionHandler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; Handler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::AsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::MockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>]'
/usr/include/boost/asio/impl/post.hpp:71:22:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; ConstBufferSequence = boost::asio::const_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan_Tests::AsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::AsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::const_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::AsioStream>; Args = {const boost::asio::const_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::AsioStream; ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_some_error(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:742:91:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
build/include/botan/asio_async_ops.h: In instantiation of 'Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::get_executor() const [with Handler = boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >; Executor1 = boost::asio::io_context::executor_type; Allocator = std::allocator<void>; Botan::TLS::detail::AsyncBase<Handler, Executor1, Allocator>::executor_type = boost::asio::io_context::executor_type]':
/usr/include/boost/asio/associated_executor.hpp:54:27:   required from 'static boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::get(const T&, const E&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; E = boost::asio::system_executor; boost::asio::detail::associated_executor_impl<T, E, typename boost::asio::detail::associated_executor_check<typename T::executor_type>::type>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:95:62:   required from 'static boost::asio::associated_executor<T, Executor>::type boost::asio::associated_executor<T, Executor>::get(const T&, const Executor&) [with T = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Executor = boost::asio::system_executor; boost::asio::associated_executor<T, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/beast/core/detail/bind_handler.hpp:342:36:   required from 'static boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::get(const boost::beast::detail::bind_front_wrapper<Handler, Args ...>&, const Executor&) [with Handler = Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >; Args = {boost::system::error_code, long unsigned int}; Executor = boost::asio::system_executor; boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<Handler, Args ...>, Executor>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/associated_executor.hpp:107:37:   required from 'typename boost::asio::associated_executor<T>::type boost::asio::get_associated_executor(const T&) [with T = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; typename boost::asio::associated_executor<T>::type = boost::asio::io_context::executor_type]'
/usr/include/boost/asio/detail/work_dispatcher.hpp:35:38:   required from 'boost::asio::detail::work_dispatcher<Handler>::work_dispatcher(CompletionHandler&&) [with CompletionHandler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>; Handler = boost::beast::detail::bind_front_wrapper<Botan::TLS::detail::AsyncWriteOperation<boost::asio::detail::write_op<Botan_Tests::ThrowingAsioStream, boost::asio::const_buffer, const boost::asio::const_buffer*, boost::asio::detail::transfer_all_t, Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)> >, Botan::TLS::Stream<Botan_Tests::TestStream, Botan_Tests::ThrowingMockChannel>, std::allocator<void> >, boost::system::error_code, long unsigned int>]'
/usr/include/boost/asio/impl/post.hpp:71:22:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/boost/asio/impl/write.hpp:417:56:   required from 'void boost::asio::detail::start_write_buffer_sequence_op(AsyncWriteStream&, const ConstBufferSequence&, const ConstBufferIterator&, CompletionCondition&, WriteHandler&) [with AsyncWriteStream = Botan_Tests::ThrowingAsioStream; ConstBufferSequence = boost::asio::const_buffer; ConstBufferIterator = const boost::asio::const_buffer*; CompletionCondition = boost::asio::detail::transfer_all_t; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>]'
/usr/include/boost/asio/impl/write.hpp:449:37:   required from 'void boost::asio::detail::initiate_async_write_buffer_sequence<AsyncWriteStream>::operator()(WriteHandler&&, const ConstBufferSequence&, CompletionCondition&&) const [with WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; ConstBufferSequence = boost::asio::const_buffer; CompletionCondition = boost::asio::detail::transfer_all_t; AsyncWriteStream = Botan_Tests::ThrowingAsioStream]'
/usr/include/boost/asio/async_result.hpp:151:49:   required from 'static boost::asio::async_result<CompletionToken, Signature>::return_type boost::asio::async_result<CompletionToken, Signature>::initiate(Initiation&&, RawCompletionToken&&, Args&& ...) [with Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::ThrowingAsioStream>; RawCompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Args = {const boost::asio::const_buffer&, boost::asio::detail::transfer_all_t}; CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>; Signature = void(boost::system::error_code, long unsigned int); boost::asio::async_result<CompletionToken, Signature>::return_type = void]'
/usr/include/boost/asio/async_result.hpp:364:25:   required from 'typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type boost::asio::async_initiate(Initiation&&, CompletionToken&, Args&& ...) [with CompletionToken = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; Signature = void(boost::system::error_code, long unsigned int); Initiation = boost::asio::detail::initiate_async_write_buffer_sequence<Botan_Tests::ThrowingAsioStream>; Args = {const boost::asio::const_buffer&, boost::asio::detail::transfer_all_t}; typename std::enable_if<boost::asio::detail::async_result_has_initiate_memfn<CompletionToken, Signature>::value, decltype (boost::asio::async_result<typename std::decay<_Tp>::type, Signature>::initiate(declval<Initiation&&>(), declval<CompletionToken&&>(), (declval<Args&>)()...))>::type = void]'
/usr/include/boost/asio/impl/write.hpp:533:51:   required from 'typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type boost::asio::async_write(AsyncWriteStream&, const ConstBufferSequence&, WriteHandler&&, typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type*) [with AsyncWriteStream = Botan_Tests::ThrowingAsioStream; ConstBufferSequence = boost::asio::const_buffer; WriteHandler = Botan_Tests::Asio_Stream_Tests::test_async_write_throw(std::vector<Botan_Tests::Test::Result>&)::<lambda(const error_code&, std::size_t)>&; typename boost::asio::async_result<typename std::decay<WriteHandler>::type, void(boost::system::error_code, long unsigned int)>::return_type = void; typename std::enable_if<boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type = void]'
src/tests/unit_asio_stream.cpp:765:91:   required from here
build/include/botan/asio_async_ops.h:81:53: warning: zero as null pointer constant [-Wzero-as-null-pointer-constant]
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_tls_policy.cpp -o build/obj/test/unit_tls_policy.o
g++ -shared -fPIC -Wl,-soname,libbotan-2.so.13  -fstack-protector -m64 -pthread  build/obj/lib/asn1_alg_id.o build/obj/lib/asn1_attribute.o build/obj/lib/asn1_obj.o build/obj/lib/asn1_oid.o build/obj/lib/asn1_print.o build/obj/lib/asn1_str.o build/obj/lib/asn1_time.o build/obj/lib/asn1_ber_dec.o build/obj/lib/asn1_der_enc.o build/obj/lib/asn1_oid_maps.o build/obj/lib/asn1_oids.o build/obj/lib/base_buf_comp.o build/obj/lib/base_scan_name.o build/obj/lib/base_sym_algo.o build/obj/lib/base_symkey.o build/obj/lib/block_aes.o build/obj/lib/block_aes_ni.o build/obj/lib/block_aes_vperm.o build/obj/lib/block_aria.o build/obj/lib/block_cipher.o build/obj/lib/block_blowfish.o build/obj/lib/block_camellia.o build/obj/lib/block_cascade.o build/obj/lib/block_cast128.o build/obj/lib/block_cast256.o build/obj/lib/block_des.o build/obj/lib/block_des_tab.o build/obj/lib/block_des_desx.o build/obj/lib/block_gost_28147.o build/obj/lib/block_idea.o build/obj/lib/block_idea_sse2.o build/obj/lib/block_kasumi.o build/obj/lib/block_lion.o build/obj/lib/block_misty1.o build/obj/lib/block_noekeon.o build/obj/lib/block_noekeon_simd.o build/obj/lib/block_seed.o build/obj/lib/block_serpent.o build/obj/lib/block_serpent_avx2.o build/obj/lib/block_serpent_simd.o build/obj/lib/block_shacal2.o build/obj/lib/block_shacal2_avx2.o build/obj/lib/block_shacal2_simd.o build/obj/lib/block_shacal2_x86.o build/obj/lib/block_sm4.o build/obj/lib/block_threefish_512.o build/obj/lib/block_threefish_512_threefish_512_avx2.o build/obj/lib/block_twofish.o build/obj/lib/block_twofish_tab.o build/obj/lib/block_xtea.o build/obj/lib/codec_base32.o build/obj/lib/codec_base58.o build/obj/lib/codec_base64.o build/obj/lib/codec_hex.o build/obj/lib/compat_sodium_25519.o build/obj/lib/compat_sodium_aead.o build/obj/lib/compat_sodium_auth.o build/obj/lib/compat_sodium_box.o build/obj/lib/compat_sodium_chacha.o build/obj/lib/compat_sodium_salsa.o build/obj/lib/compat_sodium_secretbox.o build/obj/lib/compat_sodium_utils.o build/obj/lib/compression_bzip2.o build/obj/lib/compression_compress_utils.o build/obj/lib/compression.o build/obj/lib/compression_lzma.o build/obj/lib/compression_zlib.o build/obj/lib/entropy_dev_random.o build/obj/lib/entropy_srcs.o build/obj/lib/entropy_proc_walk.o build/obj/lib/entropy_rdrand.o build/obj/lib/entropy_rdseed.o build/obj/lib/ffi.o build/obj/lib/ffi_block.o build/obj/lib/ffi_cert.o build/obj/lib/ffi_cipher.o build/obj/lib/ffi_fpe.o build/obj/lib/ffi_hash.o build/obj/lib/ffi_hotp.o build/obj/lib/ffi_kdf.o build/obj/lib/ffi_keywrap.o build/obj/lib/ffi_mac.o build/obj/lib/ffi_mp.o build/obj/lib/ffi_pk_op.o build/obj/lib/ffi_pkey.o build/obj/lib/ffi_pkey_algs.o build/obj/lib/ffi_rng.o build/obj/lib/ffi_totp.o build/obj/lib/filters_algo_filt.o build/obj/lib/filters_b64_filt.o build/obj/lib/filters_basefilt.o build/obj/lib/filters_buf_filt.o build/obj/lib/filters_cipher_filter.o build/obj/lib/filters_comp_filter.o build/obj/lib/filters_data_snk.o build/obj/lib/filters_fd_unix.o build/obj/lib/filters_filter.o build/obj/lib/filters_hex_filt.o build/obj/lib/filters_out_buf.o build/obj/lib/filters_pipe.o build/obj/lib/filters_pipe_io.o build/obj/lib/filters_pipe_rw.o build/obj/lib/filters_secqueue.o build/obj/lib/filters_threaded_fork.o build/obj/lib/hash_blake2_blake2b.o build/obj/lib/hash_checksum_adler32.o build/obj/lib/hash_checksum_crc24.o build/obj/lib/hash_checksum_crc32.o build/obj/lib/hash_comb4p.o build/obj/lib/hash_gost_3411.o build/obj/lib/hash.o build/obj/lib/hash_keccak.o build/obj/lib/hash_md4.o build/obj/lib/hash_md5.o build/obj/lib/hash_mdx_hash.o build/obj/lib/hash_par_hash.o build/obj/lib/hash_rmd160.o build/obj/lib/hash_sha1_sha160.o build/obj/lib/hash_sha1_sse2.o build/obj/lib/hash_sha1_x86.o build/obj/lib/hash_sha2_32.o build/obj/lib/hash_sha2_32_sha2_32_bmi2.o build/obj/lib/hash_sha2_32_sha2_32_x86.o build/obj/lib/hash_sha2_64.o build/obj/lib/hash_sha2_64_sha2_64_bmi2.o build/obj/lib/hash_sha3.o build/obj/lib/hash_sha3_bmi2.o build/obj/lib/hash_shake.o build/obj/lib/hash_skein_512.o build/obj/lib/hash_sm3.o build/obj/lib/hash_streebog.o build/obj/lib/hash_streebog_precalc.o build/obj/lib/hash_tiger_tig_tab.o build/obj/lib/hash_tiger.o build/obj/lib/hash_whirlpool.o build/obj/lib/hash_whirlpool_whrl_tab.o build/obj/lib/kdf_hkdf.o build/obj/lib/kdf.o build/obj/lib/kdf_kdf1.o build/obj/lib/kdf_kdf1_iso18033.o build/obj/lib/kdf_kdf2.o build/obj/lib/kdf_prf_tls.o build/obj/lib/kdf_prf_x942.o build/obj/lib/kdf_sp800_108.o build/obj/lib/kdf_sp800_56a.o build/obj/lib/kdf_sp800_56c.o build/obj/lib/mac_cbc_mac.o build/obj/lib/mac_cmac.o build/obj/lib/mac_gmac.o build/obj/lib/mac_hmac.o build/obj/lib/mac.o build/obj/lib/mac_poly1305.o build/obj/lib/mac_siphash.o build/obj/lib/mac_x919_mac.o build/obj/lib/math_bigint_big_code.o build/obj/lib/math_bigint_big_io.o build/obj/lib/math_bigint_big_ops2.o build/obj/lib/math_bigint_big_ops3.o build/obj/lib/math_bigint_big_rand.o build/obj/lib/math_bigint.o build/obj/lib/math_bigint_divide.o build/obj/lib/math_mp_comba.o build/obj/lib/math_mp_karat.o build/obj/lib/math_mp_monty.o build/obj/lib/math_mp_monty_n.o build/obj/lib/math_numbertheory_dsa_gen.o build/obj/lib/math_numbertheory_jacobi.o build/obj/lib/math_numbertheory_make_prm.o build/obj/lib/math_numbertheory_mod_inv.o build/obj/lib/math_numbertheory_monty.o build/obj/lib/math_numbertheory_monty_exp.o build/obj/lib/math_numbertheory_mp_numth.o build/obj/lib/math_numbertheory_nistp_redc.o build/obj/lib/math_numbertheory_numthry.o build/obj/lib/math_numbertheory_pow_mod.o build/obj/lib/math_numbertheory_primality.o build/obj/lib/math_numbertheory_primes.o build/obj/lib/math_numbertheory_reducer.o build/obj/lib/math_numbertheory_ressol.o build/obj/lib/misc_aont_package.o build/obj/lib/misc_cryptobox.o build/obj/lib/misc_fpe_fe1.o build/obj/lib/misc_hotp.o build/obj/lib/misc_hotp_totp.o build/obj/lib/misc_nist_keywrap.o build/obj/lib/misc_rfc3394.o build/obj/lib/misc_roughtime.o build/obj/lib/misc_srp6.o build/obj/lib/misc_tss.o build/obj/lib/modes_aead.o build/obj/lib/modes_aead_ccm.o build/obj/lib/modes_aead_chacha20poly1305.o build/obj/lib/modes_aead_eax.o build/obj/lib/modes_aead_gcm_clmul_cpu.o build/obj/lib/modes_aead_gcm_clmul_ssse3.o build/obj/lib/modes_aead_gcm.o build/obj/lib/modes_aead_gcm_ghash.o build/obj/lib/modes_aead_ocb.o build/obj/lib/modes_aead_siv.o build/obj/lib/modes_cbc.o build/obj/lib/modes_cfb.o build/obj/lib/modes_cipher_mode.o build/obj/lib/modes_mode_pad.o build/obj/lib/modes_xts.o build/obj/lib/passhash_bcrypt.o build/obj/lib/passhash_passhash9.o build/obj/lib/pbkdf_argon2.o build/obj/lib/pbkdf_argon2_argon2fmt.o build/obj/lib/pbkdf_argon2_argon2pwhash.o build/obj/lib/pbkdf_bcrypt_pbkdf.o build/obj/lib/pbkdf.o build/obj/lib/pbkdf_pbkdf1.o build/obj/lib/pbkdf_pbkdf2.o build/obj/lib/pbkdf_pgp_s2k.o build/obj/lib/pbkdf_pwdhash.o build/obj/lib/pbkdf_scrypt.o build/obj/lib/pk_pad_eme.o build/obj/lib/pk_pad_eme_oaep_oaep.o build/obj/lib/pk_pad_eme_pkcs1_eme_pkcs.o build/obj/lib/pk_pad_eme_raw.o build/obj/lib/pk_pad_emsa.o build/obj/lib/pk_pad_emsa1.o build/obj/lib/pk_pad_emsa_pkcs1.o build/obj/lib/pk_pad_emsa_pssr_pssr.o build/obj/lib/pk_pad_emsa_raw.o build/obj/lib/pk_pad_emsa_x931.o build/obj/lib/pk_pad_hash_id.o build/obj/lib/pk_pad_iso9796.o build/obj/lib/pk_pad_mgf1.o build/obj/lib/pk_pad_padding.o build/obj/lib/prov_openssl_block.o build/obj/lib/prov_openssl_ec.o build/obj/lib/prov_openssl_hash.o build/obj/lib/prov_openssl_mode.o build/obj/lib/prov_openssl_rc4.o build/obj/lib/prov_openssl_rsa.o build/obj/lib/prov_pkcs11_p11.o build/obj/lib/prov_pkcs11_p11_ecc_key.o build/obj/lib/prov_pkcs11_p11_ecdh.o build/obj/lib/prov_pkcs11_p11_ecdsa.o build/obj/lib/prov_pkcs11_p11_mechanism.o build/obj/lib/prov_pkcs11_p11_module.o build/obj/lib/prov_pkcs11_p11_object.o build/obj/lib/prov_pkcs11_p11_randomgenerator.o build/obj/lib/prov_pkcs11_p11_rsa.o build/obj/lib/prov_pkcs11_p11_session.o build/obj/lib/prov_pkcs11_p11_slot.o build/obj/lib/prov_pkcs11_p11_x509.o build/obj/lib/psk_db.o build/obj/lib/psk_db_psk_db_sql.o build/obj/lib/pubkey_blinding.o build/obj/lib/pubkey_cecpq1.o build/obj/lib/pubkey_curve25519.o build/obj/lib/pubkey_curve25519_donna.o build/obj/lib/pubkey_dh.o build/obj/lib/pubkey_dl_algo.o build/obj/lib/pubkey_dl_group.o build/obj/lib/pubkey_dl_group_dl_named.o build/obj/lib/pubkey_dlies.o build/obj/lib/pubkey_dsa.o build/obj/lib/pubkey_ec_group_curve_gfp.o build/obj/lib/pubkey_ec_group.o build/obj/lib/pubkey_ec_group_ec_named.o build/obj/lib/pubkey_ec_group_point_gfp.o build/obj/lib/pubkey_ec_group_point_mul.o build/obj/lib/pubkey_ecc_key.o build/obj/lib/pubkey_ecdh.o build/obj/lib/pubkey_ecdsa.o build/obj/lib/pubkey_ecgdsa.o build/obj/lib/pubkey_ecies.o build/obj/lib/pubkey_eckcdsa.o build/obj/lib/pubkey_ed25519.o build/obj/lib/pubkey_ed25519_fe.o build/obj/lib/pubkey_ed25519_key.o build/obj/lib/pubkey_ed25519_ge.o build/obj/lib/pubkey_ed25519_sc_muladd.o build/obj/lib/pubkey_ed25519_sc_reduce.o build/obj/lib/pubkey_elgamal.o build/obj/lib/pubkey_gost_3410.o build/obj/lib/pubkey_keypair.o build/obj/lib/pubkey_mce_code_based_key_gen.o build/obj/lib/pubkey_mce_gf2m_rootfind_dcmp.o build/obj/lib/pubkey_mce_gf2m_small_m.o build/obj/lib/pubkey_mce_goppa_code.o build/obj/lib/pubkey_mce_workfactor.o build/obj/lib/pubkey_mce_mceliece.o build/obj/lib/pubkey_mce_mceliece_key.o build/obj/lib/pubkey_mce_polyn_gf2m.o build/obj/lib/pubkey_mceies.o build/obj/lib/pubkey_newhope.o build/obj/lib/pubkey_pbes2.o build/obj/lib/pubkey_pem.o build/obj/lib/pubkey_pk_algs.o build/obj/lib/pubkey_pk_keys.o build/obj/lib/pubkey_pk_ops.o build/obj/lib/pubkey_pkcs8.o build/obj/lib/pubkey.o build/obj/lib/pubkey_rfc6979.o build/obj/lib/pubkey_rsa.o build/obj/lib/pubkey_sm2.o build/obj/lib/pubkey_sm2_enc.o build/obj/lib/pubkey_workfactor.o build/obj/lib/pubkey_x509_key.o build/obj/lib/pubkey_xmss_common_ops.o build/obj/lib/pubkey_xmss_hash.o build/obj/lib/pubkey_xmss_index_registry.o build/obj/lib/pubkey_xmss_parameters.o build/obj/lib/pubkey_xmss_privatekey.o build/obj/lib/pubkey_xmss_publickey.o build/obj/lib/pubkey_xmss_signature.o build/obj/lib/pubkey_xmss_signature_operation.o build/obj/lib/pubkey_xmss_verification_operation.o build/obj/lib/pubkey_xmss_wots_parameters.o build/obj/lib/pubkey_xmss_wots_privatekey.o build/obj/lib/pubkey_xmss_wots_publickey.o build/obj/lib/rng_auto_rng.o build/obj/lib/rng_chacha_rng.o build/obj/lib/rng_hmac_drbg.o build/obj/lib/rng_rdrand_rng.o build/obj/lib/rng.o build/obj/lib/rng_stateful_rng.o build/obj/lib/rng_system_rng.o build/obj/lib/stream_chacha.o build/obj/lib/stream_chacha_avx2.o build/obj/lib/stream_chacha_simd32.o build/obj/lib/stream_ctr.o build/obj/lib/stream_ofb.o build/obj/lib/stream_rc4.o build/obj/lib/stream_salsa20.o build/obj/lib/stream_shake_cipher.o build/obj/lib/stream_cipher.o build/obj/lib/tls_credentials_manager.o build/obj/lib/tls_msg_cert_req.o build/obj/lib/tls_msg_cert_status.o build/obj/lib/tls_msg_cert_verify.o build/obj/lib/tls_msg_certificate.o build/obj/lib/tls_msg_client_hello.o build/obj/lib/tls_msg_client_kex.o build/obj/lib/tls_msg_finished.o build/obj/lib/tls_msg_hello_verify.o build/obj/lib/tls_msg_server_hello.o build/obj/lib/tls_msg_server_kex.o build/obj/lib/tls_msg_session_ticket.o build/obj/lib/tls_sessions_sql_tls_session_manager_sql.o build/obj/lib/tls_sessions_sqlite3_tls_session_manager_sqlite.o build/obj/lib/tls_alert.o build/obj/lib/tls_algos.o build/obj/lib/tls_blocking.o build/obj/lib/tls_callbacks.o build/obj/lib/tls_cbc.o build/obj/lib/tls_channel.o build/obj/lib/tls_ciphersuite.o build/obj/lib/tls_client.o build/obj/lib/tls_extensions.o build/obj/lib/tls_handshake_hash.o build/obj/lib/tls_handshake_io.o build/obj/lib/tls_handshake_state.o build/obj/lib/tls_policy.o build/obj/lib/tls_record.o build/obj/lib/tls_server.o build/obj/lib/tls_session.o build/obj/lib/tls_session_key.o build/obj/lib/tls_session_manager_memory.o build/obj/lib/tls_suite_info.o build/obj/lib/tls_text_policy.o build/obj/lib/tls_version.o build/obj/lib/utils_assert.o build/obj/lib/utils_calendar.o build/obj/lib/utils_charset.o build/obj/lib/utils_cpuid.o build/obj/lib/utils_cpuid_arm.o build/obj/lib/utils_cpuid_ppc.o build/obj/lib/utils_cpuid_x86.o build/obj/lib/utils_ct_utils.o build/obj/lib/utils_data_src.o build/obj/lib/utils_dyn_load.o build/obj/lib/utils_exceptn.o build/obj/lib/utils_filesystem.o build/obj/lib/utils_http_util.o build/obj/lib/utils_locking_allocator.o build/obj/lib/utils_mem_ops.o build/obj/lib/utils_mem_pool.o build/obj/lib/utils_os_utils.o build/obj/lib/utils_parsing.o build/obj/lib/utils_poly_dbl.o build/obj/lib/utils_read_cfg.o build/obj/lib/utils_read_kv.o build/obj/lib/utils_socket.o build/obj/lib/utils_socket_udp.o build/obj/lib/utils_socket_uri.o build/obj/lib/utils_sqlite3.o build/obj/lib/utils_thread_utils_barrier.o build/obj/lib/utils_thread_utils_rwlock.o build/obj/lib/utils_thread_utils_semaphore.o build/obj/lib/utils_thread_utils_thread_pool.o build/obj/lib/utils_timer.o build/obj/lib/utils_uuid.o build/obj/lib/utils_version.o build/obj/lib/x509_asn1_alt_name.o build/obj/lib/x509_cert_status.o build/obj/lib/x509_certstor.o build/obj/lib/x509_certstor_flatfile.o build/obj/lib/x509_certstor_sql.o build/obj/lib/x509_certstor_sqlite3_certstor_sqlite.o build/obj/lib/x509_certstor_system.o build/obj/lib/x509_crl_ent.o build/obj/lib/x509_datastor.o build/obj/lib/x509_key_constraint.o build/obj/lib/x509_name_constraint.o build/obj/lib/x509_ocsp.o build/obj/lib/x509_ocsp_types.o build/obj/lib/x509_pkcs10.o build/obj/lib/x509_ca.o build/obj/lib/x509_crl.o build/obj/lib/x509_dn.o build/obj/lib/x509_dn_ub.o build/obj/lib/x509_ext.o build/obj/lib/x509_obj.o build/obj/lib/x509_x509cert.o build/obj/lib/x509_x509opt.o build/obj/lib/x509_x509path.o build/obj/lib/x509_x509self.o -lboost_system -lbz2 -lcrypto -ldl -llzma -lrt -lsqlite3 -lz -o libbotan-2.so.13
cd . && ln -fs libbotan-2.so.13 libbotan-2.so
cd . && ln -fs libbotan-2.so.13 libbotan-2.so.13.14.0
g++  -fstack-protector -m64 -pthread build/obj/cli/argon2.o build/obj/cli/asn1.o build/obj/cli/bcrypt.o build/obj/cli/cc_enc.o build/obj/cli/cli.o build/obj/cli/cli_rng.o build/obj/cli/codec.o build/obj/cli/compress.o build/obj/cli/encryption.o build/obj/cli/entropy.o build/obj/cli/hash.o build/obj/cli/hmac.o build/obj/cli/main.o build/obj/cli/math.o build/obj/cli/pbkdf.o build/obj/cli/pk_crypt.o build/obj/cli/psk.o build/obj/cli/pubkey.o build/obj/cli/roughtime.o build/obj/cli/sandbox.o build/obj/cli/speed.o build/obj/cli/timing_tests.o build/obj/cli/tls_client.o build/obj/cli/tls_http_server.o build/obj/cli/tls_proxy.o build/obj/cli/tls_server.o build/obj/cli/tls_utils.o build/obj/cli/tss.o build/obj/cli/utils.o build/obj/cli/x509.o -L. -lbotan-2 -lboost_system -lbz2 -lcrypto -ldl -llzma -lrt -lsqlite3 -lz  -o botan
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_tls.cpp -o build/obj/test/unit_tls.o
g++ -fstack-protector -m64 -pthread -std=c++11 -D_REENTRANT  -g -O3 -DBOTAN_IS_BEING_BUILT -Wall -Wextra -Wpedantic -Wstrict-aliasing -Wcast-align -Wmissing-declarations -Wpointer-arith -Wcast-qual -Wzero-as-null-pointer-constant -Wnon-virtual-dtor  -Ibuild/include -Ibuild/include/external -c src/tests/unit_x509.cpp -o build/obj/test/unit_x509.o
g++  -fstack-protector -m64 -pthread build/obj/test/main.o build/obj/test/test_aead.o build/obj/test/test_asn1.o build/obj/test/test_bigint.o build/obj/test/test_block.o build/obj/test/test_blowfish.o build/obj/test/test_c25519.o build/obj/test/test_certstor.o build/obj/test/test_certstor_flatfile.o build/obj/test/test_certstor_system.o build/obj/test/test_certstor_utils.o build/obj/test/test_clang_bug.o build/obj/test/test_compression.o build/obj/test/test_cryptobox.o build/obj/test/test_datastore.o build/obj/test/test_dh.o build/obj/test/test_dl_group.o build/obj/test/test_dlies.o build/obj/test/test_dsa.o build/obj/test/test_ecc_pointmul.o build/obj/test/test_ecdh.o build/obj/test/test_ecdsa.o build/obj/test/test_ecgdsa.o build/obj/test/test_ecies.o build/obj/test/test_eckcdsa.o build/obj/test/test_ed25519.o build/obj/test/test_elg.o build/obj/test/test_entropy.o build/obj/test/test_ffi.o build/obj/test/test_filters.o build/obj/test/test_fpe.o build/obj/test/test_gf2m.o build/obj/test/test_gost_3410.o build/obj/test/test_hash.o build/obj/test/test_hash_id.o build/obj/test/test_kdf.o build/obj/test/test_keywrap.o build/obj/test/test_mac.o build/obj/test/test_mceliece.o build/obj/test/test_modes.o build/obj/test/test_mp.o build/obj/test/test_name_constraint.o build/obj/test/test_newhope.o build/obj/test/test_ocb.o build/obj/test/test_ocsp.o build/obj/test/test_octetstring.o build/obj/test/test_oid.o build/obj/test/test_os_utils.o build/obj/test/test_otp.o build/obj/test/test_package_transform.o build/obj/test/test_pad.o build/obj/test/test_passhash.o build/obj/test/test_pbkdf.o build/obj/test/test_pem.o build/obj/test/test_pk_pad.o build/obj/test/test_pkcs11_high_level.o build/obj/test/test_pkcs11_low_level.o build/obj/test/test_psk_db.o build/obj/test/test_pubkey.o build/obj/test/test_rfc6979.o build/obj/test/test_rng.o build/obj/test/test_rng_kat.o build/obj/test/test_roughtime.o build/obj/test/test_rsa.o build/obj/test/test_runner.o build/obj/test/test_simd.o build/obj/test/test_siv.o build/obj/test/test_sm2.o build/obj/test/test_sodium.o build/obj/test/test_srp6.o build/obj/test/test_stream.o build/obj/test/test_tests.o build/obj/test/test_thread_utils.o build/obj/test/test_tls.o build/obj/test/test_tls_messages.o build/obj/test/test_tls_stream_integration.o build/obj/test/test_tpm.o build/obj/test/test_tss.o build/obj/test/test_uri.o build/obj/test/test_utils.o build/obj/test/test_workfactor.o build/obj/test/test_x509_dn.o build/obj/test/test_x509_path.o build/obj/test/test_xmss.o build/obj/test/tests.o build/obj/test/unit_asio_stream.o build/obj/test/unit_ecc.o build/obj/test/unit_ecdh.o build/obj/test/unit_ecdsa.o build/obj/test/unit_tls.o build/obj/test/unit_tls_policy.o build/obj/test/unit_x509.o -L. -lbotan-2 -lboost_system -lbz2 -lcrypto -ldl -llzma -lrt -lsqlite3 -lz  -o botan-test
python3 src/scripts/build_docs.py --build-dir="build"
   INFO: Starting sphinx-build -q -c ./src/configs/sphinx -b html ./doc build/docs/handbook
/home/stig/rpmbuild/BUILD/Botan-2.14.0/doc/api_ref/python.rst:417: WARNING: duplicate object description of botan.PrivateKey.to_der, other instance in api_ref/python, use :noindex: for one of them
   INFO: Starting rst2man build/botan.rst build/botan.1
+ RPM_EC=0
++ jobs -p
+ exit 0
Executing(%install): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.pfjrds
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ '[' 1 -eq 1 ']'
+ '[' /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64 '!=' / ']'
+ rm -rf /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64
++ dirname /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64
+ mkdir -p /home/stig/rpmbuild/BUILDROOT
+ mkdir /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64
+ cd Botan-2.14.0
+ '[' 1 -eq 1 ']'
+ /usr/bin/make install DESTDIR=/home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64 'INSTALL=/usr/bin/install -p' 'INSTALL_CMD_EXEC=install -p -m 755' 'INSTALL_CMD_DATA=install -p -m 644'
python3 src/scripts/install.py --prefix="/usr" --build-dir="build" --bindir=/usr/bin --libdir=/usr/lib64 --docdir=/usr/share/doc --includedir=include
   INFO: Botan 2.14.0 installation complete
+ chmod 755 /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/lib64/python3.8/site-packages/botan2.py
+ find /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64 -name '*.a' -delete
+ /usr/lib/rpm/find-debuginfo.sh -j4 --strict-build-id -m -i --build-id-seed 2.14.0-1.mga8 --unique-debug-suffix -2.14.0-1.mga8.x86_64 --unique-debug-src-base botan2-2.14.0-1.mga8.x86_64 --run-dwz --dwz-low-mem-die-limit 10000000 --dwz-max-die-limit 110000000 -S debugsourcefiles.list /home/stig/rpmbuild/BUILD/Botan-2.14.0

explicitly decompress any DWARF compressed ELF sections in /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/bin/botan
explicitly decompress any DWARF compressed ELF sections in /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/lib64/libbotan-2.so.13.14.0
extracting debug info from /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/bin/botan
extracting debug info from /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/lib64/libbotan-2.so.13.14.0
original debug info size: 220312kB, size after compression: 193116kB
/usr/lib/rpm/sepdebugcrcfix: Updated 2 CRC32s, 0 CRC32s did match.
10715 blocks
+ '[' -n '' ']'
+ /usr/share/spec-helper/clean_files
+ '[' -n '' ']'
+ /usr/share/spec-helper/compress_files .xz
+ '[' -n '' ']'
+ /usr/share/spec-helper/relink_symlinks
+ '[' -n '' ']'
+ /usr/share/spec-helper/clean_perl
+ '[' -n '' ']'
+ /usr/share/spec-helper/lib_symlinks
+ '[' -n '' ']'
+ /usr/share/spec-helper/gprintify
+ '[' -n '' ']'
+ /usr/share/spec-helper/fix_mo
+ '[' -n '' ']'
+ /usr/share/spec-helper/translate_menu
+ '[' -n '' ']'
+ /usr/share/spec-helper/fix_pamd
+ '[' -n '' ']'
+ /usr/share/spec-helper/remove_info_dir
+ '[' -n '' ']'
+ /usr/share/spec-helper/fix_eol
+ '[' -n '' ']'
+ /usr/share/spec-helper/check_desktop_files
+ '[' -n '' ']'
+ /usr/share/spec-helper/check_elf_files
Warning: unused libraries in /usr/lib64/libbotan-2.so.13.14.0: librt.so.1

Warning: unused libraries in /usr/bin/botan: libbz2.so.1
 libcrypto.so.1.1
 libdl.so.2
 liblzma.so.5
 librt.so.1
 libsqlite3.so.0
 libz.so.1
 libm.so.6

+ /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1 1
Bytecompiling .py files below /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/lib64/python3.8 using /usr/bin/python3.8
+ /usr/lib/rpm/brp-python-hardlink
+ /usr/lib/rpm/redhat/brp-mangle-shebangs
Executing(%check): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.dcFAJr
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ '[' 1 -eq 1 ']'
+ LD_LIBRARY_PATH=/home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/lib64
+ ./botan-test
Testing Botan 2.14.0 (release, dated 20200406, revision git:3a26a33de2459c40cdfb766f4035a60cf449ab1c, distribution unspecified)
CPU flags: sse2 ssse3 sse41 sse42 rdtsc aes_ni clmul
Starting tests drbg_seed:1603E6832889E1C2
block:
AES-128 ran 34740 tests in 97.32 msec all ok
AES-192 ran 40500 tests in 114.00 msec all ok
AES-256 ran 46260 tests in 131.25 msec all ok
ARIA-128 ran 30 tests in 0.10 msec all ok
ARIA-192 ran 30 tests in 0.09 msec all ok
ARIA-256 ran 30 tests in 0.09 msec all ok
Blowfish ran 1860 tests in 29.87 msec all ok
CAST-128 ran 1440 tests in 4.03 msec all ok
CAST-256 ran 195 tests in 0.60 msec all ok
Camellia-128 ran 180 tests in 0.53 msec all ok
Camellia-192 ran 90 tests in 0.25 msec all ok
Camellia-256 ran 150 tests in 0.43 msec all ok
Cascade(Serpent,AES-256) ran 30 tests in 0.14 msec all ok
Cascade(Serpent,CAST-128) ran 15 tests in 0.08 msec all ok
Cascade(Serpent,Twofish) ran 45 tests in 0.29 msec all ok
DES ran 9630 tests in 26.50 msec all ok
DESX ran 135 tests in 0.36 msec all ok
GOST-28147-89(R3411_94_TestParam) ran 270 tests in 0.96 msec all ok
GOST-28147-89(R3411_CryptoPro) ran 150 tests in 0.51 msec all ok
IDEA ran 16260 tests in 52.96 msec all ok
KASUMI ran 45 tests in 0.13 msec all ok
Lion(SHA-160,RC4,64) ran 15 tests in 0.14 msec all ok
MISTY1 ran 465 tests in 1.25 msec all ok
Noekeon ran 15450 tests in 40.33 msec all ok
SEED ran 120 tests in 0.37 msec all ok
SHACAL2 ran 30690 tests in 88.84 msec all ok
SM4 ran 45 tests in 0.15 msec all ok
Serpent ran 31380 tests in 91.72 msec all ok
Threefish-512 ran 75 tests in 0.24 msec all ok
TripleDES ran 1680 tests in 5.13 msec all ok
Twofish ran 16545 tests in 58.85 msec all ok
XTEA ran 1020 tests in 2.93 msec all ok
stream:
CTR-BE(AES-128) ran 648 tests in 7.39 msec all ok
CTR-BE(AES-128,4) ran 12 tests in 0.16 msec all ok
CTR-BE(AES-128,5) ran 12 tests in 0.14 msec all ok
CTR-BE(AES-128,6) ran 12 tests in 0.13 msec all ok
CTR-BE(AES-128,8) ran 12 tests in 0.15 msec all ok
CTR-BE(AES-192) ran 768 tests in 8.19 msec all ok
CTR-BE(AES-256) ran 804 tests in 8.67 msec all ok
CTR-BE(Blowfish) ran 12 tests in 0.55 msec all ok
CTR-BE(DES) ran 588 tests in 6.84 msec all ok
CTR-BE(Noekeon) ran 2304 tests in 25.67 msec all ok
CTR-BE(Serpent) ran 2100 tests in 25.95 msec all ok
CTR-BE(TripleDES) ran 2556 tests in 43.35 msec all ok
CTR-BE(XTEA) ran 1452 tests in 15.51 msec all ok
ChaCha(12) ran 48 tests in 0.50 msec all ok
ChaCha(20) ran 2064 tests in 22.30 msec all ok
ChaCha(8) ran 478 tests in 5.04 msec all ok
MARK-4 ran 120 tests in 0.94 msec all ok
OFB(AES-128) ran 132 tests in 1.42 msec all ok
OFB(AES-192) ran 12 tests in 0.12 msec all ok
OFB(AES-256) ran 12 tests in 0.12 msec all ok
OFB(DES) ran 48 tests in 0.53 msec all ok
RC4 ran 1656 tests in 16.09 msec all ok
RC4(3) ran 24 tests in 0.21 msec all ok
SHAKE-128 ran 13740 tests in 103.96 msec all ok
Salsa20 ran 143 tests in 1.19 msec all ok
hash:
Adler32 ran 266 tests in 0.45 msec all ok
BLAKE2b(224) ran 2547 tests in 8.33 msec all ok
BLAKE2b(256) ran 2547 tests in 8.22 msec all ok
BLAKE2b(384) ran 2547 tests in 8.35 msec all ok
BLAKE2b(512) ran 2675 tests in 9.79 msec all ok
CRC24 ran 284 tests in 0.46 msec all ok
CRC32 ran 266 tests in 0.51 msec all ok
Comb4P(MD4,MD5) ran 10 tests in 0.11 msec all ok
Comb4P(SHA-160,RIPEMD-160) ran 10 tests in 0.10 msec all ok
GOST-R-34.11-94 ran 95 tests in 1.58 msec all ok
Keccak-1600(224) ran 2667 tests in 13.80 msec all ok
Keccak-1600(256) ran 2667 tests in 14.09 msec all ok
Keccak-1600(384) ran 2667 tests in 16.11 msec all ok
Keccak-1600(512) ran 2667 tests in 18.26 msec all ok
MD4 ran 1500 tests in 2.66 msec all ok
MD5 ran 1520 tests in 2.91 msec all ok
Parallel(MD5,SHA-160) ran 13 tests in 0.10 msec all ok
Parallel(SHA-256,SHA-512) ran 15 tests in 0.11 msec all ok
RIPEMD-160 ran 1486 tests in 3.45 msec all ok
SHA-160 ran 3060 tests in 7.36 msec all ok
SHA-224 ran 50 tests in 0.13 msec all ok
SHA-256 ran 7786 tests in 19.63 msec all ok
SHA-3(224) ran 997 tests in 5.20 msec all ok
SHA-3(256) ran 997 tests in 5.22 msec all ok
SHA-3(384) ran 997 tests in 5.21 msec all ok
SHA-3(512) ran 997 tests in 10.33 msec all ok
SHA-384 ran 126 tests in 0.39 msec all ok
SHA-512 ran 2726 tests in 10.19 msec all ok
SHA-512-256 ran 17 tests in 0.06 msec all ok
SHAKE-128(1120) ran 10 tests in 0.04 msec all ok
SHAKE-128(128) ran 2107 tests in 8.89 msec all ok
SHAKE-256(2000) ran 10 tests in 0.06 msec all ok
SHAKE-256(256) ran 27 tests in 0.25 msec all ok
SM3 ran 1375 tests in 4.84 msec all ok
Skein-512(224) ran 2547 tests in 13.09 msec all ok
Skein-512(256) ran 2547 tests in 13.13 msec all ok
Skein-512(384) ran 2547 tests in 13.17 msec all ok
Skein-512(512) ran 2667 tests in 15.06 msec all ok
Skein-512(512,Test) ran 8 tests in 0.05 msec all ok
Streebog-256 ran 1307 tests in 10.02 msec all ok
Streebog-512 ran 1317 tests in 10.30 msec all ok
Tiger(16,3) ran 17 tests in 0.08 msec all ok
Tiger(16,4) ran 10 tests in 0.03 msec all ok
Tiger(20,3) ran 17 tests in 0.06 msec all ok
Tiger(20,4) ran 10 tests in 0.03 msec all ok
Tiger(24,3) ran 6513 tests in 22.14 msec all ok
Tiger(24,4) ran 10 tests in 0.04 msec all ok
Whirlpool ran 146 tests in 0.56 msec all ok
mac:
CBC-MAC(AES-128) ran 522 tests in 4.77 msec all ok
CBC-MAC(DES) ran 357 tests in 4.77 msec all ok
CMAC(AES-128) ran 245 tests in 2.63 msec all ok
CMAC(AES-192) ran 64 tests in 0.69 msec all ok
CMAC(AES-256) ran 75 tests in 0.80 msec all ok
CMAC(Blowfish) ran 11 tests in 1.30 msec all ok
CMAC(Threefish-512) ran 11 tests in 0.12 msec all ok
GMAC(AES-128) ran 300 tests in 3.84 msec all ok
GMAC(AES-192) ran 168 tests in 2.11 msec all ok
GMAC(AES-256) ran 168 tests in 2.13 msec all ok
HMAC(MD5) ran 44 tests in 0.41 msec all ok
HMAC(RIPEMD-160) ran 44 tests in 0.42 msec all ok
HMAC(SHA-160) ran 66 tests in 0.59 msec all ok
HMAC(SHA-224) ran 55 tests in 0.54 msec all ok
HMAC(SHA-256) ran 77 tests in 0.75 msec all ok
HMAC(SHA-3(224)) ran 88 tests in 1.24 msec all ok
HMAC(SHA-3(256)) ran 88 tests in 1.21 msec all ok
HMAC(SHA-3(384)) ran 88 tests in 1.25 msec all ok
HMAC(SHA-3(512)) ran 88 tests in 1.31 msec all ok
HMAC(SHA-384) ran 66 tests in 0.73 msec all ok
HMAC(SHA-512) ran 66 tests in 0.75 msec all ok
HMAC(SHA-512-256) ran 33 tests in 0.39 msec all ok
Poly1305 ran 852 tests in 5.95 msec all ok
SipHash(2,4) ran 641 tests in 4.90 msec all ok
X9.19-MAC ran 66 tests in 0.97 msec all ok
aead:
AES-128/CCM(10,2) ran 52 tests in 0.31 msec all ok
AES-128/CCM(12,2) ran 26 tests in 0.15 msec all ok
AES-128/CCM(14,2) ran 26 tests in 0.15 msec all ok
AES-128/CCM(16,2) ran 78 tests in 0.52 msec all ok
AES-128/CCM(16,3) ran 52 tests in 0.31 msec all ok
AES-128/CCM(16,4) ran 26 tests in 0.15 msec all ok
AES-128/CCM(16,5) ran 26 tests in 0.15 msec all ok
AES-128/CCM(16,6) ran 26 tests in 0.15 msec all ok
AES-128/CCM(16,7) ran 26 tests in 0.17 msec all ok
AES-128/CCM(16,8) ran 26 tests in 0.15 msec all ok
AES-128/CCM(4,2) ran 26 tests in 0.17 msec all ok
AES-128/CCM(4,8) ran 26 tests in 0.15 msec all ok
AES-128/CCM(6,2) ran 26 tests in 0.15 msec all ok
AES-128/CCM(6,7) ran 26 tests in 0.15 msec all ok
AES-128/CCM(8,2) ran 104 tests in 0.74 msec all ok
AES-128/CCM(8,3) ran 26 tests in 0.15 msec all ok
AES-128/EAX ran 2824 tests in 24.41 msec all ok
AES-128/EAX(8) ran 60 tests in 0.65 msec all ok
AES-128/GCM ran 2088 tests in 13.26 msec all ok
AES-128/GCM(12) ran 368 tests in 2.39 msec all ok
AES-128/GCM(8) ran 120 tests in 0.76 msec all ok
AES-128/OCB ran 1242 tests in 8.22 msec all ok
AES-128/OCB(12) ran 30 tests in 0.20 msec all ok
AES-128/SIV ran 7487 tests in 52.22 msec all ok
AES-192/EAX ran 150 tests in 1.29 msec all ok
AES-192/GCM ran 736 tests in 4.64 msec all ok
AES-192/GCM(12) ran 248 tests in 1.61 msec all ok
AES-256/EAX ran 180 tests in 1.56 msec all ok
AES-256/GCM ran 736 tests in 4.63 msec all ok
AES-256/GCM(12) ran 248 tests in 1.61 msec all ok
AES-256/GCM(13) ran 248 tests in 1.60 msec all ok
AES-256/GCM(14) ran 248 tests in 1.61 msec all ok
AES-256/GCM(15) ran 248 tests in 1.61 msec all ok
ARIA-128/GCM ran 144 tests in 0.93 msec all ok
ARIA-256/GCM ran 144 tests in 0.96 msec all ok
Blowfish/EAX ran 509 tests in 10.85 msec all ok
ChaCha20Poly1305 ran 41587 tests in 239.14 msec all ok
DES/EAX ran 509 tests in 4.69 msec all ok
SHACAL2/OCB(32) ran 90 tests in 0.65 msec all ok
Threefish-512/EAX ran 30 tests in 0.28 msec all ok
Threefish-512/OCB(32) ran 30 tests in 0.21 msec all ok
TripleDES/EAX ran 509 tests in 5.39 msec all ok
Twofish/EAX ran 989 tests in 8.82 msec all ok
modes:
AES-128/CBC/CTS ran 174 tests in 2.70 msec all ok
AES-128/CBC/NoPadding ran 780 tests in 9.44 msec all ok
AES-128/CBC/PKCS7 ran 1885 tests in 29.17 msec all ok
AES-128/CFB ran 366 tests in 4.07 msec all ok
AES-128/CFB(8) ran 405 tests in 4.79 msec all ok
AES-128/XTS ran 5036 tests in 78.49 msec all ok
AES-192/CBC/NoPadding ran 66 tests in 0.80 msec all ok
AES-192/CFB ran 37 tests in 0.40 msec all ok
AES-192/CFB(8) ran 37 tests in 0.44 msec all ok
AES-256/CBC/NoPadding ran 66 tests in 0.80 msec all ok
AES-256/CFB ran 37 tests in 0.42 msec all ok
AES-256/CFB(8) ran 37 tests in 0.47 msec all ok
AES-256/XTS ran 1486 tests in 23.00 msec all ok
ARIA-256/CBC/NoPadding ran 37 tests in 0.52 msec all ok
Blowfish/CBC/NoPadding ran 36 tests in 0.62 msec all ok
CAST-128/CBC/PKCS7 ran 29 tests in 0.37 msec all ok
CTR-BE(AES-128) ran 66 tests in 0.61 msec all ok
CTR-BE(DES) ran 66 tests in 0.61 msec all ok
DES/CBC/CTS ran 1278 tests in 18.81 msec all ok
DES/CBC/NoPadding ran 29 tests in 0.46 msec all ok
DES/CBC/OneAndZeros ran 1015 tests in 15.67 msec all ok
DES/CBC/PKCS7 ran 957 tests in 11.64 msec all ok
DES/CFB ran 668 tests in 8.15 msec all ok
DES/CFB(16) ran 222 tests in 2.67 msec all ok
DES/CFB(32) ran 259 tests in 3.17 msec all ok
DES/CFB(8) ran 370 tests in 4.64 msec all ok
Noekeon/CBC/PKCS7 ran 3712 tests in 57.39 msec all ok
SHACAL2/XTS ran 29 tests in 0.52 msec all ok
Serpent/XTS ran 7034 tests in 118.42 msec all ok
Threefish-512/XTS ran 29 tests in 0.46 msec all ok
TripleDES/CBC/NoPadding ran 37 tests in 0.48 msec all ok
TripleDES/CBC/PKCS7 ran 37 tests in 0.42 msec all ok
TripleDES/CFB ran 37 tests in 0.52 msec all ok
TripleDES/CFB(8) ran 368 tests in 5.03 msec all ok
TripleDES/XTS ran 4424 tests in 72.76 msec all ok
Twofish/XTS ran 8248 tests in 135.84 msec all ok
kdf:
HKDF(HMAC(SHA-160)) ran 16 tests in 0.21 msec all ok
HKDF(HMAC(SHA-256)) ran 12 tests in 0.12 msec all ok
HKDF(HMAC(SHA-512)) ran 20 tests in 0.18 msec all ok
HKDF-Expand(HMAC(SHA-160)) ran 16 tests in 0.10 msec all ok
HKDF-Expand(HMAC(SHA-256)) ran 12 tests in 0.14 msec all ok
HKDF-Expand(HMAC(SHA-512)) ran 20 tests in 0.13 msec all ok
HKDF-Extract(HMAC(SHA-160)) ran 16 tests in 0.08 msec all ok
HKDF-Extract(HMAC(SHA-256)) ran 12 tests in 0.07 msec all ok
HKDF-Extract(HMAC(SHA-512)) ran 20 tests in 0.12 msec all ok
KDF1(SHA-160) ran 24 tests in 0.09 msec all ok
KDF1-18033(SHA-160) ran 8 tests in 0.04 msec all ok
KDF1-18033(SHA-256) ran 8 tests in 0.03 msec all ok
KDF2(SHA-160) ran 316 tests in 1.16 msec all ok
KDF2(SHA-256) ran 4 tests in 0.02 msec all ok
SP800-108-Counter(CMAC(AES-128)) ran 120 tests in 0.73 msec all ok
SP800-108-Counter(CMAC(AES-192)) ran 120 tests in 0.73 msec all ok
SP800-108-Counter(CMAC(AES-256)) ran 120 tests in 0.74 msec all ok
SP800-108-Counter(CMAC(TripleDES)) ran 120 tests in 1.24 msec all ok
SP800-108-Counter(HMAC(SHA-160)) ran 120 tests in 0.68 msec all ok
SP800-108-Counter(HMAC(SHA-256)) ran 120 tests in 0.77 msec all ok
SP800-108-Counter(HMAC(SHA-384)) ran 120 tests in 0.81 msec all ok
SP800-108-Counter(HMAC(SHA-512)) ran 120 tests in 0.81 msec all ok
SP800-108-Feedback(CMAC(AES-128)) ran 120 tests in 0.75 msec all ok
SP800-108-Feedback(CMAC(AES-192)) ran 120 tests in 0.75 msec all ok
SP800-108-Feedback(CMAC(AES-256)) ran 120 tests in 0.75 msec all ok
SP800-108-Feedback(CMAC(TripleDES)) ran 120 tests in 1.30 msec all ok
SP800-108-Feedback(HMAC(SHA-160)) ran 120 tests in 0.70 msec all ok
SP800-108-Feedback(HMAC(SHA-256)) ran 120 tests in 0.80 msec all ok
SP800-108-Feedback(HMAC(SHA-384)) ran 120 tests in 0.82 msec all ok
SP800-108-Feedback(HMAC(SHA-512)) ran 120 tests in 0.84 msec all ok
SP800-108-Pipeline(CMAC(AES-128)) ran 120 tests in 1.05 msec all ok
SP800-108-Pipeline(CMAC(AES-192)) ran 120 tests in 1.04 msec all ok
SP800-108-Pipeline(CMAC(AES-256)) ran 120 tests in 1.09 msec all ok
SP800-108-Pipeline(CMAC(TripleDES)) ran 120 tests in 2.25 msec all ok
SP800-108-Pipeline(HMAC(SHA-160)) ran 120 tests in 1.05 msec all ok
SP800-108-Pipeline(HMAC(SHA-256)) ran 120 tests in 1.11 msec all ok
SP800-108-Pipeline(HMAC(SHA-384)) ran 120 tests in 1.25 msec all ok
SP800-108-Pipeline(HMAC(SHA-512)) ran 120 tests in 1.24 msec all ok
SP800-56A(HMAC(SHA-160)) ran 200 tests in 1.98 msec all ok
SP800-56A(HMAC(SHA-224)) ran 196 tests in 2.00 msec all ok
SP800-56A(HMAC(SHA-256)) ran 196 tests in 1.94 msec all ok
SP800-56A(HMAC(SHA-384)) ran 196 tests in 2.00 msec all ok
SP800-56A(HMAC(SHA-512)) ran 192 tests in 1.96 msec all ok
SP800-56A(SHA-160) ran 188 tests in 1.08 msec all ok
SP800-56A(SHA-224) ran 188 tests in 1.12 msec all ok
SP800-56A(SHA-256) ran 188 tests in 1.10 msec all ok
SP800-56A(SHA-384) ran 188 tests in 1.40 msec all ok
SP800-56A(SHA-512) ran 188 tests in 1.64 msec all ok
SP800-56C(HMAC(SHA-160)) ran 40 tests in 0.37 msec all ok
SP800-56C(HMAC(SHA-256)) ran 40 tests in 0.37 msec all ok
SP800-56C(HMAC(SHA-384)) ran 40 tests in 0.44 msec all ok
SP800-56C(HMAC(SHA-512)) ran 40 tests in 0.42 msec all ok
TLS-12-PRF(HMAC(SHA-224)) ran 4 tests in 0.06 msec all ok
TLS-12-PRF(HMAC(SHA-256)) ran 4 tests in 0.06 msec all ok
TLS-12-PRF(HMAC(SHA-384)) ran 4 tests in 0.07 msec all ok
TLS-12-PRF(HMAC(SHA-512)) ran 4 tests in 0.07 msec all ok
TLS-PRF ran 128 tests in 1.37 msec all ok
X9.42-PRF(1.2.840.113549.1.9.16.3.7) ran 4 tests in 0.06 msec all ok
X9.42-PRF(KeyWrap.TripleDES) ran 4 tests in 0.53 msec all ok
pbkdf:
OpenPGP-S2K(SHA-160) ran 27 tests in 641.32 msec all ok
OpenPGP-S2K(SHA-384) ran 12 tests in 41.88 msec all ok
PBKDF1(SHA-160) ran 10 tests in 9.94 msec all ok
PBKDF2(CMAC(Blowfish)) ran 3 tests in 0.30 msec all ok
PBKDF2(HMAC(SHA-160)) ran 33 tests in 114.37 msec all ok
PBKDF2(HMAC(SHA-256)) ran 3 tests in 109.16 msec all ok
PBKDF2(HMAC(SHA-384)) ran 3 tests in 97.88 msec all ok
PBKDF2(HMAC(SHA-512)) ran 3 tests in 98.68 msec all ok
hmac_drbg:
HMAC_DRBG(SHA-1) ran 240 tests in 16.57 msec all ok
HMAC_DRBG(SHA-224) ran 240 tests in 25.90 msec all ok
HMAC_DRBG(SHA-256) ran 240 tests in 26.71 msec all ok
HMAC_DRBG(SHA-384) ran 240 tests in 37.25 msec all ok
HMAC_DRBG(SHA-512) ran 240 tests in 38.22 msec all ok
HMAC_DRBG(SHA-512-256) ran 240 tests in 45.75 msec all ok
util:
Util load/store ran 229 tests all ok
Util round_down ran 6 tests in 0.01 msec all ok
Util round_up ran 11 tests in 0.20 msec all ok
argon2:
Argon2d ran 12 tests in 157.72 msec all ok
Argon2i ran 15 tests in 478.06 msec all ok
Argon2id ran 330 tests in 420.76 msec all ok
argon2_pass:
Argon2 password hash ran 9 tests in 205.20 msec all ok
asn1:
ASN.1 ASCII encoding ran 2 tests all ok
ASN.1 ASCII parsing ran 1 tests all ok
ASN.1 BMP string (UCS-2) parsing ran 1 tests all ok
ASN.1 UTF-8 encoding ran 2 tests all ok
ASN.1 UTF-8 parsing ran 1 tests all ok
ASN.1 universal string (UCS-4) parsing ran 1 tests all ok
BER nested indefinite length ran 1 tests all ok
BER stack recursion ran 1 tests all ok
asn1_printer:
ASN1_Pretty_Printer ran 6 tests all ok
asn1_time:
ASN.1 date parsing ran 25 tests in 0.22 msec all ok
auto_rng_unit:
AutoSeeded_RNG ran 13 tests all ok
base32:
Base32 ran 84 tests in 0.16 msec all ok
base58:
Base58 ran 32 tests in 0.44 msec all ok
base58c:
Base58 Check ran 8 tests in 0.34 msec all ok
base64:
Base64 ran 64 tests in 0.14 msec all ok
bc_pad:
ESP ran 32 tests in 0.04 msec all ok
NoPadding ran 10 tests in 0.02 msec all ok
OneAndZeros ran 20 tests in 0.03 msec all ok
PKCS7 ran 18 tests in 0.03 msec all ok
X9.23 ran 24 tests in 0.03 msec all ok
bcrypt:
bcrypt ran 380 tests in 3.81 sec all ok
bcrypt_pbkdf:
bcrypt PBKDF ran 36 tests in 2.67 sec all ok
bigint_unit:
BigInt IO operators ran 8 tests all ok
BigInt encoding functions ran 1 tests all ok
BigInt get_substring ran 34816 tests all ok
BigInt prime generation ran 65 tests all ok
BigInt size functions ran 72 tests all ok
bit_ops:
ctz ran 6 tests all ok
is_power_of_2 ran 15 tests all ok
significant_bytes ran 14 tests all ok
blowfish_salted:
Blowfish salted key schedule ran 11 tests in 0.83 msec all ok
bn_add:
BigInt Addition ran 312 tests in 0.91 msec all ok
bn_div:
BigInt Divide ran 2520 tests in 106.43 msec all ok
bn_gcd:
BigInt GCD ran 3 tests in 0.26 msec all ok
bn_invmod:
BigInt InvMod ran 267 tests in 31.61 msec all ok
bn_isprime:
BigInt Test NonPrime ran 107 tests in 336.19 msec all ok
BigInt Test Prime ran 25 tests in 97.57 msec all ok
bn_issquare:
BigInt IsSquare ran 7 tests in 0.10 msec all ok
bn_jacobi:
BigInt Jacobi ran 5 tests in 0.04 msec all ok
bn_lshift:
BigInt Lshift ran 100 tests in 0.43 msec all ok
bn_lucas:
Lucas primality test ran 2999 tests all ok
bn_mod:
BigInt Mod ran 385 tests in 8.20 msec all ok
bn_mul:
BigInt Multiply ran 416 tests in 1.51 msec all ok
bn_powmod:
BigInt Powmod ran 213 tests in 312.96 msec all ok
bn_rand:
BigInt Random ran 2 tests in 0.02 msec all ok
bn_ressol:
BigInt Ressol ran 22 tests in 14.21 msec all ok
bn_rshift:
BigInt Rshift ran 102 tests in 0.38 msec all ok
bn_sqr:
BigInt Square ran 42 tests in 0.18 msec all ok
bn_sub:
BigInt Subtraction ran 154 tests in 0.62 msec all ok
certstor:
Certificate Store - Find by subject hash ran 6 tests all ok
Certificate Store - Load every cert of every files ran 2 tests all ok
Certificate Store SQLITE3 - All subjects ran 7 tests all ok
Certificate Store SQLITE3 - CRL ran 9 tests all ok
Certificate Store SQLITE3 - Find all certs ran 8 tests all ok
Certificate Store SQLITE3 - Insert, Find, Remove ran 38 tests all ok
certstor_flatfile:
Flatfile Certificate Store - Find Certificate by SHA1(pubkey) ran 4 tests in 5.96 msec all ok
Flatfile Certificate Store - Find Certificate by UTF8 subject DN ran 3 tests in 5.95 msec all ok
Flatfile Certificate Store - Find Certificate by subject DN ran 3 tests in 5.97 msec all ok
Flatfile Certificate Store - Find Certificate by subject DN and key ID ran 3 tests in 5.95 msec all ok
Flatfile Certificate Store - Find Certificates by subject DN and key ID ran 4 tests in 5.96 msec all ok
Flatfile Certificate Store - Find all Certificate Subjects ran 3 tests in 5.96 msec all ok
Flatfile Certificate Store - Open Store ran 2 tests in 6.04 msec all ok
Flatfile Certificate Store - can deal with no matches (regression test) ran 3 tests in 6.01 msec all ok
Flatfile Certificate Store - rejects bundles with non-CA certs ran 1 tests all ok
certstor_system:
System Certificate Store - Find Certificate by SHA1(pubkey) ran 4 tests in 0.00 msec all ok
System Certificate Store - Find Certificate by UTF8 subject DN ran 3 tests in 0.02 msec all ok
System Certificate Store - Find Certificate by subject DN ran 3 tests in 0.01 msec all ok
System Certificate Store - Find Certificate by subject DN and key ID ran 3 tests in 0.01 msec all ok
System Certificate Store - Find Certificates by subject DN and key ID ran 4 tests in 0.01 msec all ok
System Certificate Store - Find all Certificate Subjects ran 3 tests in 0.27 msec all ok
System Certificate Store - Find all Certificates by subject DN ran 3 tests in 0.01 msec all ok
System Certificate Store - Open Keychain ran 1 tests in 454.46 msec all ok
System Certificate Store - can deal with no matches (regression test) ran 3 tests in 0.05 msec all ok
chacha_rng:
ChaCha_RNG ran 21 tests in 0.91 msec all ok
chacha_rng_unit:
ChaCha_RNG Broken Entropy Input ran 7 tests all ok
ChaCha_RNG Nonce Check ran 21 tests all ok
ChaCha_RNG Prediction Resistance ran 3 tests all ok
ChaCha_RNG Randomize With Timestamp Input ran 2 tests all ok
ChaCha_RNG Reseed ran 6 tests all ok
ChaCha_RNG Reseed KAT ran 5 tests all ok
ChaCha_RNG Security Level ran 1 tests all ok
charset:
Charset ran 14 tests in 0.04 msec all ok
Charset negative tests ran 5 tests all ok
clang_bug:
PKCS8::load_key does not crash when compiled with Clang 8 ran 1 tests all ok
compression:
bz2 compression ran 30 tests all ok
deflate compression ran 30 tests all ok
gzip compression ran 30 tests all ok
lzma compression ran 30 tests all ok
zlib compression ran 30 tests all ok
cpuid:
CPUID ran 9 tests all ok
create_compression:
bz2 create compression ran 2 tests all ok
create invalid compression ran 2 tests all ok
deflate create compression ran 2 tests all ok
gzip create compression ran 2 tests all ok
lzma create compression ran 2 tests all ok
zlib create compression ran 2 tests all ok
cryptobox:
Cryptobox ran 54 tests in 4.34 sec all ok
ct_utils:
CT utils ran 20 tests all ok
curve25519_agreement:
X25519/Raw key agreement ran 144 tests in 26.27 msec all ok
curve25519_keygen:
Curve25519 keygen ran 27 tests in 123.81 msec all ok
curve25519_rt:
Curve25519 roundtrip ran 10 tests all ok
curve25519_scalar:
Curve25519 scalarmult ran 18 tests in 2.89 msec all ok
dh_invalid:
DH invalid keys ran 7 tests in 1.60 sec all ok
dh_kat:
DH negative tests ran 2 tests all ok
Diffie-Hellman/KDF2(SHA-1) Valid key agreement ran 4 tests in 6.86 msec all ok
Diffie-Hellman/Raw Valid key agreement ran 72 tests in 833.66 msec all ok
dh_keygen:
DH modp/ietf/1024 keygen ran 27 tests in 3.30 sec all ok
dl_group:
DL_Group encoding ran 9 tests all ok
DL_Group errors ran 2 tests all ok
dl_group_gen:
DL_Group generate ran 19 tests in 5.18 sec all ok
dl_group_named:
DL_Group named ran 93 tests in 786.95 msec all ok
dlies:
DLIES AES-256/CBC ran 84 tests in 2.52 sec all ok
DLIES AES-256/GCM ran 16 tests in 480.63 msec all ok
DLIES XOR ran 44 tests in 1.28 sec all ok
dlies_unit:
DLIES XOR ran 12 tests all ok
dsa_keygen:
DSA dsa/jce/1024 keygen ran 27 tests in 1.77 sec all ok
dsa_param:
DSA Parameter Generation ran 40 tests in 5.64 sec all ok
dsa_sign:
DSA/EMSA1(SHA-1) signature generation ran 45 tests in 78.42 msec all ok
DSA/EMSA1(SHA-224) signature generation ran 36 tests in 62.53 msec all ok
DSA/EMSA1(SHA-256) signature generation ran 36 tests in 55.26 msec all ok
DSA/EMSA1(SHA-384) signature generation ran 36 tests in 56.25 msec all ok
DSA/EMSA1(SHA-512) signature generation ran 36 tests in 56.39 msec all ok
dsa_verify:
DSA/Raw signature verification ran 14 tests in 5.32 msec all ok
ec_group:
EC_Group brainpool160r1 ran 43 tests all ok
EC_Group brainpool192r1 ran 43 tests all ok
EC_Group brainpool224r1 ran 43 tests all ok
EC_Group brainpool256r1 ran 43 tests all ok
EC_Group brainpool320r1 ran 43 tests all ok
EC_Group brainpool384r1 ran 43 tests all ok
EC_Group brainpool512r1 ran 43 tests all ok
EC_Group frp256v1 ran 43 tests all ok
EC_Group gost_256A ran 43 tests all ok
EC_Group gost_512A ran 43 tests all ok
EC_Group secp160k1 ran 43 tests all ok
EC_Group secp160r1 ran 43 tests all ok
EC_Group secp160r2 ran 43 tests all ok
EC_Group secp192k1 ran 43 tests all ok
EC_Group secp192r1 ran 43 tests all ok
EC_Group secp224k1 ran 43 tests all ok
EC_Group secp224r1 ran 43 tests all ok
EC_Group secp256k1 ran 43 tests all ok
EC_Group secp256r1 ran 43 tests all ok
EC_Group secp384r1 ran 43 tests all ok
EC_Group secp521r1 ran 43 tests all ok
EC_Group sm2p256v1 ran 43 tests all ok
EC_Group x962_p192v2 ran 43 tests all ok
EC_Group x962_p192v3 ran 43 tests all ok
EC_Group x962_p239v1 ran 43 tests all ok
EC_Group x962_p239v2 ran 43 tests all ok
EC_Group x962_p239v3 ran 43 tests all ok
ecc_basemul:
ECC base point multiply frp256v1 ran 312 tests in 261.58 msec all ok
ECC base point multiply secp192r1 ran 312 tests in 151.53 msec all ok
ECC base point multiply secp224r1 ran 312 tests in 173.47 msec all ok
ECC base point multiply secp256k1 ran 300 tests in 189.27 msec all ok
ECC base point multiply secp256r1 ran 312 tests in 186.54 msec all ok
ECC base point multiply secp384r1 ran 312 tests in 352.41 msec all ok
ECC base point multiply secp521r1 ran 312 tests in 668.31 msec all ok
ecc_invalid:
ECC invalid keys ran 5 tests in 38.49 msec all ok
ecc_randomized:
ECC randomized brainpool160r1 ran 39 tests in 26.16 msec all ok
ECC randomized brainpool192r1 ran 39 tests in 30.82 msec all ok
ECC randomized brainpool224r1 ran 39 tests in 35.87 msec all ok
ECC randomized brainpool256r1 ran 39 tests in 40.79 msec all ok
ECC randomized brainpool320r1 ran 39 tests in 78.99 msec all ok
ECC randomized brainpool384r1 ran 39 tests in 92.49 msec all ok
ECC randomized brainpool512r1 ran 39 tests in 161.10 msec all ok
ECC randomized frp256v1 ran 39 tests in 39.91 msec all ok
ECC randomized gost_256A ran 39 tests in 39.81 msec all ok
ECC randomized gost_512A ran 39 tests in 151.89 msec all ok
ECC randomized secp160k1 ran 39 tests in 26.22 msec all ok
ECC randomized secp160r1 ran 39 tests in 27.69 msec all ok
ECC randomized secp160r2 ran 39 tests in 25.25 msec all ok
ECC randomized secp192k1 ran 39 tests in 27.91 msec all ok
ECC randomized secp192r1 ran 39 tests in 27.08 msec all ok
ECC randomized secp224k1 ran 39 tests in 33.34 msec all ok
ECC randomized secp224r1 ran 39 tests in 45.65 msec all ok
ECC randomized secp256k1 ran 39 tests in 39.10 msec all ok
ECC randomized secp256r1 ran 39 tests in 34.15 msec all ok
ECC randomized secp384r1 ran 39 tests in 70.59 msec all ok
ECC randomized secp521r1 ran 39 tests in 137.51 msec all ok
ECC randomized sm2p256v1 ran 39 tests in 40.90 msec all ok
ECC randomized x962_p192v2 ran 39 tests in 26.63 msec all ok
ECC randomized x962_p192v3 ran 39 tests in 26.75 msec all ok
ECC randomized x962_p239v1 ran 39 tests in 37.56 msec all ok
ECC randomized x962_p239v2 ran 39 tests in 37.59 msec all ok
ECC randomized x962_p239v3 ran 39 tests in 37.60 msec all ok
ecc_unit:
ECC Unit ran 23 tests all ok
ECC registration ran 1 tests all ok
ecc_varmul:
ECC var point multiply secp160r1 ran 12 tests in 4.60 msec all ok
ECC var point multiply secp160r2 ran 12 tests in 4.54 msec all ok
ECC var point multiply secp256r1 ran 12 tests in 5.33 msec all ok
ECC var point multiply secp384r1 ran 12 tests in 9.82 msec all ok
ECC var point multiply secp521r1 ran 12 tests in 17.38 msec all ok
ecdh_kat:
ECDH/Raw brainpool256r1 key agreement ran 4 tests in 4.74 msec all ok
ECDH/Raw brainpool384r1 key agreement ran 4 tests in 10.41 msec all ok
ECDH/Raw brainpool512r1 key agreement ran 4 tests in 18.73 msec all ok
ECDH/Raw frp256v1 key agreement ran 50 tests in 57.72 msec all ok
ECDH/Raw secp192r1 key agreement ran 50 tests in 40.39 msec all ok
ECDH/Raw secp224r1 key agreement ran 100 tests in 62.13 msec all ok
ECDH/Raw secp256r1 key agreement ran 100 tests in 66.46 msec all ok
ECDH/Raw secp384r1 key agreement ran 100 tests in 228.30 msec all ok
ECDH/Raw secp521r1 key agreement ran 100 tests in 253.15 msec all ok
ecdh_keygen:
ECDH brainpool256r1 keygen ran 27 tests in 367.64 msec all ok
ECDH brainpool384r1 keygen ran 27 tests in 608.41 msec all ok
ECDH brainpool512r1 keygen ran 27 tests in 963.98 msec all ok
ECDH frp256v1 keygen ran 27 tests in 362.41 msec all ok
ECDH secp256r1 keygen ran 27 tests in 361.37 msec all ok
ECDH secp384r1 keygen ran 27 tests in 584.75 msec all ok
ECDH secp521r1 keygen ran 27 tests in 1.15 sec all ok
ecdh_unit:
ECDH key exchange ran 4 tests all ok
ecdsa_invalid:
ECDSA invalid keys ran 78 tests in 1.87 sec all ok
ecdsa_key_recovery:
ECDSA key recovery ran 8 tests in 28.21 msec all ok
ecdsa_keygen:
ECDSA frp256v1 keygen ran 27 tests in 206.20 msec all ok
ECDSA secp256r1 keygen ran 27 tests in 187.37 msec all ok
ECDSA secp384r1 keygen ran 27 tests in 313.88 msec all ok
ECDSA secp521r1 keygen ran 27 tests in 404.03 msec all ok
ecdsa_sign:
ECDSA/EMSA1(SHA-1) signature generation ran 270 tests in 524.14 msec all ok
ECDSA/EMSA1(SHA-224) signature generation ran 251 tests in 437.22 msec all ok
ECDSA/EMSA1(SHA-256) signature generation ran 251 tests in 437.90 msec all ok
ECDSA/EMSA1(SHA-384) signature generation ran 251 tests in 435.52 msec all ok
ECDSA/EMSA1(SHA-512) signature generation ran 251 tests in 440.41 msec all ok
ECDSA/Raw signature generation ran 38 tests in 57.92 msec all ok
ECDSA/Raw(SHA-1) signature generation ran 19 tests in 12.78 msec all ok
ECDSA/Raw(SHA-224) signature generation ran 19 tests in 12.79 msec all ok
ECDSA/Raw(SHA-256) signature generation ran 38 tests in 25.13 msec all ok
ECDSA/Raw(SHA-384) signature generation ran 19 tests in 45.75 msec all ok
ECDSA/Raw(SHA-512) signature generation ran 19 tests in 54.24 msec all ok
ecdsa_unit:
ECDSA Unit ran 60 tests all ok
ecdsa_verify:
ECDSA/Raw signature verification ran 119 tests in 85.36 msec all ok
ecdsa_verify_wycheproof:
ECDSA/EMSA1(SHA-224) signature verification ran 1000 tests in 582.19 msec all ok
ECDSA/EMSA1(SHA-256) signature verification ran 2026 tests in 1.26 sec all ok
ECDSA/EMSA1(SHA-384) signature verification ran 1311 tests in 1.92 sec all ok
ECDSA/EMSA1(SHA-512) signature verification ran 1629 tests in 2.87 sec all ok
ecgdsa_keygen:
ECGDSA secp256r1 keygen ran 27 tests in 198.33 msec all ok
ECGDSA secp384r1 keygen ran 27 tests in 273.18 msec all ok
ECGDSA secp521r1 keygen ran 27 tests in 430.29 msec all ok
ecgdsa_sign:
ECGDSA/EMSA1(RIPEMD-160) signature generation ran 27 tests in 33.47 msec all ok
ECGDSA/EMSA1(SHA-1) signature generation ran 9 tests in 7.24 msec all ok
ECGDSA/EMSA1(SHA-224) signature generation ran 18 tests in 28.02 msec all ok
ECGDSA/EMSA1(SHA-256) signature generation ran 27 tests in 46.76 msec all ok
ECGDSA/EMSA1(SHA-384) signature generation ran 18 tests in 60.25 msec all ok
ECGDSA/EMSA1(SHA-512) signature generation ran 9 tests in 38.48 msec all ok
ecies:
ECIES ran 36 tests in 195.14 msec all ok
ecies_iso:
ECIES-ISO ran 148 tests in 257.08 msec all ok
ecies_unit:
ECIES cipher not found ran 1 tests all ok
ECIES ciphertext too short ran 1 tests all ok
ECIES kdf not found ran 1 tests all ok
ECIES mac not found ran 1 tests all ok
ECIES other key not set ran 1 tests all ok
ECIES short system params ctor ran 3 tests all ok
eckcdsa_keygen:
ECKCDSA secp256r1 keygen ran 27 tests in 199.24 msec all ok
ECKCDSA secp384r1 keygen ran 27 tests in 272.23 msec all ok
ECKCDSA secp521r1 keygen ran 27 tests in 437.77 msec all ok
eckcdsa_sign:
ECKCDSA/EMSA1(SHA-1) signature generation ran 9 tests in 5.99 msec all ok
ECKCDSA/EMSA1(SHA-224) signature generation ran 9 tests in 7.60 msec all ok
ECKCDSA/EMSA1(SHA-256) signature generation ran 9 tests in 8.11 msec all ok
ed25519_curdle:
Ed25519 CURDLE format ran 3 tests all ok
ed25519_sign:
Ed25519/Ed25519ph signature generation ran 9 tests in 2.78 msec all ok
Ed25519/Pure signature generation ran 6381 tests in 2.02 sec all ok
Ed25519/SHA-256 signature generation ran 9 tests in 2.75 msec all ok
ed25519_verify:
Ed25519/Pure signature verification ran 59 tests in 17.08 msec all ok
elgamal_encrypt:
ElGamal/Raw encryption ran 100 tests in 92.88 msec all ok
elgamal_keygen:
ElGamal modp/ietf/1024 keygen ran 27 tests in 3.25 sec all ok
eme_pkcs1v15:
PKCSv15 Decoding ran 65 tests in 0.18 msec all ok
entropy:
Entropy source dev_random ran 9 tests in 608.22 msec all ok
Entropy source proc_walk ran 9 tests in 716.28 msec all ok
Entropy source rdrand ran 1 tests in 0.00 msec all ok
Entropy source rdseed ran 1 tests in 0.01 msec all ok
Entropy source system_rng ran 9 tests in 604.94 msec all ok
ffi:
FFI ran 22 tests all ok
FFI CBC cipher ran 39 tests all ok
FFI CRL ran 11 tests all ok
FFI Cert validation ran 39 tests all ok
FFI DH ran 46 tests all ok
FFI DSA ran 134 tests all ok
FFI EAX ran 47 tests all ok
FFI ECDH ran 82 tests all ok
FFI ECDSA ran 63 tests all ok
FFI ECDSA cert ran 41 tests all ok
FFI Ed25519 ran 20 tests all ok
FFI ElGamal ran 102 tests all ok
FFI FPE ran 12 tests all ok
FFI GCM ran 58 tests all ok
FFI HOTP ran 16 tests all ok
FFI KDF ran 9 tests all ok
FFI MAC ran 32 tests all ok
FFI MP ran 115 tests all ok
FFI McEliece ran 35 tests all ok
FFI PKCS hash id ran 5 tests all ok
FFI RNG ran 19 tests all ok
FFI RSA ran 75 tests all ok
FFI RSA cert ran 10 tests all ok
FFI SM2 Enc ran 50 tests all ok
FFI SM2 Sig ran 62 tests all ok
FFI Scrypt ran 5 tests all ok
FFI TOTP ran 9 tests all ok
FFI X25519 ran 16 tests all ok
FFI base64 ran 7 tests all ok
FFI block ciphers ran 29 tests all ok
FFI error handling ran 172 tests all ok
FFI hash ran 34 tests all ok
FFI hex ran 5 tests all ok
FFI keywrap ran 5 tests all ok
FFI stream ciphers ran 11 tests all ok
filter:
DataSink ran 3 tests all ok
DataSinkFlush ran 1 tests all ok
Filter Chain ran 6 tests all ok
Filter Fork ran 4 tests all ok
Pipe ran 46 tests all ok
Pipe CBC ran 14 tests all ok
Pipe CFB ran 30 tests all ok
Pipe CTR ran 3 tests all ok
Pipe I/O operators ran 2 tests all ok
Pipe compress bzip2 ran 3 tests all ok
Pipe compress zlib ran 4 tests all ok
Pipe file descriptor IO ran 1 tests all ok
SecureQueue ran 9 tests all ok
Threaded_Fork ran 11 tests all ok
fpe_fe1:
FPE_FE1 ran 10 tests in 3.86 msec all ok
gf2m:
GF2m ran 131064 tests all ok
gost_3410_keygen:
GOST-34.10 gost_256A keygen ran 27 tests in 352.01 msec all ok
GOST-34.10 secp256r1 keygen ran 27 tests in 353.11 msec all ok
gost_3410_sign:
GOST 34.10-2001/Raw signature generation ran 9 tests in 13.58 msec all ok
gost_3410_verify:
GOST 34.10-2001/Raw signature verification ran 7 tests in 8.61 msec all ok
hash_nist_mc:
NIST Monte Carlo SHA-1 ran 2 tests in 185.82 msec all ok
NIST Monte Carlo SHA-224 ran 2 tests in 405.00 msec all ok
NIST Monte Carlo SHA-256 ran 2 tests in 401.37 msec all ok
NIST Monte Carlo SHA-384 ran 2 tests in 541.64 msec all ok
NIST Monte Carlo SHA-512 ran 2 tests in 548.52 msec all ok
NIST Monte Carlo SHA-512-256 ran 1 tests in 153.91 msec all ok
hash_rep:
Long input SHA-1 ran 2 tests in 10.74 msec all ok
Long input SHA-224 ran 2 tests in 27.04 msec all ok
Long input SHA-256 ran 2 tests in 20.99 msec all ok
Long input SHA-3(224) ran 1 tests in 11.87 msec all ok
Long input SHA-3(256) ran 1 tests in 12.49 msec all ok
Long input SHA-3(384) ran 1 tests in 16.18 msec all ok
Long input SHA-3(512) ran 1 tests in 23.08 msec all ok
Long input SHA-384 ran 2 tests in 19.80 msec all ok
Long input SHA-512 ran 2 tests in 19.33 msec all ok
Long input Tiger ran 1 tests in 5.29 msec all ok
hkdf_expand_label:
HKDF-Expand-Label(SHA-256) ran 2 tests in 0.05 msec all ok
HKDF-Expand-Label(SHA-384) ran 2 tests in 0.06 msec all ok
hmac_drbg_unit:
HMAC_DRBG Broken Entropy Input ran 7 tests all ok
HMAC_DRBG Nonce Check ran 21 tests all ok
HMAC_DRBG Prediction Resistance ran 3 tests all ok
HMAC_DRBG Randomize With Timestamp Input ran 2 tests all ok
HMAC_DRBG Reseed ran 8 tests all ok
HMAC_DRBG Reseed KAT ran 5 tests all ok
HMAC_DRBG Security Level ran 5 tests all ok
HMAC_DRBG max_number_of_bytes_per_request ran 6 tests all ok
HMAC_DRBG reseed_interval limits ran 2 tests all ok
hostname:
Hostname Matching ran 44 tests in 0.18 msec all ok
invalid_name_hash:
Invalid HashFunction names ran 8 tests all ok
iv_carryover:
CBC IV carry ran 4 tests all ok
CFB IV carry ran 6 tests all ok
CTR IV carry ran 54 tests all ok
mce_keygen:
McEliece keygen ran 15 tests in 640.17 msec all ok
mceliece:
McEliece IES ran 671 tests in 413.62 msec all ok
McEliece KEM ran 610 tests in 69.52 msec all ok
McEliece keygen ran 183 tests in 470.68 msec all ok
mp_unit:
bigint_cnd_abs ran 6 tests all ok
bigint_cnd_add ran 4 tests all ok
bigint_cnd_sub ran 4 tests all ok
bigint_cnd_swap ran 12 tests all ok
newhope:
NEWHOPE ran 4000 tests in 556.36 msec all ok
nist_key_wrap:
NIST keywrap ran 270 tests in 2.35 msec all ok
nist_key_wrap_invalid:
NIST keywrap (invalid inputs) ran 10 tests in 0.25 msec all ok
nist_redc:
NIST P-192 reduction ran 34 tests in 1.57 msec all ok
NIST P-224 reduction ran 34 tests in 1.95 msec all ok
NIST P-256 reduction ran 34 tests in 2.30 msec all ok
NIST P-384 reduction ran 34 tests in 3.83 msec all ok
NIST P-521 reduction ran 34 tests in 5.04 msec all ok
ocb_long:
OCB long ran 3474 tests in 23.32 msec all ok
ocb_long_wide:
OCB wide block long test ran 5 tests in 7.14 msec all ok
ocb_wide:
OCB wide block KAT ran 20 tests in 0.18 msec all ok
ocsp:
OCSP request check w/o next_update w/o max_age ran 9 tests all ok
OCSP request check w/o next_update with max_age ran 9 tests all ok
OCSP request check with next_update w/o max_age ran 12 tests all ok
OCSP request check with next_update with max_age ran 12 tests all ok
OCSP request encoding ran 3 tests all ok
OCSP request softfail check ran 3 tests all ok
OCSP response certificate access ran 3 tests all ok
OCSP response parsing ran 7 tests all ok
octetstring:
OctetString ran 14 tests all ok
oid:
OID add ran 3 tests all ok
OID add and lookup ran 5 tests all ok
OID add string ran 3 tests all ok
os_utils:
OS::get_cpu_cycle_counter ran 1 tests all ok
OS::get_cpu_total/OS::get_cpu_available ran 1 tests all ok
OS::get_high_resolution_clock ran 2 tests all ok
OS::get_process_id ran 2 tests all ok
OS::get_system_timestamp_ns ran 2 tests all ok
OS::run_cpu_instruction_probe ran 2 tests all ok
otp_hotp:
HOTP SHA-1 ran 180 tests in 8.24 msec all ok
HOTP SHA-256 ran 54 tests in 4.00 msec all ok
HOTP SHA-512 ran 54 tests in 5.88 msec all ok
otp_totp:
TOTP SHA-1 ran 24 tests in 0.17 msec all ok
package_transform:
Package transform ran 762 tests all ok
passhash9:
passhash9 ran 17 tests in 3.27 sec all ok
pem:
PEM encoding ran 5 tests all ok
pgp_s2k_iter:
PGP_S2K iteration encoding ran 2032132 tests all ok
pk_pad_emsa_unit:
EMSA_name_tests ran 10 tests all ok
pk_workfactor:
DL_Exponent_Size work factor calculation ran 6 tests in 0.02 msec all ok
RSA_Strength work factor calculation ran 8 tests in 0.04 msec all ok
pkcs_hash_id:
PKCS hash id for MD5 ran 2 tests all ok
PKCS hash id for RIPEMD-160 ran 2 tests all ok
PKCS hash id for SHA-160 ran 2 tests all ok
PKCS hash id for SHA-224 ran 2 tests all ok
PKCS hash id for SHA-256 ran 2 tests all ok
PKCS hash id for SHA-3(224) ran 2 tests all ok
PKCS hash id for SHA-3(256) ran 2 tests all ok
PKCS hash id for SHA-3(384) ran 2 tests all ok
PKCS hash id for SHA-3(512) ran 2 tests all ok
PKCS hash id for SHA-384 ran 2 tests all ok
PKCS hash id for SHA-512 ran 2 tests all ok
PKCS hash id for SHA-512-256 ran 2 tests all ok
PKCS hash id for SM3 ran 2 tests all ok
PKCS hash id for Tiger(24,3) ran 2 tests all ok
poly_dbl:
Polynomial doubling ran 82 tests in 0.15 msec all ok
psk_db:
PSK_DB ran 20 tests all ok
PSK_DB SQL ran 28 tests all ok
pwdhash:
Pwdhash Argon2d ran 1 tests in 509.42 msec all ok
Pwdhash Argon2i ran 1 tests in 524.97 msec all ok
Pwdhash Argon2id ran 1 tests in 542.68 msec all ok
Pwdhash Bcrypt-PBKDF ran 1 tests in 266.62 msec all ok
Pwdhash OpenPGP-S2K(SHA-384) ran 1 tests in 660.71 msec all ok
Pwdhash PBKDF2(SHA-256) ran 1 tests in 504.45 msec all ok
Pwdhash Scrypt ran 1 tests in 300.34 msec all ok
rdrand_rng:
RDRAND_RNG ran 1 tests all ok
rfc3394:
RFC3394 keywrap ran 12 tests in 0.11 msec all ok
rfc6979:
RFC 6979 nonce generation ran 8 tests in 0.42 msec all ok
roughtime:
roughtime chain ran 14 tests all ok
roughtime nonce ran 4 tests all ok
roughtime server_information ran 14 tests all ok
roughtime_nonce_from_blind:
roughtime nonce_from_blind ran 2 tests in 0.04 msec all ok
roughtime_request:
roughtime request ran 2 tests in 0.04 msec all ok
roughtime_response:
roughtime response ran 23 tests in 5.52 msec all ok
rsa_blinding:
RSA blinding ran 450 tests all ok
rsa_decrypt:
RSA/OAEP(SHA-224,MGF1(SHA-256)) decryption ran 6 tests in 247.39 msec all ok
RSA/OAEP(SHA-256,MGF1(SHA-1)) decryption ran 6 tests in 247.72 msec all ok
RSA/OAEP(SHA-256,MGF1(SHA-512)) decryption ran 6 tests in 247.62 msec all ok
RSA/OAEP(SHA-512,MGF1(SHA-1)) decryption ran 6 tests in 247.55 msec all ok
RSA/OAEP(SHA-512,MGF1(SHA-512),TCPA) decryption ran 1 tests in 40.17 msec all ok
rsa_encrypt:
RSA/EME-PKCS1-v1_5 encryption ran 90 tests in 94.92 msec all ok
RSA/OAEP(SHA-1) encryption ran 342 tests in 757.71 msec all ok
RSA/Raw encryption ran 1420 tests in 784.42 msec all ok
rsa_kem:
RSA/KDF1-18033(SHA-1) KEM ran 6 tests in 22.94 msec all ok
RSA/KDF1-18033(SHA-256) KEM ran 6 tests in 25.90 msec all ok
RSA/KDF1-18033(SHA-512) KEM ran 3 tests in 19.79 msec all ok
RSA/KDF2(SHA-1) KEM ran 6 tests in 22.48 msec all ok
RSA/KDF2(SHA-256) KEM ran 6 tests in 20.01 msec all ok
RSA/KDF2(SHA-512) KEM ran 3 tests in 18.55 msec all ok
rsa_keygen:
RSA 1024 keygen ran 54 tests in 1.49 sec all ok
RSA 1280 keygen ran 54 tests in 2.79 sec all ok
rsa_pss:
RSA/PSSR(SHA-224,MGF1,15) signature generation ran 170 tests in 301.98 msec all ok
RSA/PSSR(SHA-224,MGF1,28) signature generation ran 170 tests in 744.88 msec all ok
RSA/PSSR(SHA-256,MGF1,20) signature generation ran 170 tests in 309.45 msec all ok
RSA/PSSR(SHA-256,MGF1,32) signature generation ran 170 tests in 726.53 msec all ok
RSA/PSSR(SHA-384,MGF1,25) signature generation ran 170 tests in 307.54 msec all ok
RSA/PSSR(SHA-384,MGF1,48) signature generation ran 170 tests in 729.73 msec all ok
RSA/PSSR(SHA-512,MGF1,30) signature generation ran 170 tests in 310.10 msec all ok
RSA/PSSR(SHA-512,MGF1,62) signature generation ran 170 tests in 703.25 msec all ok
rsa_pss_raw:
RSA/PSSR_Raw(SHA-224,MGF1,15) signature generation ran 170 tests in 305.82 msec all ok
RSA/PSSR_Raw(SHA-224,MGF1,28) signature generation ran 170 tests in 729.17 msec all ok
RSA/PSSR_Raw(SHA-256,MGF1,20) signature generation ran 170 tests in 313.66 msec all ok
RSA/PSSR_Raw(SHA-256,MGF1,32) signature generation ran 170 tests in 717.47 msec all ok
RSA/PSSR_Raw(SHA-384,MGF1,25) signature generation ran 170 tests in 310.02 msec all ok
RSA/PSSR_Raw(SHA-384,MGF1,48) signature generation ran 170 tests in 746.76 msec all ok
RSA/PSSR_Raw(SHA-512,MGF1,30) signature generation ran 170 tests in 309.78 msec all ok
RSA/PSSR_Raw(SHA-512,MGF1,62) signature generation ran 170 tests in 735.07 msec all ok
rsa_sign:
RSA/EMSA1(SHA-1) signature generation ran 51 tests in 17.54 msec all ok
RSA/EMSA2(RIPEMD-160) signature generation ran 68 tests in 39.41 msec all ok
RSA/EMSA2(SHA-1) signature generation ran 34 tests in 15.52 msec all ok
RSA/EMSA2(SHA-224) signature generation ran 68 tests in 39.85 msec all ok
RSA/EMSA2(SHA-256) signature generation ran 68 tests in 37.43 msec all ok
RSA/EMSA2(SHA-384) signature generation ran 68 tests in 37.91 msec all ok
RSA/EMSA2(SHA-512) signature generation ran 68 tests in 40.02 msec all ok
RSA/EMSA2(Whirlpool) signature generation ran 68 tests in 38.25 msec all ok
RSA/EMSA3(MD5) signature generation ran 153 tests in 245.86 msec all ok
RSA/EMSA3(RIPEMD-160) signature generation ran 68 tests in 47.79 msec all ok
RSA/EMSA3(Raw) signature generation ran 85 tests in 53.51 msec all ok
RSA/EMSA3(Raw,MD5) signature generation ran 17 tests in 7.13 msec all ok
RSA/EMSA3(SHA-224) signature generation ran 51 tests in 41.35 msec all ok
RSA/EMSA3(SHA-256) signature generation ran 102 tests in 78.03 msec all ok
RSA/EMSA3(SHA-384) signature generation ran 68 tests in 39.50 msec all ok
RSA/EMSA3(SHA-512) signature generation ran 68 tests in 40.79 msec all ok
RSA/EMSA3(Tiger) signature generation ran 68 tests in 40.25 msec all ok
RSA/EMSA4(SHA-1) signature generation ran 510 tests in 312.22 msec all ok
RSA/ISO_9796_DS2(RIPEMD-160) signature generation ran 17 tests in 7.58 msec all ok
RSA/ISO_9796_DS2(SHA-1,imp) signature generation ran 17 tests in 7.53 msec all ok
RSA/ISO_9796_DS3(SHA-1,exp) signature generation ran 17 tests in 7.33 msec all ok
RSA/ISO_9796_DS3(SHA-1,imp) signature generation ran 17 tests in 8.01 msec all ok
RSA/PKCS1v15(SHA-1) signature generation ran 170 tests in 59.11 msec all ok
rsa_verify:
RSA/EMSA4(SHA-1) signature verification ran 196 tests in 27.10 msec all ok
RSA/EMSA_PKCS1(SHA-256) signature verification ran 14 tests in 1.41 msec all ok
RSA/ISO_9796_DS2(RIPEMD-160,exp) signature verification ran 14 tests in 1.20 msec all ok
RSA/ISO_9796_DS2(RIPEMD-160,imp) signature verification ran 14 tests in 1.05 msec all ok
RSA/ISO_9796_DS3(RIPEMD-160,imp) signature verification ran 14 tests in 1.20 msec all ok
RSA/ISO_9796_DS3(SHA-1,exp) signature verification ran 14 tests in 1.17 msec all ok
RSA/PSSR(RIPEMD-160) signature verification ran 56 tests in 6.52 msec all ok
RSA/PSSR(SHA-1) signature verification ran 966 tests in 177.37 msec all ok
RSA/PSSR(SHA-224) signature verification ran 182 tests in 74.19 msec all ok
RSA/PSSR(SHA-256) signature verification ran 182 tests in 63.91 msec all ok
RSA/PSSR(SHA-384) signature verification ran 126 tests in 56.45 msec all ok
RSA/PSSR(SHA-512) signature verification ran 126 tests in 55.84 msec all ok
RSA/Raw signature verification ran 14 tests in 4.33 msec all ok
rsa_verify_invalid:
RSA/EMSA4(SHA-1) verify invalid signature ran 90 tests in 103.40 msec all ok
RSA/EMSA4(SHA-224) verify invalid signature ran 90 tests in 100.64 msec all ok
RSA/EMSA4(SHA-256) verify invalid signature ran 90 tests in 102.68 msec all ok
RSA/EMSA4(SHA-384) verify invalid signature ran 90 tests in 102.45 msec all ok
RSA/EMSA4(SHA-512) verify invalid signature ran 90 tests in 105.75 msec all ok
RSA/EMSA_PKCS1(SHA-256) verify invalid signature ran 282 tests in 93.89 msec all ok
scrypt:
scrypt ran 26 tests in 1.57 sec all ok
simd_32:
SIMD_4x32 ran 4800 tests all ok
siv_ad:
AES-128/SIV ran 3 tests in 0.11 msec all ok
AES-192/SIV ran 1 tests in 0.02 msec all ok
AES-256/SIV ran 1 tests in 0.02 msec all ok
sm2_enc:
SM2/SHA-256 encryption ran 5 tests in 10.73 msec all ok
SM2/SM3 encryption ran 20 tests in 42.31 msec all ok
sm2_keygen:
SM2 secp256r1 keygen ran 27 tests in 196.41 msec all ok
SM2 sm2p256v1 keygen ran 27 tests in 200.58 msec all ok
sm2_sig:
SM2/ALICE123@YAHOO.COM,Raw signature generation ran 9 tests in 18.03 msec all ok
SM2/ALICE123@YAHOO.COM,SHA-256 signature generation ran 9 tests in 17.89 msec all ok
SM2/ALICE123@YAHOO.COM,SM3 signature generation ran 9 tests in 18.31 msec all ok
SM2/sm2_p256_test@example.com,SHA-256 signature generation ran 9 tests in 7.60 msec all ok
SM2/sm2_p256_test@example.com,SM3 signature generation ran 9 tests in 7.71 msec all ok
SM2/sm2test@example.com,SHA-256 signature generation ran 9 tests in 8.50 msec all ok
SM2/sm2test@example.com,SM3 signature generation ran 9 tests in 8.65 msec all ok
sodium:
crypto_aead_chacha20poly1305 ran 13 tests all ok
crypto_aead_chacha20poly1305_ietf ran 13 tests all ok
crypto_aead_xchacha20poly1305 ran 13 tests all ok
crypto_auth_hmacsha256 ran 3 tests all ok
crypto_auth_hmacsha512 ran 4 tests all ok
crypto_auth_hmacsha512256 ran 3 tests all ok
crypto_box_curve25519xsalsa20poly1305 ran 14 tests all ok
crypto_hash_sha256 ran 1 tests all ok
crypto_hash_sha512 ran 1 tests all ok
crypto_onetimeauth_poly1305 ran 4 tests all ok
crypto_shorthash_siphash24 ran 1 tests all ok
crypto_sign_ed25519 ran 8 tests all ok
crypto_stream_chacha20 ran 4 tests all ok
crypto_stream_salsa20 ran 2 tests all ok
crypto_stream_xchacha20 ran 2 tests all ok
crypto_stream_xsalsa20 ran 2 tests all ok
randombytes_buf_deterministic ran 1 tests all ok
secretbox_xsalsa20poly1305 ran 9 tests all ok
sodium math utils ran 16 tests all ok
sodium_malloc ran 1 tests all ok
srp6:
SRP6 ran 1 tests all ok
srp6_kat:
SRP6a ran 192 tests in 954.62 msec all ok
system_rng:
System_RNG ran 3 tests all ok
testcode:
Test Framework ran 45 tests all ok
thread_pool:
Thread_Pool ran 100 tests all ok
tls:
DTLS v1.0 3DES ECDH ran 96 tests in 23.02 msec all ok
DTLS v1.0 3DES RSA ran 96 tests in 29.51 msec all ok
DTLS v1.0 AES-128 ECDH ran 96 tests in 21.41 msec all ok
DTLS v1.0 AES-128 RSA ran 96 tests in 27.13 msec all ok
DTLS v1.0 Camellia-128 RSA ran 96 tests in 27.73 msec all ok
DTLS v1.0 Camellia-256 RSA SHA-2 ran 96 tests in 27.71 msec all ok
DTLS v1.0 SEED RSA ran 96 tests in 28.10 msec all ok
DTLS v1.0 SRP6 AES ran 44 tests in 16.79 msec all ok
DTLS v1.2 3DES ECDH ran 96 tests in 23.03 msec all ok
DTLS v1.2 3DES RSA ran 96 tests in 29.32 msec all ok
DTLS v1.2 AES-128 DH ran 47 tests in 260.47 msec all ok
DTLS v1.2 AES-128 DHE_PSK ran 47 tests in 523.01 msec all ok
DTLS v1.2 AES-128 DSA ran 46 tests in 2.91 msec all ok
DTLS v1.2 AES-128 ECDH ran 96 tests in 22.40 msec all ok
DTLS v1.2 AES-128 ECDHE_PSK ran 47 tests in 3.00 msec all ok
DTLS v1.2 AES-128 RSA ran 96 tests in 28.24 msec all ok
DTLS v1.2 AES-128/CCM PSK ran 47 tests in 2.22 msec all ok
DTLS v1.2 AES-128/CCM-8 PSK ran 47 tests in 12.23 msec all ok
DTLS v1.2 AES-128/GCM DSA ran 48 tests in 754.09 msec all ok
DTLS v1.2 AES-128/GCM ECDH ran 48 tests in 10.86 msec all ok
DTLS v1.2 AES-128/GCM ECDH RSA ran 48 tests in 13.85 msec all ok
DTLS v1.2 AES-128/GCM ECDH no OCSP ran 48 tests in 10.51 msec all ok
DTLS v1.2 AES-128/GCM FFDHE-2048 ran 47 tests in 363.95 msec all ok
DTLS v1.2 AES-128/GCM PSK ran 47 tests in 2.04 msec all ok
DTLS v1.2 AES-128/GCM RSA ran 48 tests in 14.05 msec all ok
DTLS v1.2 AES-128/GCM bp256r1 ran 48 tests in 18.96 msec all ok
DTLS v1.2 AES-128/GCM point compression ran 48 tests in 10.73 msec all ok
DTLS v1.2 AES-128/GCM x25519 ran 48 tests in 10.59 msec all ok
DTLS v1.2 AES-128/OCB ECDH ran 47 tests in 16.56 msec all ok
DTLS v1.2 AES-256/GCM CECPQ1 ran 48 tests in 14.81 msec all ok
DTLS v1.2 AES-256/GCM client certs ran 56 tests in 38.38 msec all ok
DTLS v1.2 AES-256/GCM p521 ran 48 tests in 24.13 msec all ok
DTLS v1.2 AES-256/GCM secp112r1 ran 47 tests in 27.89 msec all ok
DTLS v1.2 AES-256/OCB CECPQ1 ran 48 tests in 14.87 msec all ok
DTLS v1.2 AES-256/OCB CECPQ1 RSA ran 48 tests in 17.70 msec all ok
DTLS v1.2 ARIA ECDH ran 48 tests in 10.93 msec all ok
DTLS v1.2 Camellia-128 RSA ran 96 tests in 27.94 msec all ok
DTLS v1.2 Camellia-128/GCM ECDH ran 48 tests in 11.24 msec all ok
DTLS v1.2 Camellia-256 RSA SHA-2 ran 96 tests in 36.64 msec all ok
DTLS v1.2 Camellia-256 SHA-2 ran 48 tests in 14.49 msec all ok
DTLS v1.2 ChaCha20Poly1305 CECPQ1 ran 48 tests in 17.78 msec all ok
DTLS v1.2 ChaCha20Poly1305 ECDH ran 47 tests in 6.69 msec all ok
DTLS v1.2 SEED RSA ran 96 tests in 27.66 msec all ok
DTLS v1.2 SRP6 AES ran 44 tests in 16.82 msec all ok
TLS v1.0 3DES ECDH ran 88 tests in 22.44 msec all ok
TLS v1.0 3DES RSA ran 88 tests in 29.75 msec all ok
TLS v1.0 AES-128 ECDH ran 86 tests in 13.35 msec all ok
TLS v1.0 AES-128 RSA ran 87 tests in 21.38 msec all ok
TLS v1.0 Camellia-128 RSA ran 88 tests in 26.81 msec all ok
TLS v1.0 Camellia-256 RSA SHA-2 ran 88 tests in 27.88 msec all ok
TLS v1.0 SEED RSA ran 88 tests in 27.89 msec all ok
TLS v1.0 SRP6 AES ran 44 tests in 16.86 msec all ok
TLS v1.1 3DES ECDH ran 88 tests in 22.50 msec all ok
TLS v1.1 3DES RSA ran 88 tests in 30.30 msec all ok
TLS v1.1 AES-128 ECDH ran 88 tests in 21.34 msec all ok
TLS v1.1 AES-128 RSA ran 88 tests in 26.95 msec all ok
TLS v1.1 Camellia-128 RSA ran 88 tests in 27.45 msec all ok
TLS v1.1 Camellia-256 RSA SHA-2 ran 88 tests in 27.13 msec all ok
TLS v1.1 SEED RSA ran 88 tests in 27.44 msec all ok
TLS v1.1 SRP6 AES ran 44 tests in 16.61 msec all ok
TLS v1.2 3DES ECDH ran 88 tests in 23.08 msec all ok
TLS v1.2 3DES RSA ran 88 tests in 28.68 msec all ok
TLS v1.2 AES-128 DH ran 43 tests in 260.19 msec all ok
TLS v1.2 AES-128 DHE_PSK ran 43 tests in 357.32 msec all ok
TLS v1.2 AES-128 DSA ran 44 tests in 748.68 msec all ok
TLS v1.2 AES-128 ECDH ran 88 tests in 21.83 msec all ok
TLS v1.2 AES-128 ECDHE_PSK ran 43 tests in 2.99 msec all ok
TLS v1.2 AES-128 RSA ran 88 tests in 27.30 msec all ok
TLS v1.2 AES-128/CCM PSK ran 43 tests in 2.27 msec all ok
TLS v1.2 AES-128/CCM-8 PSK ran 43 tests in 1.96 msec all ok
TLS v1.2 AES-128/GCM DSA ran 43 tests in 372.01 msec all ok
TLS v1.2 AES-128/GCM ECDH ran 44 tests in 10.92 msec all ok
TLS v1.2 AES-128/GCM ECDH RSA ran 44 tests in 13.74 msec all ok
TLS v1.2 AES-128/GCM ECDH no OCSP ran 44 tests in 10.50 msec all ok
TLS v1.2 AES-128/GCM FFDHE-2048 ran 44 tests in 821.28 msec all ok
TLS v1.2 AES-128/GCM PSK ran 43 tests in 12.24 msec all ok
TLS v1.2 AES-128/GCM RSA ran 44 tests in 12.84 msec all ok
TLS v1.2 AES-128/GCM bp256r1 ran 44 tests in 18.65 msec all ok
TLS v1.2 AES-128/GCM point compression ran 44 tests in 10.61 msec all ok
TLS v1.2 AES-128/GCM x25519 ran 44 tests in 10.29 msec all ok
TLS v1.2 AES-128/OCB ECDH ran 43 tests in 6.04 msec all ok
TLS v1.2 AES-256/GCM CECPQ1 ran 44 tests in 12.11 msec all ok
TLS v1.2 AES-256/GCM client certs ran 51 tests in 11.14 msec all ok
TLS v1.2 AES-256/GCM p521 ran 44 tests in 23.91 msec all ok
TLS v1.2 AES-256/GCM secp112r1 ran 43 tests in 7.53 msec all ok
TLS v1.2 AES-256/OCB CECPQ1 ran 44 tests in 12.48 msec all ok
TLS v1.2 AES-256/OCB CECPQ1 RSA ran 44 tests in 15.27 msec all ok
TLS v1.2 ARIA ECDH ran 44 tests in 10.67 msec all ok
TLS v1.2 Camellia-128 RSA ran 88 tests in 27.83 msec all ok
TLS v1.2 Camellia-128/GCM ECDH ran 44 tests in 11.09 msec all ok
TLS v1.2 Camellia-256 RSA SHA-2 ran 88 tests in 27.81 msec all ok
TLS v1.2 Camellia-256 SHA-2 ran 43 tests in 8.33 msec all ok
TLS v1.2 ChaCha20Poly1305 CECPQ1 ran 44 tests in 15.55 msec all ok
TLS v1.2 ChaCha20Poly1305 ECDH ran 43 tests in 16.38 msec all ok
TLS v1.2 SEED RSA ran 88 tests in 27.71 msec all ok
TLS v1.2 SRP6 AES ran 44 tests in 16.62 msec all ok
TLS v1.2 Strict policy ran 44 tests in 11.19 msec all ok
TLS v1.2 Suite B ran 44 tests in 11.44 msec all ok
tls_alert_strings:
TLS::Alert::type_string ran 33 tests all ok
tls_algo_strings:
TLS::Auth_Method ran 10 tests all ok
TLS::Kex_Algo ran 16 tests all ok
TLS::Signature_Scheme ran 15 tests all ok
tls_asio_stream:
async TLS handshake ran 3 tests all ok
async TLS handshake error ran 2 tests all ok
async TLS handshake throw ran 2 tests all ok
async read_some buffer sequence ran 3 tests all ok
async read_some error ran 2 tests all ok
async read_some into zero-size buffer ran 2 tests all ok
async read_some success ran 3 tests all ok
async read_some throw ran 2 tests all ok
async write_some buffer sequence ran 5 tests all ok
async write_some error ran 2 tests all ok
async write_some success ran 3 tests all ok
async write_some throw ran 2 tests all ok
sync TLS handshake ran 1 tests all ok
sync TLS handshake error ran 4 tests all ok
sync read_some buffer sequence ran 3 tests all ok
sync read_some error ran 2 tests all ok
sync read_some into zero-size buffer ran 2 tests all ok
sync read_some success ran 3 tests all ok
sync read_some throw ran 2 tests all ok
sync write_some buffer sequence ran 5 tests all ok
sync write_some error ran 2 tests all ok
sync write_some success ran 3 tests all ok
sync write_some throw ran 2 tests all ok
sync write_some without handshake fails gracefully ran 1 tests all ok
tls_cbc:
TLS CBC ran 10 tests in 0.15 msec all ok
tls_cbc_padding:
TLS CBC padding check ran 22 tests in 0.18 msec all ok
tls_ciphersuites:
TLS::Ciphersuite ran 366 tests all ok
tls_dtls_reconnect:
DTLS reconnection ran 8 tests all ok
tls_messages:
alert parsing ran 9 tests in 0.07 msec all ok
cert_status parsing ran 7 tests in 0.13 msec all ok
cert_verify parsing ran 8 tests in 0.09 msec all ok
client_hello parsing ran 18 tests in 0.31 msec all ok
hello_request parsing ran 2 tests in 0.02 msec all ok
hello_verify parsing ran 5 tests in 0.06 msec all ok
hello_verify_request construction ran 1 tests all ok
new_session_ticket parsing ran 5 tests in 0.04 msec all ok
server_hello parsing ran 12 tests in 0.12 msec all ok
tls_policy:
TLS Policy DH key verification ran 1 tests all ok
TLS Policy DSA key verification ran 2 tests all ok
TLS Policy ECDH key verification ran 2 tests all ok
TLS Policy ECDSA key verification ran 2 tests all ok
TLS Policy RSA key verification ran 2 tests all ok
tls_policy_text:
TLS Policy ran 6 tests all ok
tls_session:
TLS::Session ran 7 tests all ok
tls_stream_integration:
Server ran 56 tests all ok
Test Close Without Shutdown ran 5 tests all ok
Test Close Without Shutdown Sync ran 3 tests all ok
Test Conversation ran 8 tests all ok
Test Conversation Sync ran 8 tests all ok
Test Eager Close ran 4 tests all ok
Test Eager Close Sync ran 4 tests all ok
Test No Shutdown Response ran 5 tests all ok
Test No Shutdown Response Sync ran 5 tests all ok
tss_generation:
TSS ran 63 tests in 0.73 msec all ok
tss_recovery:
TSS ran 8 tests in 0.18 msec all ok
uri:
uri constructors ran 3 tests all ok
uri factories ran 53 tests all ok
uri to_string ran 5 tests all ok
util_dates:
Date parsing ran 81 tests in 0.18 msec all ok
calendar_point::to_string ran 1 tests all ok
util_read_kv:
read_kv ran 45 tests in 0.25 msec all ok
uuid:
UUID ran 12 tests all ok
versioning:
Versions ran 6 tests all ok
x509_datastore:
Data_Store ran 16 tests all ok
x509_dn_cmp:
X509_DN comparisons ran 30 tests in 0.27 msec all ok
x509_path_bsi:
BSI path validation ran 788 tests in 5.38 sec all ok
x509_path_extended:
Extended X509 path validation ran 3 tests in 21.88 msec all ok
x509_path_name_constraint:
X509v3 Name Constraints: Invalid_DN_Name_Constraint.crt ran 1 tests all ok
X509v3 Name Constraints: Invalid_Email_Name_Constraint.crt ran 1 tests all ok
X509v3 Name Constraints: Invalid_IP_Name_Constraint.crt ran 1 tests all ok
X509v3 Name Constraints: Valid_DNS_Name_Constraint.crt ran 1 tests all ok
X509v3 Name Constraints: Valid_DN_Name_Constraint.crt ran 1 tests all ok
X509v3 Name Constraints: Valid_IP_Name_Constraint.crt ran 1 tests all ok
x509_path_nist:
NIST path validation ran 71 tests in 343.74 msec all ok
x509_path_rsa_pss:
RSA-PSS X509 signature validation ran 118 tests in 1.19 sec all ok
x509_path_with_ocsp:
path check with ocsp w/o next_update w/o max_age ran 3 tests all ok
path check with ocsp w/o next_update with max_age ran 3 tests all ok
path check with ocsp with next_update w/o max_age ran 4 tests all ok
path check with ocsp with next_update with max_age ran 4 tests all ok
x509_path_x509test:
X509test path validation ran 111 tests in 136.40 msec all ok
X509test path validation softfail ran 4 tests in 2.61 msec all ok
x509_path_xmss:
XMSS path validation with certificate created by BouncyCastle ran 1 tests all ok
XMSS path validation with certificate created by ISARA corp ran 1 tests all ok
x509_unit:
CRL DN name ran 2 tests all ok
Certificate_Status_Code to_string ran 89 tests all ok
PKCS10 extensions ran 28 tests all ok
RSA OAEP decoding ran 2 tests all ok
X509 Custom DN ran 70 tests all ok
X509 Extensions ran 77 tests all ok
X509 Extensions API ran 16 tests all ok
X509 GOST-2012 certificates ran 1 tests all ok
X509 Hashes ran 140 tests all ok
X509 Padding Config ran 11 tests all ok
X509 Self Issued ran 7 tests all ok
X509 Time ran 75 tests all ok
X509 Unit ran 210 tests all ok
X509 Usage ran 72 tests all ok
X509 Valid Constraints ran 57 tests all ok
X509 object uninitialized access ran 2 tests all ok
X509 with PKIX.AuthorityInformationAccess extension ran 9 tests all ok
X509 with UCS-2 (BMPString) encoded fields ran 3 tests all ok
X509 with UTF-8 encoded fields ran 4 tests all ok
X509_Certificate list decode ran 3 tests all ok
x509_v1_ca:
Verifying using v1 certificate ran 2 tests all ok
xmss_keygen:
XMSS XMSS-SHA2_10_256 keygen ran 27 tests in 2.56 sec all ok
xmss_sign:
XMSS/SHAKE_10_256 signature generation ran 27 tests in 8.37 sec all ok
xmss_verify:
XMSS/SHA2_10_256 signature verification ran 21 tests in 73.38 msec all ok
XMSS/SHA2_10_512 signature verification ran 21 tests in 349.01 msec all ok
XMSS/SHA2_16_256 signature verification ran 21 tests in 72.78 msec all ok
XMSS/SHA2_16_512 signature verification ran 21 tests in 245.68 msec all ok
XMSS/SHA2_20_256 signature verification ran 21 tests in 105.09 msec all ok
XMSS/SHA2_20_512 signature verification ran 21 tests in 301.31 msec all ok
XMSS/SHAKE_10_256 signature verification ran 21 tests in 76.51 msec all ok
XMSS/SHAKE_10_512 signature verification ran 21 tests in 375.93 msec all ok
XMSS/SHAKE_16_256 signature verification ran 21 tests in 129.79 msec all ok
XMSS/SHAKE_16_512 signature verification ran 21 tests in 334.65 msec all ok
XMSS/SHAKE_20_256 signature verification ran 21 tests in 162.19 msec all ok
XMSS/SHAKE_20_512 signature verification ran 21 tests in 465.46 msec all ok
xmss_verify_invalid:
XMSS/SHA2_10_256 verify invalid signature ran 28 tests in 47.39 msec all ok
XMSS/SHA2_10_512 verify invalid signature ran 28 tests in 134.47 msec all ok
XMSS/SHA2_16_256 verify invalid signature ran 28 tests in 57.34 msec all ok
XMSS/SHA2_16_512 verify invalid signature ran 28 tests in 200.91 msec all ok
XMSS/SHA2_20_256 verify invalid signature ran 28 tests in 58.49 msec all ok
XMSS/SHA2_20_512 verify invalid signature ran 28 tests in 161.35 msec all ok
XMSS/SHAKE_10_256 verify invalid signature ran 28 tests in 50.57 msec all ok
XMSS/SHAKE_10_512 verify invalid signature ran 28 tests in 250.71 msec all ok
XMSS/SHAKE_16_256 verify invalid signature ran 28 tests in 63.63 msec all ok
XMSS/SHAKE_16_512 verify invalid signature ran 28 tests in 262.80 msec all ok
XMSS/SHAKE_20_256 verify invalid signature ran 28 tests in 103.82 msec all ok
XMSS/SHAKE_20_512 verify invalid signature ran 28 tests in 300.42 msec all ok
Tests complete ran 2726353 tests in 46.13 sec all tests ok
+ RPM_EC=0
++ jobs -p
+ exit 0
Processing files: botan2-2.14.0-1.mga8.x86_64
Executing(%license): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.MDtDxq
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ LICENSEDIR=/home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/botan2
+ export LC_ALL=C
+ LC_ALL=C
+ export LICENSEDIR
+ /usr/bin/mkdir -p /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/botan2
+ cp -pr license.txt /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/botan2
+ RPM_EC=0
++ jobs -p
+ exit 0
Provides: botan2 = 2.14.0-1.mga8 botan2(x86-64) = 2.14.0-1.mga8
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Requires: libboost_system.so.1.72.0()(64bit) libbotan-2.so.13()(64bit) libbz2.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libc.so.6(GLIBC_2.8)(64bit) libc.so.6(GLIBC_2.9)(64bit) libcrypto.so.1.1()(64bit) libdl.so.2()(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) liblzma.so.5()(64bit) libm.so.6()(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libpthread.so.0(GLIBC_2.3.3)(64bit) librt.so.1()(64bit) libsqlite3.so.0()(64bit) libstdc++.so.6()(64bit) libstdc++.so.6(CXXABI_1.3)(64bit) libstdc++.so.6(GLIBCXX_3.4)(64bit) libstdc++.so.6(GLIBCXX_3.4.11)(64bit) libstdc++.so.6(GLIBCXX_3.4.14)(64bit) libstdc++.so.6(GLIBCXX_3.4.15)(64bit) libstdc++.so.6(GLIBCXX_3.4.19)(64bit) libstdc++.so.6(GLIBCXX_3.4.20)(64bit) libstdc++.so.6(GLIBCXX_3.4.21)(64bit) libstdc++.so.6(GLIBCXX_3.4.22)(64bit) libstdc++.so.6(GLIBCXX_3.4.26)(64bit) libstdc++.so.6(GLIBCXX_3.4.9)(64bit) libz.so.1()(64bit)
Processing files: lib64botan2-devel-2.14.0-1.mga8.x86_64
Executing(%license): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.ZRINhq
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ LICENSEDIR=/home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/lib64botan2-devel
+ export LC_ALL=C
+ LC_ALL=C
+ export LICENSEDIR
+ /usr/bin/mkdir -p /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/lib64botan2-devel
+ cp -pr license.txt /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/lib64botan2-devel
+ RPM_EC=0
++ jobs -p
+ exit 0
Provides: botan2-devel = 2.14.0-1.mga8 devel(libbotan-2(64bit)) lib64botan2-devel = 2.14.0-1.mga8 lib64botan2-devel(x86-64) = 2.14.0-1.mga8 pkgconfig(botan-2) = 2.14.0
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Requires: devel(libboost_system(64bit)) devel(libbz2(64bit)) devel(libcrypto(64bit)) devel(libdl(64bit)) devel(libgcc_s(64bit)) devel(liblzma(64bit)) devel(libm(64bit)) devel(libsqlite3(64bit)) devel(libstdc++(64bit)) devel(libz(64bit)) pkgconfig
Obsoletes: botan2-devel < 2.6.0-6
Processing files: lib64botan2_13-2.14.0-1.mga8.x86_64
Provides: lib64botan2_13 = 2.14.0-1.mga8 lib64botan2_13(x86-64) = 2.14.0-1.mga8 libbotan-2.so.13()(64bit)
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Requires: ld-linux-x86-64.so.2()(64bit) ld-linux-x86-64.so.2(GLIBC_2.3)(64bit) libboost_system.so.1.72.0()(64bit) libbz2.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.16)(64bit) libc.so.6(GLIBC_2.17)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libc.so.6(GLIBC_2.8)(64bit) libc.so.6(GLIBC_2.9)(64bit) libcrypto.so.1.1()(64bit) libcrypto.so.1.1(OPENSSL_1_1_0)(64bit) libdl.so.2()(64bit) libdl.so.2(GLIBC_2.2.5)(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) liblzma.so.5()(64bit) liblzma.so.5(XZ_5.0)(64bit) libm.so.6()(64bit) libm.so.6(GLIBC_2.2.5)(64bit) libm.so.6(GLIBC_2.29)(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libpthread.so.0(GLIBC_2.3.3)(64bit) librt.so.1()(64bit) libsqlite3.so.0()(64bit) libstdc++.so.6()(64bit) libstdc++.so.6(CXXABI_1.3)(64bit) libstdc++.so.6(CXXABI_1.3.11)(64bit) libstdc++.so.6(CXXABI_1.3.2)(64bit) libstdc++.so.6(CXXABI_1.3.3)(64bit) libstdc++.so.6(CXXABI_1.3.5)(64bit) libstdc++.so.6(GLIBCXX_3.4)(64bit) libstdc++.so.6(GLIBCXX_3.4.11)(64bit) libstdc++.so.6(GLIBCXX_3.4.14)(64bit) libstdc++.so.6(GLIBCXX_3.4.15)(64bit) libstdc++.so.6(GLIBCXX_3.4.17)(64bit) libstdc++.so.6(GLIBCXX_3.4.18)(64bit) libstdc++.so.6(GLIBCXX_3.4.19)(64bit) libstdc++.so.6(GLIBCXX_3.4.20)(64bit) libstdc++.so.6(GLIBCXX_3.4.21)(64bit) libstdc++.so.6(GLIBCXX_3.4.22)(64bit) libstdc++.so.6(GLIBCXX_3.4.26)(64bit) libstdc++.so.6(GLIBCXX_3.4.9)(64bit) libz.so.1()(64bit) libz.so.1(ZLIB_1.2.2)(64bit)
Conflicts: botan2 < 2.6.0-6
Processing files: botan2-doc-2.14.0-1.mga8.noarch
Executing(%license): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.YChGqq
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ LICENSEDIR=/home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/botan2-doc
+ export LC_ALL=C
+ LC_ALL=C
+ export LICENSEDIR
+ /usr/bin/mkdir -p /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/botan2-doc
+ cp -pr license.txt /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/botan2-doc
+ RPM_EC=0
++ jobs -p
+ exit 0
Provides: botan2-doc = 2.14.0-1.mga8
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Processing files: python3-botan2-2.14.0-1.mga8.x86_64
Executing(%license): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.mJfFfs
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ LICENSEDIR=/home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/python3-botan2
+ export LC_ALL=C
+ LC_ALL=C
+ export LICENSEDIR
+ /usr/bin/mkdir -p /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/python3-botan2
+ cp -pr license.txt /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64/usr/share/licenses/python3-botan2
+ RPM_EC=0
++ jobs -p
+ exit 0
Provides: python-botan2 = 2.14.0-1.mga8 python3-botan2 = 2.14.0-1.mga8 python3-botan2(x86-64) = 2.14.0-1.mga8
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Requires: python(abi) = 3.8
Obsoletes: python-botan2 < 2.14.0-1.mga8
Processing files: botan2-debugsource-2.14.0-1.mga8.x86_64
Provides: botan2-debugsource = 2.14.0-1.mga8 botan2-debugsource(x86-64) = 2.14.0-1.mga8
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Processing files: botan2-debuginfo-2.14.0-1.mga8.x86_64
Provides: botan2-debuginfo = 2.14.0-1.mga8 botan2-debuginfo(x86-64) = 2.14.0-1.mga8 debuginfo(build-id) = bcb62f9c874883525392a9963cdd53ee784e3ab3
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Recommends: botan2-debugsource(x86-64) = 2.14.0-1.mga8
Processing files: lib64botan2_13-debuginfo-2.14.0-1.mga8.x86_64
Provides: debuginfo(build-id) = 5b14ef1feb17788b83c38b731337fda70346818f lib64botan2_13-debuginfo = 2.14.0-1.mga8 lib64botan2_13-debuginfo(x86-64) = 2.14.0-1.mga8
Requires(rpmlib): rpmlib(CompressedFileNames) <= 3.0.4-1 rpmlib(FileDigests) <= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) <= 4.0-1
Recommends: botan2-debugsource(x86-64) = 2.14.0-1.mga8
Checking for unpackaged file(s): /usr/lib/rpm/check-files /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64
Wrote: /home/stig/rpmbuild/RPMS/x86_64/botan2-2.14.0-1.mga8.x86_64.rpm
Wrote: /home/stig/rpmbuild/RPMS/x86_64/python3-botan2-2.14.0-1.mga8.x86_64.rpm
Wrote: /home/stig/rpmbuild/RPMS/x86_64/lib64botan2-devel-2.14.0-1.mga8.x86_64.rpm
Wrote: /home/stig/rpmbuild/RPMS/x86_64/lib64botan2_13-2.14.0-1.mga8.x86_64.rpm
Wrote: /home/stig/rpmbuild/RPMS/x86_64/botan2-debugsource-2.14.0-1.mga8.x86_64.rpm
Wrote: /home/stig/rpmbuild/RPMS/noarch/botan2-doc-2.14.0-1.mga8.noarch.rpm
Wrote: /home/stig/rpmbuild/RPMS/x86_64/botan2-debuginfo-2.14.0-1.mga8.x86_64.rpm
Wrote: /home/stig/rpmbuild/RPMS/x86_64/lib64botan2_13-debuginfo-2.14.0-1.mga8.x86_64.rpm
Executing(%clean): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.AZJG3s
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ cd Botan-2.14.0
+ /usr/bin/rm -rf /home/stig/rpmbuild/BUILDROOT/botan2-2.14.0-1.mga8.x86_64
+ RPM_EC=0
++ jobs -p
+ exit 0
Executing(--clean): /bin/sh -e /home/stig/rpmbuild/tmp/rpm-tmp.6x0Oir
+ umask 022
+ cd /home/stig/rpmbuild/BUILD
+ rm -rf Botan-2.14.0
+ RPM_EC=0
++ jobs -p
+ exit 0
D: [iurt_root_command] Success!
